<!-- doc/src/sgml/recovery-config.sgml -->

<chapter id="recovery-config">
<!--
  <title>Recovery Configuration</title>
-->
  <title>リカバリの設定</title>

  <indexterm>
<!--
   <primary>configuration</primary>
   <secondary>of recovery</secondary>
   <tertiary>of a standby server</tertiary>
-->
   <primary>設定</primary>
   <secondary>リカバリの</secondary>
   <tertiary>スタンバイサーバの</tertiary>
  </indexterm>

   <para>
<!--
    This chapter describes the settings available in the
    <filename>recovery.conf</><indexterm><primary>recovery.conf</></>
    file. They apply only for the duration of the
    recovery.  They must be reset for any subsequent recovery you wish to
    perform.  They cannot be changed once recovery has begun.
-->
この章では、<filename>recovery.conf</><indexterm><primary>recovery.conf</></>ファイルにおいて利用できる設定について説明します。
これらの設定は、リカバリをしている間だけ有効となります。
これらの設定は、その次に実行したいリカバリの際にはリセットされなければなりません。
また、これらの設定は一旦リカバリが始まると変更することはできません。
   </para>

   <para>
<!--
     Settings in <filename>recovery.conf</> are specified in the format
     <literal>name = 'value'</>. One parameter is specified per line.
     Hash marks (<literal>#</literal>) designate the rest of the
     line as a comment.  To embed a single quote in a parameter
     value, write two quotes (<literal>''</>).
-->
<filename>recovery.conf</> における設定は <literal>name = 'value'</> の書式を取ります。
各行ごとにひとつのパラメータを記述します。
ハッシュマーク (<literal>#</literal>) は、その行の後続がコメントであることを示します。
シングルクォート文字を記述するためには、連続する二つのクォート文字 (<literal>''</>) を記述します。
   </para>

   <para>
<!--
    A sample file, <filename>share/recovery.conf.sample</>,
    is provided in the installation's <filename>share/</> directory.
-->
インストールディレクトリの <filename>share/</> ディレクトリに、サンプルファイル <filename>share/recovery.conf.sample</> が提供されています。
   </para>

  <sect1 id="archive-recovery-settings">

<!--
    <title>Archive Recovery Settings</title>
-->
    <title>アーカイブリカバリの設定</title>
     <variablelist>

     <varlistentry id="restore-command" xreflabel="restore_command">
      <term><varname>restore_command</varname> (<type>string</type>)
      <indexterm>
<!--
        <primary><varname>restore_command</> recovery parameter</primary>
-->
        <primary><varname>restore_command</> リカバリ用パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        The local shell command to execute to retrieve an archived segment of
        the WAL file series. This parameter is required for archive recovery,
        but optional for streaming replication.
        Any <literal>%f</> in the string is
        replaced by the name of the file to retrieve from the archive,
        and any <literal>%p</> is replaced by the copy destination path name
        on the server.
        (The path name is relative to the current working directory,
        i.e., the cluster's data directory.)
        Any <literal>%r</> is replaced by the name of the file containing the
        last valid restart point. That is the earliest file that must be kept
        to allow a restore to be restartable, so this information can be used
        to truncate the archive to just the minimum required to support
        restarting from the current restore. <literal>%r</> is typically only
        used by warm-standby configurations
        (see <xref linkend="warm-standby">).
        Write <literal>%%</> to embed an actual <literal>%</> character.
-->
連続したWALファイル断片のアーカイブを取得するために実行するシェルコマンドを指定します。
このパラメータはアーカイブリカバリには必須ですが、ストリーミングレプリケーションの場合には必須ではありません。
指定した文字列の中の <literal>%f</> はアーカイブから取得するファイル名に置換され、<literal>%p</> はコピー先サーバのディレクトリパス名に置換されます。
（パス名は、カレントワーキングディレクトリから検索されます。つまりクラスタのデータディレクトリです。）
<literal>%r</> は、有効な最後のリスタートポイントを含むファイル名に置換されます。
これはリスタートを可能にするためのリストア時に必要とされる、保持されているべきもっとも古いファイルとなります。
よってこの情報は、現在のリストアからリスタートするために必要となるように、アーカイブを最小化するために利用することができます。
<literal>%r</> は通常はウォームスタンバイの設定でのみ使用されます (<xref linkend="warm-standby">を参照) 。
<literal>%</> 文字を埋め込むためには、<literal>%%</> と記述してください。
       </para>

       <para>
<!--
        It is important for the command to return a zero exit status
        only if it succeeds.  The command <emphasis>will</> be asked for file
        names that are not present in the archive; it must return nonzero
        when so asked.  Examples:
<programlisting>
restore_command = 'cp /mnt/server/archivedir/%f "%p"'
restore_command = 'copy "C:\\server\\archivedir\\%f" "%p"'  # Windows
</programlisting>
        An exception is that if the command was terminated by a signal (other
        than <systemitem>SIGTERM</systemitem>, which is used as part of a
        database server shutdown) or an error by the shell (such as command
        not found), then recovery will abort and the server will not start up.
-->
コマンドは、成功した時のみ終了コードのゼロを返却することが重要です。
このコマンドは、アーカイブに存在しないファイル名を求める<emphasis>ことがあります</>。
その場合には、非ゼロの値を返却しなければなりません。以下に例を示します。
<programlisting>
restore_command = 'cp /mnt/server/archivedir/%f "%p"'
restore_command = 'copy "C:\\server\\archivedir\\%f" "%p"'  # Windows
</programlisting>
例外は、データベースサーバのシャットダウンの一部として、<systemitem>SIGTERM</systemitem>以外のシグナルでコマンドが終了させられたり、シェルによってエラーが発生した（そのようなコマンドは見つからない）場合で、
その場合はリカバリーは中断され、サーバはスタートアップしなくなります。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="archive-cleanup-command" xreflabel="archive_cleanup_command">
      <term><varname>archive_cleanup_command</varname> (<type>string</type>)
      <indexterm>
<!--
        <primary><varname>archive_cleanup_command</> recovery parameter</primary>
-->
        <primary><varname>archive_cleanup_command</> リカバリ用パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        This optional parameter specifies a shell command that will be executed
        at every restartpoint.  The purpose of
        <varname>archive_cleanup_command</> is to provide a mechanism for
        cleaning up old archived WAL files that are no longer needed by the
        standby server.
        Any <literal>%r</> is replaced by the name of the file containing the
        last valid restart point.
        That is the earliest file that must be <emphasis>kept</> to allow a
        restore to be restartable, and so all files earlier than <literal>%r</>
        may be safely removed.
        This information can be used to truncate the archive to just the
        minimum required to support restart from the current restore.
        The <xref linkend="pgarchivecleanup"> module
        is often used in <varname>archive_cleanup_command</> for
        single-standby configurations, for example:
<programlisting>archive_cleanup_command = 'pg_archivecleanup /mnt/server/archivedir %r'</programlisting>
        Note however that if multiple standby servers are restoring from the
        same archive directory, you will need to ensure that you do not delete
        WAL files until they are no longer needed by any of the servers.
        <varname>archive_cleanup_command</> would typically be used in a
        warm-standby configuration (see <xref linkend="warm-standby">).
        Write <literal>%%</> to embed an actual <literal>%</> character in the
        command.
-->
このオプションのパラメータは、すべてのリスタートポイントで実行されるシェルコマンドを指定します。
<varname>archive_cleanup_command</> の目的は、スタンバイサーバにとって必要とされない古いアーカイブWALファイルをクリーンアップする仕組みを提供することです。
<literal>%r</> は、最後の有効なリスタートポイントを含んでいるWALファイルのファイル名に置換されます。
これはリスタートを可能にするためのリストア時に必要とされる、保持されているべきもっとも古いファイルとなり、これによって<literal>%r</>より前のすべてのファイルは安全に削除されます。
この情報は、現在のリストアからリスタートするために必要となるように、アーカイブを最小化するために利用することができます。
<xref linkend="pgarchivecleanup">モジュールは、単独のスタンバイ構成で<varname>archive_cleanup_command</>によく使用されます。
例：
<programlisting>archive_cleanup_command = 'pg_archivecleanup /mnt/server/archivedir %r'</programlisting>
但し、複数のスタンバイサーバが同一のアーカイブディレクトリからリストアしている場合には、どのサーバからも必要とされなくなるまで削除しないことを担保しなければなりません。
通常、<literal>archive_cleanup_command</> はウォームスタンバイの設定でのみ使用されます (<xref linkend="warm-standby">を参照) 。
<literal>%</> 文字を埋め込むためには、<literal>%%</> と記述してください。
       </para>
       <para>
<!--
        If the command returns a nonzero exit status then a warning log
        message will be written.  An exception is that if the command was
        terminated by a signal or an error by the shell (such as command not
        found), a fatal error will be raised.
-->
コマンドが非ゼロの終了ステータスを返した場合、WARNINGログメッセージが出力されます。
例外は、コマンドがシグナルによって終了させられたか、シェルによってエラーが発生した（そのようなコマンドは見つからない）場合で、
その場合はフェイタルエラーが発生します。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="recovery-end-command" xreflabel="recovery_end_command">
      <term><varname>recovery_end_command</varname> (<type>string</type>)
      <indexterm>
<!--
        <primary><varname>recovery_end_command</> recovery parameter</primary>
-->
        <primary><varname>recovery_end_command</> リカバリ用パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        This parameter specifies a shell command that will be executed once only
        at the end of recovery. This parameter is optional. The purpose of the
        <varname>recovery_end_command</> is to provide a mechanism for cleanup
        following replication or recovery.
        Any <literal>%r</> is replaced by the name of the file containing the
        last valid restart point, like in <xref linkend="archive-cleanup-command">.
-->
このパラメータは、リカバリの終了時に一度だけ実行されるシェルコマンドを指定します。
このパラメータは必須ではありません。
<varname>recovery_end_command</> の目的は、レプリケーションやリカバリ実行後のクリーンアップのメカニズムを提供することです。
<xref linkend="archive-cleanup-command"> と同様に、<literal>%r</> は有効な最後のリスタートポイントを含むファイル名に置換されます。
       </para>
       <para>
<!--
        If the command returns a nonzero exit status then a warning log
        message will be written and the database will proceed to start up
        anyway.  An exception is that if the command was terminated by a
        signal or an error by the shell (such as command not found), the
        database will not proceed with startup.
-->
コマンドが非ゼロの終了ステータスを返した場合、WARNINGログメッセージが出力されますが、データベースはスタートアップ処理を続けます。
例外は、コマンドがシグナルによって終了させられたか、シェルによってエラーが発生した（そのようなコマンドは見つからない）場合で、
その場合はデータベースはスタートアップ処理を継続させません。
       </para>
      </listitem>
     </varlistentry>

    </variablelist>

  </sect1>

  <sect1 id="recovery-target-settings">

<!--
    <title>Recovery Target Settings</title>
-->
    <title>リカバリ対象の設定</title>

     <para>
<!--
      By default, recovery will recover to the end of the WAL log. The
      following parameters can be used to specify an earlier stopping point.
      At most one of <varname>recovery_target</>,
      <varname>recovery_target_name</>, <varname>recovery_target_time</>, or
      <varname>recovery_target_xid</> can be used; if more than one of these
      is specified in the configuration file, the last entry will be used.
-->
デフォルトでは、リカバリはWALログの最後までリカバリします。以下のパラメータは、それより前の停止ポイントを指定するために使う事ができます。
多くの場合、<varname>recovery_target</>、<varname>recovery_target_name</>、<varname>recovery_target_time</>や<varname>recovery_target_xid</>のうち一つが使われますが、
設定ファイルで、２つ以上指定された場合、最後に指定されたものが使われます。
     </para>

     <variablelist>
     <varlistentry id="recovery-target" xreflabel="recovery_target">
      <term><varname>recovery_target</varname><literal> = 'immediate'</literal>
      <indexterm>
<!--
        <primary><varname>recovery_target</> recovery parameter</primary>
-->
        <primary><varname>recovery_target</> リカバリ用パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        This parameter specifies that recovery should end as soon as a
        consistent state is reached, i.e. as early as possible. When restoring
        from an online backup, this means the point where taking the backup
        ended.
-->
このパラメータは、整合性のとれた状態になると、つまりできるだけ早く、リカバリを終了するよう指定します。
オンラインバックアップからリストアした場合、これはバックアップが終了した時点を意味します。
       </para>
       <para>
<!--
        Technically, this is a string parameter, but <literal>'immediate'</>
        is currently the only allowed value.
-->
厳密には、この文字列パラメータは、<literal>'immediate'</>だけが有効な値です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="recovery-target-name" xreflabel="recovery_target_name">
      <term><varname>recovery_target_name</varname> (<type>string</type>)
      <indexterm>
<!--
        <primary><varname>recovery_target_name</> recovery parameter</primary>
-->
        <primary><varname>recovery_target_name</> リカバリ用パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        This parameter specifies the named restore point (created with
        <function>pg_create_restore_point()</>) to which recovery will proceed.
-->
このパラメータは、リカバリを実施するために、（<function>pg_create_restore_point()</> により作成された）名前付けされたリストアポイントを指定します。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="recovery-target-time" xreflabel="recovery_target_time">
      <term><varname>recovery_target_time</varname> (<type>timestamp</type>)
      <indexterm>
<!--
        <primary><varname>recovery_target_time</> recovery parameter</primary>
-->
        <primary><varname>recovery_target_time</> リカバリ用パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        This parameter specifies the time stamp up to which recovery
        will proceed.
        The precise stopping point is also influenced by
        <xref linkend="recovery-target-inclusive">.
-->
このパラメータは、リカバリを実施するタイムスタンプの上限を指定します。
厳密な停止ポイントは、<xref linkend="recovery-target-inclusive"> によっても影響を受けます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="recovery-target-xid" xreflabel="recovery_target_xid">
      <term><varname>recovery_target_xid</varname> (<type>string</type>)
      <indexterm>
<!--
        <primary><varname>recovery_target_xid</> recovery parameter</primary>
-->
        <primary><varname>recovery_target_xid</> リカバリ用パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        This parameter specifies the transaction ID up to which recovery
        will proceed. Keep in mind
        that while transaction IDs are assigned sequentially at transaction
        start, transactions can complete in a different numeric order.
        The transactions that will be recovered are those that committed
        before (and optionally including) the specified one.
        The precise stopping point is also influenced by
        <xref linkend="recovery-target-inclusive">.
-->
このパラメータは、リカバリを進行させるトランザクションIDの上限を指定します。
トランザクションIDはトランザクションの開始時に順番に割り振られ、トランザクションはそれとは異なる順番で完了し得るということを理解しておいてください。
リカバリされるトランザクションは、指定されたものよりも前 (オプションによっては指定されたものも含まれる) にコミットされたものになります。
厳密な停止ポイントは、<xref linkend="recovery-target-inclusive"> によっても影響を受けます。
       </para>
      </listitem>
     </varlistentry>
     </variablelist>

     <para>
<!--
       The following options further specify the recovery target, and affect
       what happens when the target is reached:
-->
以下のオプションはリカバリ対象をより詳細に指定し、リカバリが対象に達した時の動作に影響を与えます。
     </para>

     <variablelist>
     <varlistentry id="recovery-target-inclusive"
                   xreflabel="recovery_target_inclusive">
      <term><varname>recovery_target_inclusive</varname> (<type>boolean</type>)
      <indexterm>
<!--
        <primary><varname>recovery_target_inclusive</> recovery parameter</primary>
-->
        <primary><varname>recovery_target_inclusive</> リカバリ用パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Specifies whether to stop just after the specified recovery target
        (<literal>true</literal>), or just before the recovery target
        (<literal>false</literal>).
        Applies when either <xref linkend="recovery-target-time">
        or <xref linkend="recovery-target-xid"> is specified.
        This setting controls whether transactions
        having exactly the target commit time or ID, respectively, will
        be included in the recovery.  Default is <literal>true</>.
-->
指定したリカバリ対象の後に停止するか (<literal>true</literal>) 、その前に停止するか (<literal>false</literal>) を指定します。
<xref linkend="recovery-target-time"> と <xref linkend="recovery-target-xid"> のどちらが指定されているかに関係なく、双方に適用されます。
この設定は、指定した対象のコミット時間あるいはトランザクションIDのトランザクションが、それぞれリカバリに含まれるかどうかを制御します。
デフォルトは <literal>true</> です。        
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="recovery-target-timeline"
                   xreflabel="recovery_target_timeline">
      <term><varname>recovery_target_timeline</varname> (<type>string</type>)
      <indexterm>
<!--
        <primary><varname>recovery_target_timeline</> recovery parameter</primary>
-->
        <primary><varname>recovery_target_timeline</> リカバリ用パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Specifies recovering into a particular timeline.  The default is
        to recover along the same timeline that was current when the
        base backup was taken. Setting this to <literal>latest</> recovers
        to the latest timeline found in the archive, which is useful in
        a standby server. Other than that you only need to set this parameter
        in complex re-recovery situations, where you need to return to
        a state that itself was reached after a point-in-time recovery.
        See <xref linkend="backup-timelines"> for discussion.
-->
リカバリが作成する個別のタイムラインを指定します。
デフォルトでは、ベースバックアップが取得された際のものと同じタイムラインに沿ってリカバリされます。
これを<literal>latest</>に設定すると、アーカイブ時に見つけた最新のタイムラインに回復します。これはスタンバイサーバで有用です。
この他にこのパラメータが必要となるのは、ポイントインタイムリカバリの実施後に到達したような状態に戻す場合など、複数回に渡ってリカバリするような複雑なリカバリのシチュエーションのみです。
この論考については <xref linkend="backup-timelines"> を参照してください。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="pause-at-recovery-target"
                   xreflabel="pause_at_recovery_target">
      <term><varname>pause_at_recovery_target</varname> (<type>boolean</type>)
      <indexterm>
<!--
        <primary><varname>pause_at_recovery_target</> recovery parameter</primary>
-->
        <primary><varname>pause_at_recovery_target</> リカバリ用パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Specifies whether recovery should pause when the recovery target
        is reached. The default is true.
        This is intended to allow queries to be executed against the
        database to check if this recovery target is the most desirable
        point for recovery. The paused state can be resumed by using
        <function>pg_xlog_replay_resume()</> (see
        <xref linkend="functions-recovery-control-table">), which then
        causes recovery to end. If this recovery target is not the
        desired stopping point, then shut down the server, change the
        recovery target settings to a later target and restart to
        continue recovery.
-->
リカバリ対象に到達した場合、リカバリを休止すべきかどうかを指定します。
デフォルトは真です。
これは、このリカバリ対象がリカバリのための最も望ましいポイントかどうかチェックするデータベースに対して、問い合わせが実行されることを可能にするよう仮定されます。
休止された状態は、<function>pg_xlog_replay_resume()</>(<xref linkend="functions-recovery-control-table">参照)の使用により再開することができます。
その後、それは回復を終了させます。
このリカバリ対象はその後希望の止まるポイントでなければ、サーバをシャットダウンし、リカバリを継続するため、後の対象とリカバリを続けるための再起動のために、リカバリ対象の設定を変更します。
       </para>
       <para>
<!--
        This setting has no effect if <xref linkend="guc-hot-standby"> is not
        enabled, or if no recovery target is set.
-->
この設定は<xref linkend="guc-hot-standby">が有効になっていない場合、リカバリ対象が設定されていない場合には効果がありません。
       </para>
      </listitem>
     </varlistentry>

     </variablelist>
   </sect1>

  <sect1 id="standby-settings">

<!--
    <title>Standby Server Settings</title>
-->
    <title>スタンバイサーバの設定</title>
     <variablelist>

       <varlistentry id="standby-mode" xreflabel="standby_mode">
        <term><varname>standby_mode</varname> (<type>boolean</type>)
        <indexterm>
<!--
          <primary><varname>standby_mode</> recovery parameter</primary>
-->
          <primary><varname>standby_mode</>リカバリ用パラメータ</primary>

        </indexterm>
        </term>
        <listitem>
         <para>
<!--
          Specifies whether to start the <productname>PostgreSQL</> server as
          a standby. If this parameter is <literal>on</>, the server will
          not stop recovery when the end of archived WAL is reached, but
          will keep trying to continue recovery by fetching new WAL segments
          using <varname>restore_command</>
          and/or by connecting to the primary server as specified by the
          <varname>primary_conninfo</> setting.
-->
<productname>PostgreSQL</> サーバをスタンバイとして起動するかどうかを指定します。
このパラメータが <literal>on</> の場合、サーバはアーカイブWALファイルの最後に到達してもリカバリを終了せず、<varname>restore_command</> の実行、および/あるいは、 <varname>primary_conninfo</> で指定されたプライマリサーバへ接続することによって、新しいWALセグメントの取得を継続しようとします。
         </para>
        </listitem>
       </varlistentry>
       <varlistentry id="primary-conninfo" xreflabel="primary_conninfo">
        <term><varname>primary_conninfo</varname> (<type>string</type>)
        <indexterm>
<!--
          <primary><varname>primary_conninfo</> recovery parameter</primary>
-->
          <primary><varname>primary_conninfo</>リカバリ用パラメータ</primary>
        </indexterm>
        </term>
        <listitem>
         <para>
<!--
          Specifies a connection string to be used for the standby server
          to connect with the primary. This string is in the format
          described in <xref linkend="libpq-connstring">. If any option is
          unspecified in this string, then the corresponding environment
          variable (see <xref linkend="libpq-envars">) is checked. If the
          environment variable is not set either, then
          defaults are used.
-->
スタンバイサーバがプライマリサーバに接続するための接続文字列を指定します。
この文字列は、<xref linkend="libpq-connstring">で説明されている書式で記述されます。
この文字列に何のオプションも指定されていない場合、これに対応する環境変数 (<xref linkend="libpq-envars"> 参照) が確認されます。
もし、環境変数も設定されていない場合、デフォルトの値が使われます。
         </para>
         <para>
<!--
          The connection string should specify the host name (or address)
          of the primary server, as well as the port number if it is not
          the same as the standby server's default.
          Also specify a user name corresponding to a suitably-privileged role
          on the primary (see
          <xref linkend="streaming-replication-authentication">).
          A password needs to be provided too, if the primary demands password
          authentication.  It can be provided in the
          <varname>primary_conninfo</varname> string, or in a separate
          <filename>~/.pgpass</> file on the standby server (use
          <literal>replication</> as the database name).
          Do not specify a database name in the
          <varname>primary_conninfo</varname> string.
-->
接続文字列では、プライマリサーバのホスト名（またはアドレス）、スタンバイサーバのデフォルトと異なるのであればポート番号も指定する必要があります。
また、プライマリサーバ上で適切な権限を保有するロールのユーザを指定しなければなりません (<xref linkend="streaming-replication-authentication"> 参照)。
プライマリサーバが要求するのであれば、パスワードも記述される必要があります。
パスワードは <varname>primary_conninfo</varname> に記述することもできますし、スタンバイサーバ上の分離されたファイル <filename>~/.pgpass</> に記述することもできます (データベース名には <literal>replication</> を使います)。
<varname>primary_conninfo</varname> 文字列の中には、データベース名を指定しないでください。

         </para>
         <para>
<!--
          This setting has no effect if <varname>standby_mode</> is <literal>off</>.
-->
<varname>standby_mode</> が <literal>off</> になっている場合、この設定は無効です。
         </para>
        </listitem>
       </varlistentry>
       <varlistentry id="primary-slot-name" xreflabel="primary_slot_name">
        <term><varname>primary_slot_name</varname> (<type>string</type>)
        <indexterm>
<!--
          <primary><varname>primary_slot_name</> recovery parameter</primary>
-->
          <primary><varname>primary_slot_name</> リカバリ用パラメータ</primary>
        </indexterm>
        </term>
        <listitem>
         <para>
<!--
          Optionally specifies an existing replication slot to be used when
          connecting to the primary via streaming replication to control
          resource removal on the upstream node
          (see <xref linkend="streaming-replication-slots">).
          This setting has no effect if <varname>primary_conninfo</> is not
          set.
-->
上流ノードのリソース削除を制御するためにストリーミングレプリケーション経由でプライマリに接続した場合、既存のレプリケーションスロットを使うように、必要に応じて指定します（<xref linkend="streaming-replication-slots">を参照）。
<varname>primary_conninfo</>が設定されていない場合、この設定は無効です。
         </para>
        </listitem>
       </varlistentry>
       <varlistentry id="trigger-file" xreflabel="trigger_file">
        <term><varname>trigger_file</varname> (<type>string</type>)
        <indexterm>
<!--
          <primary><varname>trigger_file</> recovery parameter</primary>
-->
          <primary><varname>trigger_file</>リカバリ用パラメータ</primary>
        </indexterm>
        </term>
        <listitem>
         <para>
<!--
          Specifies a trigger file whose presence ends recovery in the
          standby.  Even if this value is not set, you can still promote
          the standby using <command>pg_ctl promote</>.
          This setting has no effect if <varname>standby_mode</> is <literal>off</>.
-->
スタンバイサーバにおいて、リカバリの完了を示すトリガファイルを指定します。
もしこの値が設定されていない場合、<command>pg_ctl promote</>を使ってスタンバイサーバを昇格させることができます。
<varname>standby_mode</> が <literal>off</> の時には、この設定は無効です。
         </para>
        </listitem>
       </varlistentry>

     <varlistentry id="recovery-min-apply-delay" xreflabel="recovery_min_apply_delay">
      <term><varname>recovery_min_apply_delay</varname> (<type>integer</type>)
      <indexterm>
<!--
        <primary><varname>recovery_min_apply_delay</> recovery parameter</primary>
-->
        <primary><varname>recovery_min_apply_delay</> リカバリ用パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        By default, a standby server restores WAL records from the
        primary as soon as possible. It may be useful to have a time-delayed
        copy of the data, offering various options to correct data loss errors.
        This parameter allows you to delay recovery by a fixed period of time,
        specified in milliseconds if no unit is specified.  For example, if
        you set this parameter to <literal>5min</literal>, the standby will
        replay each transaction commit only when the system time on the standby
        is at least five minutes past the commit time reported by the master.
-->
デフォルトでは、スタンバイサーバは可能な限り早くプライマリからWALレコードをリストアします。
データをコピーする際、時間遅延を設けることは有益な場合があり、これはデータ損失エラーを修正するために提供される価値あるオプションです。
このパラメータを使う事で、一定時間リカバリを遅らせることができます。単位を指定しない場合、マイクロ秒で指定されます。
例えば、パラメータに<literal>5min</literal>と指定した場合、
マスターサーバから受け取ったコミット時刻がスタンバイサーバのシステム時刻より少なくとも5分過去のトランザクションのみ、スタンバイサーバはコミットを再生します。
       </para>
       <para>
<!--
        It is possible that the replication delay between servers exceeds the
        value of this parameter, in which case no delay is added.
        Note that the delay is calculated between the WAL timestamp as written
        on master and the time on the current standby. Delays
        in transfer because of networks or cascading replication configurations
        may reduce the actual wait time significantly. If the system
        clocks on master and standby are not synchronized, this may lead to
        recovery applying records earlier than expected; but that is not a
        major issue because useful settings of the parameter are much larger
        than typical time deviations between servers. Be careful to allow for
        different timezone settings on master and standby.
-->
遅延無しが追加された場合、サーバ間のレプリケーション遅延はパラメータの値を上回る可能性があります。
遅延は、マスタサーバで書かれたWALのタイムスタンプと、スタンバイサーバの現在時刻を使って計算されていることに注意してください。
ネットワークやカスケーディングレプリケーション構成によるデータ転送の遅延は、実遅延時間を大幅に減らすかもしれません。
もし、マスタサーバとスタンバイサーバのシステムクロックが同期されていない場合、期待値よりも早くレコードのリカバリを始めるかもしれません。
しかし、有用なパラメータの設定値は典型的なサーバ間の時間のずれよりもずっと大きいので、それらは大きな問題ではありません。
マスタサーバとスタンバイサーバの異なるタイムゾーン設定を考慮に入れるよう注意してください。
       </para>
       <para>
<!--
        The delay occurs only on WAL records for COMMIT and Restore Points.
        Other records may be replayed earlier than the specified delay, which
        is not an issue for MVCC though it may potentially increase the number
        of recovery conflicts generated.
-->
遅延はコミットとリストアポイントのWALレコードだけで発生します。
他のレコードは指定された遅延より早く再生されるでしょう。
それは潜在的に生成されたリカバリの競合数を増やすかもしれませんが、MVCCの問題にはなりません。
       </para>
       <para>
<!--
        The delay occurs until the standby is promoted or triggered. After that
        the standby will end recovery without further waiting.
-->
遅延はスタンバイサーバが昇格またはトリガーになるまで発生します。
その後、スタンバイサーバはそれ以上待たずにリカバリを終了します。
       </para>
       <para>
<!--
        This parameter is intended for use with streaming replication deployments,
        however, if the parameter is specified it will be honored in all cases.
        Synchronous replication is not affected by this setting because there is
        not yet any setting to request synchronous apply of transaction commits.
        <varname>hot_standby_feedback</> will be delayed by use of this feature
        which could lead to bloat on the master; use both together with care.
-->
このパラメータはストリーミングレプリケーション配信で使われることを目的としていますが、パラメータが指定されていると、すべてのケースで使用されます。
同期レプリケーションでは、トランザクションコミット用の同期リクエストにまだ設定がないため、この設定は影響を受けません。
<varname>hot_standby_feedback</> の機能を使うことによって遅延されますが、マスタサーバの肥大化に繋がる可能性がありますので、注意が必要です。
       </para>
      </listitem>
     </varlistentry>

     </variablelist>
   </sect1>

</chapter>
