<!-- doc/src/sgml/btree-gin.sgml -->

<sect1 id="btree-gin" xreflabel="btree_gin">
 <title>btree_gin</title>

 <indexterm zone="btree-gin">
  <primary>btree_gin</primary>
 </indexterm>

 <para>
<!--
  <filename>btree_gin</> provides sample GIN operator classes that
  implement B-tree equivalent behavior for the data types
  <type>int2</>, <type>int4</>, <type>int8</>, <type>float4</>,
  <type>float8</>, <type>timestamp with time zone</>,
  <type>timestamp without time zone</>, <type>time with time zone</>,
  <type>time without time zone</>, <type>date</>, <type>interval</>,
  <type>oid</>, <type>money</>, <type>"char"</>,
  <type>varchar</>, <type>text</>, <type>bytea</>, <type>bit</>,
  <type>varbit</>, <type>macaddr</>, <type>inet</>, and <type>cidr</>.
-->
<filename>btree_gin</>は、次に列挙するデータ型に対しB-treeと同等な動作を実装するGIN演算子クラスを提供します。データ型は、<type>int2</>、<type>int4</>、<type>int8</>、<type>float4</>、<type>float8</>、<type>timestamp with time zone</>、<type>timestamp without time zone</>、<type>time with time zone</>、<type>time without time zone</>、<type>date</>、<type>interval</>、<type>oid</>、<type>money</>、<type>"char"</>、<type>varchar</>、<type>text</>、<type>bytea</>、 <type>bit</>、<type>varbit</>、<type>macaddr</>、<type>inet</>、および<type>cidr</>です。
 </para>

 <para>
<!--
  In general, these operator classes will not outperform the equivalent
  standard B-tree index methods, and they lack one major feature of the
  standard B-tree code: the ability to enforce uniqueness.  However,
  they are useful for GIN testing and as a base for developing other
  GIN operator classes.  Also, for queries that test both a GIN-indexable
  column and a B-tree-indexable column, it might be more efficient to create
  a multicolumn GIN index that uses one of these operator classes than to create
  two separate indexes that would have to be combined via bitmap ANDing.
-->
一般的に、これらの演算子クラスは同等な標準B-treeインデックス方式を性能的に凌駕する物ではなく、標準B-treeコードの１つの重要機能である一意性強要の能力を欠いています。
しかしながら、GINの試験、およびその他のGIN演算子クラスの開発の基礎として便利です。
同時に、GINインデックス化可能列およびB-treeインデックス化可能列双方を試験する問い合わせに対し、ビットマップを介してANDを取り一体化されるべき２つの別々のインデックスを作成するよりも、これらの演算子クラスの１つを使用する複数列GINインデックスを作成するほうがより効率的です。
 </para>

 <sect2>
<!--
  <title>Example Usage</title>
-->
  <title>使用例</title>

<programlisting>
CREATE TABLE test (a int4);
<!--
&#045;- create index
-->
-- インデックスの作成
CREATE INDEX testidx ON test USING gin (a);
<!--
&#045;- query
-->
-- 問い合わせ
SELECT * FROM test WHERE a &lt; 10;
</programlisting>

 </sect2>

 <sect2>
<!--
  <title>Authors</title>
-->
  <title>著作者</title>

  <para>
<!--
   Teodor Sigaev (<email>teodor@stack.net</email>) and
   Oleg Bartunov (<email>oleg@sai.msu.su</email>).  See
   <ulink url="http://www.sai.msu.su/~megera/oddmuse/index.cgi/Gin"></ulink>
   for additional information.
-->
   Teodor Sigaev（<email>teodor@stack.net</email>）および
   Oleg Bartunov（<email>oleg@sai.msu.su</email>）。
追加情報は<ulink url="http://www.sai.msu.su/~megera/oddmuse/index.cgi/Gin"></ulink>を参照ください。
  </para>

 </sect2>

</sect1>
