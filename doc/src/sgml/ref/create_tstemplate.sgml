<!--
doc/src/sgml/ref/create_tstemplate.sgml
PostgreSQL documentation
-->

<refentry id="SQL-CREATETSTEMPLATE">
 <indexterm zone="sql-createtstemplate">
  <primary>CREATE TEXT SEARCH TEMPLATE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE TEXT SEARCH TEMPLATE</refentrytitle>
  <manvolnum>7</manvolnum>
<!--
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
  <refmiscinfo>SQL言語</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE TEXT SEARCH TEMPLATE</refname>
<!--
  <refpurpose>define a new text search template</refpurpose>
-->
  <refpurpose>新しいテキスト検索テンプレートを定義する</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
CREATE TEXT SEARCH TEMPLATE <replaceable class="parameter">name</replaceable> (
    [ INIT = <replaceable class="parameter">init_function</replaceable> , ]
    LEXIZE = <replaceable class="parameter">lexize_function</replaceable>
)
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
  <title>Description</title>
-->
  <title>説明</title>

  <para>
<!--
   <command>CREATE TEXT SEARCH TEMPLATE</command> creates a new text search
   template.  Text search templates define the functions that implement
   text search dictionaries.  A template is not useful by itself, but must
   be instantiated as a dictionary to be used.  The dictionary typically
   specifies parameters to be given to the template functions.
-->
<command>CREATE TEXT SEARCH TEMPLATE</command>は新しいテキスト検索テンプレートを作成します。
テキスト検索テンプレートは、テキスト検索辞書を実装する関数を定義します。
テンプレートはそれ自体では有用ではありませんが、使用される辞書として実体化されなければなりません。
通常この辞書はテンプレート関数に渡すパラメータを指定します。
  </para>

  <para>
<!--
   If a schema name is given then the text search template is created in the
   specified schema.  Otherwise it is created in the current schema.
-->
スキーマ名が指定された場合、テキスト検索テンプレートは指定したスキーマに作成されます。
そうでなければ、現在のスキーマに作成されます。
  </para>

  <para>
<!--
   You must be a superuser to use <command>CREATE TEXT SEARCH
   TEMPLATE</command>.  This restriction is made because an erroneous text
   search template definition could confuse or even crash the server.
   The reason for separating templates from dictionaries is that a template
   encapsulates the <quote>unsafe</> aspects of defining a dictionary.
   The parameters that can be set when defining a dictionary are safe for
   unprivileged users to set, and so creating a dictionary need not be a
   privileged operation.
-->
<command>CREATE TEXT SEARCH TEMPLATE</command>を使用するには、スーパーユーザでなければなりません。
おかしなテキスト検索テンプレート定義はサーバを混乱させ、クラッシュさせる可能性があるため、この制限があります。
辞書とテンプレートを分離させた理由は、テンプレートにより辞書定義の<quote>安全でない</>側面を隠蔽化することです。
辞書を定義する時に設定できるパラメータは、非特権ユーザが設定しても安全なものです。
このため、辞書の作成では特権操作は必要ありません。
  </para>

  <para>
<!--
   Refer to <xref linkend="textsearch"> for further information.
-->
詳細は<xref linkend="textsearch">を参照してください。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Parameters</title>
-->
  <title>パラメータ</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
     <para>
<!--
      The name of the text search template to be created.  The name can be
      schema-qualified.
-->
作成するテキスト検索テンプレートの名称です。
この名前はスキーマ修飾することができます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">init_function</replaceable></term>
    <listitem>
     <para>
<!--
      The name of the init function for the template.
-->
テンプレートの初期化関数の名称です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">lexize_function</replaceable></term>
    <listitem>
     <para>
<!--
      The name of the lexize function for the template.
-->
テンプレートの字句化関数の名称です。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
<!--
   The function names can be schema-qualified if necessary.  Argument types
   are not given, since the argument list for each type of function is
   predetermined.  The lexize function is required, but the init function
   is optional.
-->
関数名は必要に応じてスキーマ修飾可能です。
各種関数の引数リストは事前に定められているので、引数型の指定はありません。
字句化関数は必須ですが、初期化関数は省略可能です。

  </para>

  <para>
<!--
   The arguments can appear in any order, not only the one shown above.
-->
引数は、上で示した順序だけではなく、任意の順序で記述することができます。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Compatibility</title>
-->
  <title>互換性</title>

  <para>
<!--
   There is no
   <command>CREATE TEXT SEARCH TEMPLATE</command> statement in the SQL
   standard.
-->
標準SQLには<command>CREATE TEXT SEARCH TEMPLATE</command>文はありません。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>See Also</title>
-->
  <title>関連項目</title>

  <simplelist type="inline">
   <member><xref linkend="sql-altertstemplate"></member>
   <member><xref linkend="sql-droptstemplate"></member>
  </simplelist>
 </refsect1>
</refentry>
