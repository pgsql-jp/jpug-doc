<!--
doc/src/sgml/ref/insert.sgml
PostgreSQL documentation
-->

<refentry id="SQL-INSERT">
 <indexterm zone="sql-insert">
  <primary>INSERT</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>INSERT</refentrytitle>
  <manvolnum>7</manvolnum>
<!--
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 言語</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>INSERT</refname>
<!--
  <refpurpose>create new rows in a table</refpurpose>
-->
  <refpurpose>テーブルに新しい行を作成する</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
[ WITH [ RECURSIVE ] <replaceable class="parameter">with_query</replaceable> [, ...] ]
INSERT INTO <replaceable class="PARAMETER">table_name</replaceable> [ ( <replaceable class="PARAMETER">column_name</replaceable> [, ...] ) ]
    { DEFAULT VALUES | VALUES ( { <replaceable class="PARAMETER">expression</replaceable> | DEFAULT } [, ...] ) [, ...] | <replaceable class="PARAMETER">query</replaceable> }
    [ RETURNING * | <replaceable class="parameter">output_expression</replaceable> [ [ AS ] <replaceable class="parameter">output_name</replaceable> ] [, ...] ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
  <title>Description</title>
-->
  <title>説明</title>

  <para>
<!--
   <command>INSERT</command> inserts new rows into a table.
   One can insert one or more rows specified by value expressions,
   or zero or more rows resulting from a query.
-->
<command>INSERT</command>はテーブルに新しい行を挿入します。
値式を使用して行（複数可）を挿入すること、および、問い合わせの結果を使って0行以上の行を挿入することができます。
  </para>

  <para>
<!--
   The target column names can be listed in any order.  If no list of
   column names is given at all, the default is all the columns of the
   table in their declared order; or the first <replaceable>N</> column
   names, if there are only <replaceable>N</> columns supplied by the
   <literal>VALUES</> clause or <replaceable>query</>.  The values
   supplied by the <literal>VALUES</> clause or <replaceable>query</> are
   associated with the explicit or implicit column list left-to-right.
-->
対象の列名はどのような順番でも指定できます。
列名リストが指定されなかった場合は、テーブル内の全ての列を宣言時の順番に並べたものがデフォルトとして使われます。
また、<literal>VALUES</>句や<replaceable>query</>で<replaceable>N</>列のみが与えられた場合は、先頭の<replaceable>N</>列の名前が指定されたものとみなされます。
<literal>VALUES</>句や<replaceable>query</>で提供される値は、明示的または暗黙的な列リストと左から右への順で関連付けられます
  </para>

  <para>
<!--
   Each column not present in the explicit or implicit column list will be
   filled with a default value, either its declared default value
   or null if there is none.
-->
明示的または暗黙的な列リストにない各列にはデフォルト値（デフォルト値が宣言されていればその値、未宣言ならばNULL）が挿入されます。
  </para>

  <para>
<!--
   If the expression for any column is not of the correct data type,
   automatic type conversion will be attempted.
-->
各列の式が正しいデータ型でない場合は、自動的に型の変換が行われます。
  </para>

  <para>
<!--
   The optional <literal>RETURNING</> clause causes <command>INSERT</>
   to compute and return value(s) based on each row actually inserted.
   This is primarily useful for obtaining values that were supplied by
   defaults, such as a serial sequence number.  However, any expression
   using the table's columns is allowed.  The syntax of the
   <literal>RETURNING</> list is identical to that of the output list
   of <command>SELECT</>.
-->
<literal>RETURNING</>句を指定すると、<command>INSERT</>は実際に挿入された各行に基づいて計算された値を返すようになります。
これは、通番のシーケンス番号など、デフォルトで与えられた値を取り出す時に主に便利です。
しかし、そのテーブルの列を使用した任意の式を指定することができます。
<literal>RETURNING</>リストの構文は<command>SELECT</>の出力リストと同一です。
  </para>

  <para>
<!--
   You must have <literal>INSERT</literal> privilege on a table in
   order to insert into it.  If a column list is specified, you only
   need <literal>INSERT</literal> privilege on the listed columns.
   Use of the <literal>RETURNING</> clause requires <literal>SELECT</>
   privilege on all columns mentioned in <literal>RETURNING</>.
   If you use the <replaceable
   class="PARAMETER">query</replaceable> clause to insert rows from a
   query, you of course need to have <literal>SELECT</literal> privilege on
   any table or column used in the query.
-->
テーブルに行を追加するには、そのテーブルに対して<literal>INSERT</literal>権限を持っている必要があります。 
列リストを指定する場合は、列挙された列に対する<literal>INSERT</literal>権限のみが必要です。
<literal>RETURNING</>句を使用するには、<literal>RETURNING</>で使用するすべての列に対する<literal>SELECT</>権限が必要です。
<replaceable class="PARAMETER">query</replaceable>を使用して問い合わせ結果を元に行を挿入する場合は当然ながら、その問い合わせ内で使われる全てのテーブルまたは列に対して<literal>SELECT</literal>権限を持っている必要があります。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Parameters</title>
-->
  <title>パラメータ</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">with_query</replaceable></term>
    <listitem>
     <para>
<!--
      The <literal>WITH</literal> clause allows you to specify one or more
      subqueries that can be referenced by name in the <command>INSERT</>
      query. See <xref linkend="queries-with"> and <xref linkend="sql-select">
      for details.
-->
<literal>WITH</literal>句により、<command>INSERT</>問い合わせ内で名前により参照することができる１つ以上の副問い合わせを指定することができます。
詳しくは<xref linkend="queries-with">と<xref linkend="sql-select">を参照してください。
     </para>
     <para>
<!--
      It is possible for the <replaceable class="parameter">query</replaceable>
      (<command>SELECT</command> statement)
      to also contain a <literal>WITH</literal> clause.  In such a case both
      sets of <replaceable>with_query</replaceable> can be referenced within
      the <replaceable class="parameter">query</replaceable>, but the
      second one takes precedence since it is more closely nested.
-->
<replaceable class="parameter">query</replaceable>（<command>SELECT</command>文）でもまた、<literal>WITH</literal>句を含めることができます。
こうした場合、<replaceable>with_query</replaceable>の集合との両方を<replaceable class="parameter">query</replaceable>内で参照することができます。
しかし、第二の問い合わせがより近くにネストされているため優先します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">table_name</replaceable></term>
    <listitem>
     <para>
<!--
      The name (optionally schema-qualified) of an existing table.
-->
既存のテーブルの名前です（スキーマ修飾名も可）。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">column_name</replaceable></term>
    <listitem>
     <para>
<!--
      The name of a column in the table named by <replaceable class="PARAMETER">table_name</replaceable>.
      The column name can be qualified with a subfield name or array
      subscript, if needed.  (Inserting into only some fields of a
      composite column leaves the other fields null.)
-->
<replaceable class="PARAMETER">table_name</replaceable>で指名されたテーブル内の列名です。
必要なら列名を副フィールドの名前や配列の添え字で修飾することができます。
（複合型の列の一部のフィールドのみを挿入すると他のフィールドはNULLになります。）
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DEFAULT VALUES</literal></term>
    <listitem>
     <para>
<!--
      All columns will be filled with their default values.
-->
全ての列に、それぞれのデフォルト値が設定されます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">expression</replaceable></term>
    <listitem>
     <para>
<!--
      An expression or value to assign to the corresponding column.
-->
対応する列に代入する式または値を指定します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DEFAULT</literal></term>
    <listitem>
     <para>
<!--
      The corresponding column will be filled with
      its default value.
-->
対応する列にデフォルト値を設定します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">query</replaceable></term>
    <listitem>
     <para>
<!--
      A query (<command>SELECT</command> statement) that supplies the
      rows to be inserted.  Refer to the
      <xref linkend="sql-select">
      statement for a description of the syntax.
-->
挿入する行を提供する問い合わせ（<command>SELECT</command>文）を指定します。
構文の説明については<xref linkend="sql-select">文を参照してください。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">output_expression</replaceable></term>
    <listitem>
     <para>
<!--
      An expression to be computed and returned by the <command>INSERT</>
      command after each row is inserted.  The expression can use any
      column names of the table named by <replaceable class="PARAMETER">table_name</replaceable>.
      Write <literal>*</> to return all columns of the inserted row(s).
-->
各行が挿入された後、<command>INSERT</>により計算され、返される式です。
この式には<replaceable class="PARAMETER">table_name</replaceable>で指名されたテーブルの任意の列名を使用することができます。
挿入された行のすべての列を返す場合は<literal>*</>と記載してください。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">output_name</replaceable></term>
    <listitem>
     <para>
<!--
      A name to use for a returned column.
-->
返される列で使用される名前です。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!--
  <title>Outputs</title>
-->
  <title>出力</title>

  <para>
<!--
   On successful completion, an <command>INSERT</> command returns a command
   tag of the form
-->
正常に終了すると、<command>INSERT</>は以下のようなコマンドタグを返します。
<screen>
INSERT <replaceable>oid</replaceable> <replaceable class="parameter">count</replaceable>
</screen>
<!--
   The <replaceable class="parameter">count</replaceable> is the number
   of rows inserted.  If <replaceable class="parameter">count</replaceable>
   is exactly one, and the target table has OIDs, then
   <replaceable class="parameter">oid</replaceable> is the
   <acronym>OID</acronym> assigned to the inserted row.  Otherwise
   <replaceable class="parameter">oid</replaceable> is zero.
-->
<replaceable class="parameter">count</replaceable>は挿入された行数です。
<replaceable class="parameter">count</replaceable>が正確に1であり、対象のテーブルがOIDを持つ場合、<replaceable class="parameter">oid</replaceable>は挿入された行に割り当てられた<acronym>OID</acronym>です。
その他の場合、<replaceable class="parameter">oid</replaceable>は0となります。
  </para>

  <para>
<!--
   If the <command>INSERT</> command contains a <literal>RETURNING</>
   clause, the result will be similar to that of a <command>SELECT</>
   statement containing the columns and values defined in the
   <literal>RETURNING</> list, computed over the row(s) inserted by the
   command.
-->
<command>INSERT</>コマンドが<literal>RETURNING</>句を持つ場合、その結果は、<literal>RETURNING</>リストで定義した列と値を持ち、そのコマンドで挿入された行全体に対して計算を行う<command>SELECT</>文の結果と似たものになるでしょう。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Examples</title>
-->
  <title>例</title>

  <para>
<!--
   Insert a single row into table <literal>films</literal>:
-->
<literal>films</literal>テーブルに1行を挿入します。

<programlisting>
INSERT INTO films VALUES
    ('UA502', 'Bananas', 105, '1971-07-13', 'Comedy', '82 minutes');
</programlisting>
  </para>

  <para>
<!--
   In this example, the <literal>len</literal> column is
   omitted and therefore it will have the default value:
-->
次の例では、<literal>len</literal>列を省略しています。 
したがって、ここにはデフォルト値が入ります。

<programlisting>
INSERT INTO films (code, title, did, date_prod, kind)
    VALUES ('T_601', 'Yojimbo', 106, '1961-06-16', 'Drama');
</programlisting>
  </para>

  <para>
<!--
   This example uses the <literal>DEFAULT</literal> clause for
   the date columns rather than specifying a value:
-->
次の例では、日付列に対して値を指定する代わりに<literal>DEFAULT</literal>を使用します。

<programlisting>
INSERT INTO films VALUES
    ('UA502', 'Bananas', 105, DEFAULT, 'Comedy', '82 minutes');
INSERT INTO films (code, title, did, date_prod, kind)
    VALUES ('T_601', 'Yojimbo', 106, DEFAULT, 'Drama');
</programlisting>
  </para>

  <para>
<!--
   To insert a row consisting entirely of default values:
-->
全てデフォルト値からなる行を挿入します。

<programlisting>
INSERT INTO films DEFAULT VALUES;
</programlisting>
  </para>

  <para>
<!--
   To insert multiple rows using the multirow <command>VALUES</> syntax:
-->
複数行の<command>VALUES</>構文を使用して複数行を挿入します。

<programlisting>
INSERT INTO films (code, title, did, date_prod, kind) VALUES
    ('B6717', 'Tampopo', 110, '1985-02-10', 'Comedy'),
    ('HG120', 'The Dinner Game', 140, DEFAULT, 'Comedy');
</programlisting>
  </para>

  <para>
<!--
   This example inserts some rows into table
   <literal>films</literal> from a table <literal>tmp_films</literal>
   with the same column layout as <literal>films</literal>:
-->
次の例では、<literal>films</literal>テーブルと同じ列レイアウトを持つ<literal>tmp_films</literal>テーブルから<literal>films</literal>テーブルへいくつか行を挿入します。

<programlisting>
INSERT INTO films SELECT * FROM tmp_films WHERE date_prod &lt; '2004-05-07';
</programlisting>
  </para>

  <para>
<!--
   This example inserts into array columns:
-->
次の例では、配列型の列に挿入します。

<programlisting>
<!--
&055;&055; Create an empty 3x3 gameboard for noughts-and-crosses
-->
-- 三目並べ用の3×3マスのゲーム盤を作成します。
INSERT INTO tictactoe (game, board[1:3][1:3])
    VALUES (1, '{{" "," "," "},{" "," "," "},{" "," "," "}}');
<!--
&#045;&#045; The subscripts in the above example aren't really needed
-->
--上の例の添え字は本当は必要ありません。
INSERT INTO tictactoe (game, board)
    VALUES (2, '{{X," "," "},{" ",O," "},{" ",X," "}}');
</programlisting>
  </para>

  <para>
<!--
   Insert a single row into table <literal>distributors</literal>, returning
   the sequence number generated by the <literal>DEFAULT</literal> clause:
-->
<literal>distributors</literal>テーブルに一行を挿入し、その<literal>DEFAULT</literal>句により生成されたシーケンス番号を返します。

<programlisting>
INSERT INTO distributors (did, dname) VALUES (DEFAULT, 'XYZ Widgets')
   RETURNING did;
</programlisting>
  </para>

  <para>
<!--
   Increment the sales count of the salesperson who manages the
   account for Acme Corporation, and record the whole updated row
   along with current time in a log table:
-->
Acme社の顧客を担当する営業担当者の売り上げ数を増やし、ログテーブルに更新行全体と更新時刻を記録します。
<programlisting>
WITH upd AS (
  UPDATE employees SET sales_count = sales_count + 1 WHERE id =
    (SELECT sales_person FROM accounts WHERE name = 'Acme Corporation')
    RETURNING *
)
INSERT INTO employees_log SELECT *, current_timestamp FROM upd;
</programlisting></para>
 </refsect1>

 <refsect1>
<!--
  <title>Compatibility</title>
-->
  <title>
互換性
  </title>

  <para>
<!--
   <command>INSERT</command> conforms to the SQL standard, except that
   the <literal>RETURNING</> clause is a
   <productname>PostgreSQL</productname> extension, as is the ability
   to use <literal>WITH</> with <command>INSERT</>.
   Also, the case in
   which a column name list is omitted, but not all the columns are
   filled from the <literal>VALUES</> clause or <replaceable>query</>,
   is disallowed by the standard.
-->
<command>INSERT</command>は標準SQLに準拠します。
ただし、<literal>RETURNING</>句と<command>INSERT</>で<literal>WITH</>が可能であることは<productname>PostgreSQL</productname>の拡張です。
また、標準SQLでは、列名リストが省略された時に、<literal>VALUES</>句または<replaceable>query</>で一部の列のみを指定することはできません。
  </para>

  <para>
<!--
   Possible limitations of the <replaceable
   class="PARAMETER">query</replaceable> clause are documented under
   <xref linkend="sql-select">.
-->
<replaceable class="PARAMETER">query</replaceable>句の制限については、<xref linkend="sql-select">にて記述されています。
  </para>
 </refsect1>
</refentry>
