<!--
doc/src/sgml/ref/merge.sgml
PostgreSQL documentation
-->

<refentry id="sql-merge">
 <indexterm zone="sql-merge">
  <primary>MERGE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>MERGE</refentrytitle>
  <manvolnum>7</manvolnum>
<!--
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
  <refmiscinfo>SQL - 言語</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>MERGE</refname>
<!--
  <refpurpose>conditionally insert, update, or delete rows of a table</refpurpose>
-->
  <refpurpose>テーブルの行を条件付きでINSERT、UPDATE、DELETEする</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
[ WITH <replaceable class="parameter">with_query</replaceable> [, ...] ]
MERGE INTO [ ONLY ] <replaceable class="parameter">target_table_name</replaceable> [ * ] [ [ AS ] <replaceable class="parameter">target_alias</replaceable> ]
USING <replaceable class="parameter">data_source</replaceable> ON <replaceable class="parameter">join_condition</replaceable>
<replaceable class="parameter">when_clause</replaceable> [...]

<phrase>where <replaceable class="parameter">data_source</replaceable> is:</phrase>

{ [ ONLY ] <replaceable class="parameter">source_table_name</replaceable> [ * ] | ( <replaceable class="parameter">source_query</replaceable> ) } [ [ AS ] <replaceable class="parameter">source_alias</replaceable> ]

<phrase>and <replaceable class="parameter">when_clause</replaceable> is:</phrase>

{ WHEN MATCHED [ AND <replaceable class="parameter">condition</replaceable> ] THEN { <replaceable class="parameter">merge_update</replaceable> | <replaceable class="parameter">merge_delete</replaceable> | DO NOTHING } |
  WHEN NOT MATCHED [ AND <replaceable class="parameter">condition</replaceable> ] THEN { <replaceable class="parameter">merge_insert</replaceable> | DO NOTHING } }

<phrase>and <replaceable class="parameter">merge_insert</replaceable> is:</phrase>

INSERT [( <replaceable class="parameter">column_name</replaceable> [, ...] )]
[ OVERRIDING { SYSTEM | USER } VALUE ]
{ VALUES ( { <replaceable class="parameter">expression</replaceable> | DEFAULT } [, ...] ) | DEFAULT VALUES }

<phrase>and <replaceable class="parameter">merge_update</replaceable> is:</phrase>

UPDATE SET { <replaceable class="parameter">column_name</replaceable> = { <replaceable class="parameter">expression</replaceable> | DEFAULT } |
             ( <replaceable class="parameter">column_name</replaceable> [, ...] ) = [ ROW ] ( { <replaceable class="parameter">expression</replaceable> | DEFAULT } [, ...] ) |
             ( <replaceable class="parameter">column_name</replaceable> [, ...] ) = ( <replaceable class="parameter">sub-SELECT</replaceable> )
           } [, ...]

<phrase>and <replaceable class="parameter">merge_delete</replaceable> is:</phrase>

DELETE
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
  <title>Description</title>
-->
  <title>説明</title>

  <para>
<!--
   <command>MERGE</command> performs actions that modify rows in the
   target table identified as <replaceable class="parameter">target_table_name</replaceable>,
   using the <replaceable class="parameter">data_source</replaceable>.
   <command>MERGE</command> provides a single <acronym>SQL</acronym>
   statement that can conditionally <command>INSERT</command>,
   <command>UPDATE</command> or <command>DELETE</command> rows, a task
   that would otherwise require multiple procedural language statements.
-->
<command>MERGE</command>は、<replaceable class="parameter">data_source</replaceable>を使用して、<replaceable class="parameter">target_table_name</replaceable>で指定された対象テーブルの行を変更するアクションを実行します。
<command>MERGE</command>は、条件付きで行の<command>INSERT</command>、<command>UPDATE</command>または<command>DELETE</command>を実行できる単一の<acronym>SQL</acronym>文を提供します。
これがないと、複数の手続き言語文が必要になります。
  </para>

  <para>
<!--
   First, the <command>MERGE</command> command performs a join
   from <replaceable class="parameter">data_source</replaceable> to
   the target table
   producing zero or more candidate change rows.  For each candidate change
   row, the status of <literal>MATCHED</literal> or <literal>NOT MATCHED</literal>
   is set just once, after which <literal>WHEN</literal> clauses are evaluated
   in the order specified.  For each candidate change row, the first clause to
   evaluate as true is executed.  No more than one <literal>WHEN</literal>
   clause is executed for any candidate change row.
-->
最初に、<command>MERGE</command>コマンドは<replaceable class="parameter">data_source</replaceable>から対象テーブルへの結合を実行し、0以上の変更候補行を生成します。
各変更候補行に対して、<literal>MATCHED</literal>または<literal>NOT MATCHED</literal>の状態が一度だけ設定され、その後<literal>WHEN</literal>句が指定された順序で評価されます。
各変更候補行に対して、真と評価される最初の句が実行されます。
どの変更候補行に対しても、1つの<literal>WHEN</literal>句しか実行されません。
  </para>

  <para>
<!--
   <command>MERGE</command> actions have the same effect as
   regular <command>UPDATE</command>, <command>INSERT</command>, or
   <command>DELETE</command> commands of the same names. The syntax of
   those commands is different, notably that there is no <literal>WHERE</literal>
   clause and no table name is specified.  All actions refer to the
   target table,
   though modifications to other tables may be made using triggers.
-->
<command>MERGE</command>アクションは、同じ名前の通常の<command>UPDATE</command>、<command>INSERT</command>または<command>DELETE</command>コマンドと同じ効果を持ちます。
これらのコマンドの構文は異なり、<literal>WHERE</literal>句がなく、テーブル名が指定されていません。
すべてのアクションは対象テーブルを参照しますが、他のテーブルへの変更はトリガを使用して行うことができます。
  </para>

  <para>
<!--
   When <literal>DO NOTHING</literal> is specified, the source row is
   skipped. Since actions are evaluated in their specified order, <literal>DO
   NOTHING</literal> can be handy to skip non-interesting source rows before
   more fine-grained handling.
-->
<literal>DO NOTHING</literal>が指定されている場合、元となる行はスキップされます。
アクションは指定された順序で評価されるため、<literal>DO NOTHING</literal>は、より詳細な処理の前に、関心のない元となる行をスキップする場合に便利です。
  </para>

  <para>
<!--
   There is no separate <literal>MERGE</literal> privilege.
   If you specify an update action, you must have the
   <literal>UPDATE</literal> privilege on the column(s)
   of the target table
   that are referred to in the <literal>SET</literal> clause.
   If you specify an insert action, you must have the <literal>INSERT</literal>
   privilege on the target table.
   If you specify a delete action, you must have the <literal>DELETE</literal>
   privilege on the target table.
   If you specify a <literal>DO NOTHING</literal> action, you must have
   the <literal>SELECT</literal> privilege on at least one column
   of the target table.
   You will also need <literal>SELECT</literal> privilege on any column(s)
   of the <replaceable class="parameter">data_source</replaceable> and
   of the target table referred to
   in any <literal>condition</literal> (including <literal>join_condition</literal>)
   or <literal>expression</literal>.
   Privileges are tested once at statement start and are checked
   whether or not particular <literal>WHEN</literal> clauses are executed.
-->
別個の<literal>MERGE</literal>権限はありません。
更新アクションを指定する場合、<literal>SET</literal>句で参照される対象テーブルの列に対する<literal>UPDATE</literal>権限が必要です。
挿入アクションを指定する場合、対象テーブルに対する<literal>INSERT</literal>権限が必要です。
削除アクションを指定する場合、対象テーブルに対する<literal>DELETE</literal>権限が必要です。
<literal>DO NOTHING</literal>アクションを指定する場合、対象テーブルの少なくとも1つの列に対する<literal>SELECT</literal>権限が必要です。
また、<replaceable class="parameter">data_source</replaceable>の任意の列と<literal>condition</literal>（<literal>join_condition</literal>を含む）または<literal>expression</literal>で参照される対象テーブルの任意の列に対する<literal>SELECT</literal>権限も必要です。
権限は文の開始時に一度テストされ、特定の<literal>WHEN</literal>句が実行されるかどうかがチェックされます。
  </para>

  <para>
<!--
   <command>MERGE</command> is not supported if the
   target table is a
   materialized view, foreign table, or if it has any
   rules defined on it.
-->
対象テーブルがマテリアライズドビュー、外部テーブルである場合、またはテーブルにルールが定義されている場合、<command>MERGE</command>はサポートされません。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Parameters</title>
-->
  <title>パラメータ</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">with_query</replaceable></term>
    <listitem>
     <para>
<!--
      The <literal>WITH</literal> clause allows you to specify one or more
      subqueries that can be referenced by name in the <command>MERGE</command>
      query. See <xref linkend="queries-with"/> and <xref linkend="sql-select"/>
      for details.  Note that <literal>WITH RECURSIVE</literal> is not supported
      by <command>MERGE</command>.
-->
<literal>WITH</literal>句を使用すると、<command>MERGE</command>問い合わせで名前で参照できる1つ以上の副問い合わせを指定できます。
詳細は<xref linkend="queries-with"/>と<xref linkend="sql-select"/>を参照してください。
<literal>WITH RECURSIVE</literal>は<command>MERGE</command>ではサポートされていないことに注意してください。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">target_table_name</replaceable></term>
    <listitem>
     <para>
<!--
      The name (optionally schema-qualified) of the target table to merge into.
      If <literal>ONLY</literal> is specified before the table name, matching
      rows are updated or deleted in the named table only.  If
      <literal>ONLY</literal> is not specified, matching rows are also updated
      or deleted in any tables inheriting from the named table.  Optionally,
      <literal>*</literal> can be specified after the table name to explicitly
      indicate that descendant tables are included.  The
      <literal>ONLY</literal> keyword and <literal>*</literal> option do not
      affect insert actions, which always insert into the named table only.
-->
マージ先の対象テーブルの名前です(スキーマ修飾名も可)。
テーブル名の前に<literal>ONLY</literal>を指定すると、指定したテーブルでのみ一致する行が更新または削除されます。
<literal>ONLY</literal>を指定しないと、指定したテーブルを継承するテーブルでも一致する行が更新または削除されます。
オプションで、テーブル名の後に<literal>*</literal>を指定して、子孫のテーブルが含まれることを明示的に示すことができます。
<literal>ONLY</literal>キーワードおよび<literal>*</literal>オプションは、挿入操作には影響しません。
挿入操作では、常に指定したテーブルにのみ挿入します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">target_alias</replaceable></term>
    <listitem>
     <para>
<!--
      A substitute name for the target table. When an alias is
      provided, it completely hides the actual name of the table.  For
      example, given <literal>MERGE INTO foo AS f</literal>, the remainder of the
      <command>MERGE</command> statement must refer to this table as
      <literal>f</literal> not <literal>foo</literal>.
-->
対象テーブルの代替名です。
別名を指定すると、テーブルの実際の名前が完全に非表示になります。
たとえば、<literal>MERGE INTO foo AS f</literal>を指定した場合、<command>MERGE</command>文の残りの部分は、このテーブルを<literal>foo</literal>ではなく<literal>f</literal>として参照する必要があります。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">source_table_name</replaceable></term>
    <listitem>
     <para>
<!--
      The name (optionally schema-qualified) of the source table, view, or
      transition table.  If <literal>ONLY</literal> is specified before the
      table name, matching rows are included from the named table only.  If
      <literal>ONLY</literal> is not specified, matching rows are also included
      from any tables inheriting from the named table.  Optionally,
      <literal>*</literal> can be specified after the table name to explicitly
      indicate that descendant tables are included.
-->
元となるテーブル、ビュー、または遷移テーブルの名前(スキーマ修飾名も可)。
テーブル名の前に<literal>ONLY</literal>を指定すると、指定したテーブルのみからの一致する行が含まれます。
<literal>ONLY</literal>を指定しないと、指定したテーブルを継承するすべてのテーブルからも一致する行が含まれます。
オプションで、テーブル名の後に<literal>*</literal>を指定して、子孫のテーブルが含まれることを明示的に示すことができます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">source_query</replaceable></term>
    <listitem>
     <para>
<!--
      A query (<command>SELECT</command> statement or <command>VALUES</command>
      statement) that supplies the rows to be merged into the
      target table.
      Refer to the <xref linkend="sql-select"/>
      statement or <xref linkend="sql-values"/>
      statement for a description of the syntax.
-->
対象テーブルにマージされる行を提供する問い合わせ（<command>SELECT</command>文または<command>VALUES</command>文）です。
構文の説明は、<xref linkend="sql-select"/>文または<xref linkend="sql-values"/>文を参照してください。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">source_alias</replaceable></term>
    <listitem>
     <para>
<!--
      A substitute name for the data source. When an alias is
      provided, it completely hides the actual name of the table or the fact
      that a query was issued.
-->
データソースの代替名です。
別名を指定すると、テーブルの実際の名前や問い合わせが発行された事実が完全に隠されます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">join_condition</replaceable></term>
    <listitem>
     <para>
<!--
      <replaceable class="parameter">join_condition</replaceable> is
      an expression resulting in a value of type
      <type>boolean</type> (similar to a <literal>WHERE</literal>
      clause) that specifies which rows in the
      <replaceable class="parameter">data_source</replaceable>
      match rows in the target table.
-->
<replaceable class="parameter">join_condition</replaceable>は<type>boolean</type>型の値を返す式です（<literal>WHERE</literal>句に似ています）。この式は、<replaceable class="parameter">data_source</replaceable>のどの行が対象テーブルの行と一致するかを指定します。
     </para>
     <warning>
      <para>
<!--
       Only columns from the target table
       that attempt to match <replaceable class="parameter">data_source</replaceable>
       rows should appear in <replaceable class="parameter">join_condition</replaceable>.
       <replaceable class="parameter">join_condition</replaceable> subexpressions that
       only reference the target table's
       columns can affect which action is taken, often in surprising ways.
-->
<replaceable class="parameter">join_condition</replaceable>には、<replaceable class="parameter">data_source</replaceable>行に一致しようとする対象テーブルの列のみが表示されます。
対象テーブルの列のみを参照する<replaceable class="parameter">join_condition</replaceable>副式は、実行されるアクションに影響を与える可能性があり、多くの場合驚くべき方法で影響を与えます。
      </para>
     </warning>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">when_clause</replaceable></term>
    <listitem>
     <para>
<!--
      At least one <literal>WHEN</literal> clause is required.
-->
少なくとも1つの<literal>WHEN</literal>句が必要です。
     </para>
     <para>
<!--
      If the <literal>WHEN</literal> clause specifies <literal>WHEN MATCHED</literal>
      and the candidate change row matches a row in the
      target table,
      the <literal>WHEN</literal> clause is executed if the
      <replaceable class="parameter">condition</replaceable> is
      absent or it evaluates to <literal>true</literal>.
-->
<literal>WHEN</literal>句で<literal>WHEN MATCHED</literal>が指定され、変更候補行が対象テーブルの行と一致する場合、<replaceable class="parameter">condition</replaceable>が存在しないか<literal>true</literal>と評価されると<literal>WHEN</literal>句が実行されます。
     </para>
     <para>
<!--
      Conversely, if the <literal>WHEN</literal> clause specifies
      <literal>WHEN NOT MATCHED</literal>
      and the candidate change row does not match a row in the
      target table,
      the <literal>WHEN</literal> clause is executed if the
      <replaceable class="parameter">condition</replaceable> is
      absent or it evaluates to <literal>true</literal>.
-->
逆に、<literal>WHEN</literal>句が<literal>WHEN NOT MATCHED</literal>を指定し、変更候補行が対象テーブルの行と一致しない場合、<replaceable class="parameter">condition</replaceable>が存在しないか<literal>true</literal>と評価されると<literal>WHEN</literal>句が実行されます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">condition</replaceable></term>
    <listitem>
     <para>
<!--
      An expression that returns a value of type <type>boolean</type>.
      If this expression for a <literal>WHEN</literal> clause
      returns <literal>true</literal>, then the action for that clause
      is executed for that row.
-->
<type>boolean</type>型の値を返す式。
<literal>WHEN</literal>句のこの式が<literal>true</literal>を返す場合、その句のアクションがその行に対して実行されます。
     </para>
     <para>
<!--
      A condition on a <literal>WHEN MATCHED</literal> clause can refer to columns
      in both the source and the target relations. A condition on a
      <literal>WHEN NOT MATCHED</literal> clause can only refer to columns from
      the source relation, since by definition there is no matching target row.
      Only the system attributes from the target table are accessible.
-->
<literal>WHEN MATCHED</literal>句の条件は、ソースリレーションと対象リレーションの両方の列を参照できます。
<literal>WHEN NOT MATCHED</literal>句の条件は、ソースリレーションの列のみを参照できます。
これは、定義上、一致する対象の行がないためです。
対象テーブルのシステム属性のみにアクセスできます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">merge_insert</replaceable></term>
    <listitem>
     <para>
<!--
      The specification of an <literal>INSERT</literal> action that inserts
      one row into the target table.
      The target column names can be listed in any order. If no list of
      column names is given at all, the default is all the columns of the
      table in their declared order.
-->
対象テーブルに1つの行を挿入する<literal>INSERT</literal>アクションの指定。
対象列名は任意の順序でリストできます。
列名のリストがまったく指定されていない場合、デフォルトではテーブルのすべての列が宣言された順序になります。
     </para>
     <para>
<!--
      Each column not present in the explicit or implicit column list will be
      filled with a default value, either its declared default value
      or null if there is none.
-->
明示的または暗黙的な列リストにない各列にはデフォルト値（デフォルト値が宣言されていればその値、未宣言ならばNULL）が挿入されます。
     </para>
     <para>
<!--
      If the target table
      is a partitioned table, each row is routed to the appropriate partition
      and inserted into it.
      If the target table
      is a partition, an error will occur if any input row violates the
      partition constraint.
-->
対象テーブルがパーティションテーブルの場合、各行は適切なパーティションにルーティングされ、パーティションに挿入されます。
対象テーブルがパーティションの場合、入力行がパーティション制約に違反するとエラーが発生します。
     </para>
     <para>
<!--
      Column names may not be specified more than once.
      <command>INSERT</command> actions cannot contain sub-selects.
-->
列名を複数回指定することはできません。
<command>INSERT</command>アクションに副SELECTを含めることはできません。
     </para>
     <para>
<!--
      Only one <literal>VALUES</literal> clause can be specified.
      The <literal>VALUES</literal> clause can only refer to columns from
      the source relation, since by definition there is no matching target row.
-->
<literal>VALUES</literal>句は1つしか指定できません。
<literal>VALUES</literal>句は元となるリレーションの列のみを参照できます。
これは、定義上、一致する対象行がないためです。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">merge_update</replaceable></term>
    <listitem>
     <para>
<!--
      The specification of an <literal>UPDATE</literal> action that updates
      the current row of the target table.
      Column names may not be specified more than once.
-->
対象テーブルの現在の行を更新する<literal>UPDATE</literal>アクションの指定。
列名は2回以上指定できません。
     </para>
     <para>
<!--
      Neither a table name nor a <literal>WHERE</literal> clause are allowed.
-->
テーブル名も<literal>WHERE</literal>句も使用できません。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">merge_delete</replaceable></term>
    <listitem>
     <para>
<!--
      Specifies a <literal>DELETE</literal> action that deletes the current row
      of the target table.
      Do not include the table name or any other clauses, as you would normally
      do with a <xref linkend="sql-delete"/> command.
-->
対象テーブルの現在の行を削除する<literal>DELETE</literal>アクションを指定します。
<xref linkend="sql-delete"/>コマンドで通常行うように、テーブル名やその他の句は含めないでください。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">column_name</replaceable></term>
    <listitem>
     <para>
<!--
      The name of a column in the target table.  The column name
      can be qualified with a subfield name or array subscript, if
      needed.  (Inserting into only some fields of a composite
      column leaves the other fields null.)
      Do not include the table's name in the specification
      of a target column.
-->
対象テーブルの列名。
列名は、必要に応じてサブフィールド名または配列の添字で修飾できます。
（複合列の一部のフィールドにのみ挿入すると、他のフィールドはNULLになります。）
対象列の指定には、テーブルの名前を含めないでください。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OVERRIDING SYSTEM VALUE</literal></term>
    <listitem>
     <para>
<!--
      Without this clause, it is an error to specify an explicit value
      (other than <literal>DEFAULT</literal>) for an identity column defined
      as <literal>GENERATED ALWAYS</literal>.  This clause overrides that
      restriction.
-->
この句を使用しない場合、<literal>GENERATED ALWAYS</literal>として定義されたID列に対して明示的な値(<literal>DEFAULT</literal>以外)を指定するとエラーになります。
この句は、この制限を上書きします。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OVERRIDING USER VALUE</literal></term>
    <listitem>
     <para>
<!--
      If this clause is specified, then any values supplied for identity
      columns defined as <literal>GENERATED BY DEFAULT</literal> are ignored
      and the default sequence-generated values are applied.
-->
この句を指定した場合、<literal>GENERATED BY DEFAULT</literal>として定義されたID列に提供された値は無視され、シーケンスで生成されたデフォルト値が適用されます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DEFAULT VALUES</literal></term>
    <listitem>
     <para>
<!--
      All columns will be filled with their default values.
      (An <literal>OVERRIDING</literal> clause is not permitted in this
      form.)
-->
すべての列にデフォルト値が設定されます。
（このフォームでは<literal>OVERRIDING</literal>句は使用できません。）
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">expression</replaceable></term>
    <listitem>
     <para>
<!--
      An expression to assign to the column.  If used in a
      <literal>WHEN MATCHED</literal> clause, the expression can use values
      from the original row in the target table, and values from the
      <replaceable class="parameter">data_source</replaceable> row.
      If used in a <literal>WHEN NOT MATCHED</literal> clause, the
      expression can use values from the
      <replaceable class="parameter">data_source</replaceable> row.
-->
列に割り当てる式。
<literal>WHEN MATCHED</literal>句で使用する場合、式では対象テーブルの元の行の値と<replaceable class="parameter">data_source</replaceable>行の値を使用できます。
<literal>WHEN NOT MATCHED</literal>句で使用する場合、式では<replaceable class="parameter">data_source</replaceable>の値を使用できます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DEFAULT</literal></term>
    <listitem>
     <para>
<!--
      Set the column to its default value (which will be <literal>NULL</literal>
      if no specific default expression has been assigned to it).
-->
列をデフォルト値に設定します（特定のデフォルト式が割り当てられていない場合は<literal>NULL</literal>になります）。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">sub-SELECT</replaceable></term>
    <listitem>
     <para>
<!--
      A <literal>SELECT</literal> sub-query that produces as many output columns
      as are listed in the parenthesized column list preceding it.  The
      sub-query must yield no more than one row when executed.  If it
      yields one row, its column values are assigned to the target columns;
      if it yields no rows, NULL values are assigned to the target columns.
      The sub-query can refer to values from the original row in the target table,
      and values from the <replaceable class="parameter">data_source</replaceable>
      row.
-->
それに先行する括弧付きの列リストに列挙されている出力列と同じ数の出力列を生成する<literal>SELECT</literal>副問い合わせ。
副問い合わせは、実行時に2行以上生成してはいけません。
行が1つ返されると、その列の値が対象列に割り当てられます。
行が返されない場合は、NULL値が対象列に割り当てられます。
副問い合わせは、対象テーブルの元の行からの値と<replaceable class="parameter">data_source</replaceable>行からの値を参照できます。
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </refsect1>

 <refsect1>
<!--
  <title>Outputs</title>
-->
  <title>出力</title>

  <para>
<!--
   On successful completion, a <command>MERGE</command> command returns a command
   tag of the form
-->
正常に完了すると、<command>MERGE</command>コマンドは以下の形式のコマンドタグを返します。
<screen>
MERGE <replaceable class="parameter">total_count</replaceable>
</screen>
<!--
   The <replaceable class="parameter">total_count</replaceable> is the total
   number of rows changed (whether inserted, updated, or deleted).
   If <replaceable class="parameter">total_count</replaceable> is 0, no rows
   were changed in any way.
-->
<replaceable class="parameter">total_count</replaceable>は変更された行の合計数です(挿入、更新、または削除のいずれか)。
<replaceable class="parameter">total_count</replaceable>が0の場合、行はまったく変更されていません。
  </para>

 </refsect1>

 <refsect1>
<!--
  <title>Notes</title>
-->
  <title>注釈</title>

  <para>
<!--
   The following steps take place during the execution of
   <command>MERGE</command>.
-->
次のステップは、<command>MERGE</command>の実行中に行われます。
    <orderedlist>
     <listitem>
      <para>
<!--
       Perform any <literal>BEFORE STATEMENT</literal> triggers for all
       actions specified, whether or not their <literal>WHEN</literal>
       clauses match.
-->
<literal>WHEN</literal>句が一致するかどうかに関係なく、指定されたすべてのアクションに対して<literal>BEFORE STATEMENT</literal>トリガを実行します。
      </para>
     </listitem>
     <listitem>
      <para>
<!--
       Perform a join from source to target table.
       The resulting query will be optimized normally and will produce
       a set of candidate change rows. For each candidate change row,
       <orderedlist>
        <listitem>
         <para>
          Evaluate whether each row is <literal>MATCHED</literal> or
          <literal>NOT MATCHED</literal>.
-->
ソーステーブルから対象テーブルへの結合を実行します。
結果の問合せは通常どおり最適化され、一連の変更候補行が生成されます。
変更候補行ごとに、<orderedlist><listitem><para>各行が<literal>MATCHED</literal>または<literal>NOT MATCHED</literal>であるかどうかを評価します。
         </para>
        </listitem>
        <listitem>
         <para>
<!--
          Test each <literal>WHEN</literal> condition in the order
          specified until one returns true.
-->
真が返されるまで、各<literal>WHEN</literal>条件を指定された順序でテストします。
         </para>
        </listitem>
        <listitem>
         <para>
<!--
          When a condition returns true, perform the following actions:
-->
条件が真を返す場合は、次のアクションを実行します。
          <orderedlist>
           <listitem>
            <para>
<!--
             Perform any <literal>BEFORE ROW</literal> triggers that fire
             for the action's event type.
-->
アクションのイベントタイプに対して起動する<literal>BEFORE ROW</literal>トリガを実行します。
            </para>
           </listitem>
           <listitem>
            <para>
<!--
             Perform the specified action, invoking any check constraints on the
             target table.
-->
指定されたアクションを実行し、対象テーブルの検査制約を呼び出します。
            </para>
           </listitem>
           <listitem>
            <para>
<!--
             Perform any <literal>AFTER ROW</literal> triggers that fire for
             the action's event type.
-->
アクションのイベントタイプに対して起動する<literal>AFTER ROW</literal>トリガを実行します。
            </para>
           </listitem>
          </orderedlist></para>
        </listitem>
       </orderedlist></para>
     </listitem>
     <listitem>
      <para>
<!--
       Perform any <literal>AFTER STATEMENT</literal> triggers for actions
       specified, whether or not they actually occur.  This is similar to the
       behavior of an <command>UPDATE</command> statement that modifies no rows.
-->
アクションが実際に発生するかどうかに関係なく、指定されたアクションに対して<literal>AFTER STATEMENT</literal>トリガを実行します。
これは、行を変更しない<command>UPDATE</command>文の動作に似ています。
      </para>
     </listitem>
    </orderedlist>
<!--
   In summary, statement triggers for an event type (say,
   <command>INSERT</command>) will be fired whenever we
   <emphasis>specify</emphasis> an action of that kind.
   In contrast, row-level triggers will fire only for the specific event type
   being <emphasis>executed</emphasis>.
   So a <command>MERGE</command> command might fire statement triggers for both
   <command>UPDATE</command> and <command>INSERT</command>, even though only
   <command>UPDATE</command> row triggers were fired.
-->
要約するとイベントタイプの文トリガ（たとえば、<command>INSERT</command>など）は、その種類のアクションを<emphasis>指定</emphasis> するたびに起動されます。
対照的に、行レベルトリガは、<emphasis>実行される</emphasis>特定のイベントタイプに対してのみ起動されます。
したがって、<command>MERGE</command>コマンドでは、<command>UPDATE</command>行トリガのみが起動された場合でも、<command>UPDATE</command>と<command>INSERT</command>の両方に対して文トリガを起動する可能性があります。
  </para>

  <para>
<!--
   You should ensure that the join produces at most one candidate change row
   for each target row.  In other words, a target row shouldn't join to more
   than one data source row.  If it does, then only one of the candidate change
   rows will be used to modify the target row; later attempts to modify the
   row will cause an error.
   This can also occur if row triggers make changes to the target table
   and the rows so modified are then subsequently also modified by
   <command>MERGE</command>.
   If the repeated action is an <command>INSERT</command>, this will
   cause a uniqueness violation, while a repeated <command>UPDATE</command>
   or <command>DELETE</command> will cause a cardinality violation; the
   latter behavior is required by the <acronym>SQL</acronym> standard.
   This differs from historical <productname>PostgreSQL</productname>
   behavior of joins in <command>UPDATE</command> and
   <command>DELETE</command> statements where second and subsequent
   attempts to modify the same row are simply ignored.
-->
結合では、各対象行に対して最大1つの変更候補行が生成されるようにする必要があります。
つまり、対象行は複数のデータソース行に結合できません。
結合する場合、変更候補行の1つだけが対象行の変更に使用されます。
後で行を変更しようとするとエラーが発生します。
これは、行トリガが対象テーブルを変更し、変更された行が後で<command>MERGE</command>によっても変更される場合にも発生する可能性があります。
繰り返されるアクションが<command>INSERT</command>の場合、一意性違反が発生しますが、<command>UPDATE</command>または<command>DELETE</command>を繰り返すとカーディナリティ違反が発生します。
後者の動作は標準<acronym>SQL</acronym>で要求されています。
これは、<productname>PostgreSQL</productname>の<command>UPDATE</command>および<command>DELETE</command>文における結合の歴史的な動作とは異なります。
この動作では、2回目以降の同じ行の変更は単純に無視されます。
  </para>

  <para>
<!--
   If a <literal>WHEN</literal> clause omits an <literal>AND</literal>
   sub-clause, it becomes the final reachable clause of that
   kind (<literal>MATCHED</literal> or <literal>NOT MATCHED</literal>).
   If a later <literal>WHEN</literal> clause of that kind
   is specified it would be provably unreachable and an error is raised.
   If no final reachable clause is specified of either kind, it is
   possible that no action will be taken for a candidate change row.
-->
<literal>WHEN</literal>句で<literal>AND</literal>副句が省略された場合、その句はその種類の最終到達可能句(<literal>MATCHED</literal>または<literal>NOT MATCHED</literal>)になります。
その種類の後の<literal>WHEN</literal>句が指定された場合、到達不能である可能性があり、エラーが発生します。
いずれの種類の最終到達可能句も指定されていない場合、変更候補行に対してアクションが実行されない可能性があります。
  </para>

  <para>
<!--
   The order in which rows are generated from the data source is
   indeterminate by default.
   A <replaceable class="parameter">source_query</replaceable> can be
   used to specify a consistent ordering, if required, which might be
   needed to avoid deadlocks between concurrent transactions.
-->
デフォルトでは、データソースから行が生成される順序は不定です。
<replaceable class="parameter">source_query</replaceable>を使用して、必要に応じて一貫した順序を指定できます。これは、並行しているトランザクション間のデッドロックを回避するために必要になる場合があります。
  </para>

  <para>
<!--
   There is no <literal>RETURNING</literal> clause with
   <command>MERGE</command>.  Actions of <command>INSERT</command>,
   <command>UPDATE</command> and <command>DELETE</command> cannot contain
   <literal>RETURNING</literal> or <literal>WITH</literal> clauses.
-->
<command>MERGE</command>には<literal>RETURNING</literal>句はありません。
<command>INSERT</command>、<command>UPDATE</command>、<command>DELETE</command>のアクションに<literal>RETURNING</literal>句や<literal>WITH</literal>句を含めることはできません。
  </para>

  <para>
<!--
   When <command>MERGE</command> is run concurrently with other commands
   that modify the target table, the usual transaction isolation rules
   apply; see <xref linkend="transaction-iso"/> for an explanation
   on the behavior at each isolation level.
   You may also wish to consider using <command>INSERT ... ON CONFLICT</command>
   as an alternative statement which offers the ability to run an
   <command>UPDATE</command> if a concurrent <command>INSERT</command>
   occurs.  There are a variety of differences and restrictions between
   the two statement types and they are not interchangeable.
-->
<command>MERGE</command>を対象テーブルを変更する他のコマンドと同時に実行すると、通常のトランザクション分離規則が適用されます。
各分離レベルでの動作の説明は<xref linkend="transaction-iso"/>を参照してください。
また、<command>INSERT ... ON CONFLICT</command>を代替文として使用することも検討できます。
この文は、同時<command>INSERT</command>が発生した場合に<command>UPDATE</command>を実行する機能を提供します。
2つの文タイプの間には様々な違いや制限があり、相互に交換することはできません。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Examples</title>
-->
  <title>例</title>

  <para>
<!--
   Perform maintenance on <literal>customer_accounts</literal> based
   upon new <literal>recent_transactions</literal>.
-->
新規<literal>recent_transactions</literal>に基づいて、<literal>customer_accounts</literal>のメンテナンスを実行します。

<programlisting>
MERGE INTO customer_account ca
USING recent_transactions t
ON t.customer_id = ca.customer_id
WHEN MATCHED THEN
  UPDATE SET balance = balance + transaction_value
WHEN NOT MATCHED THEN
  INSERT (customer_id, balance)
  VALUES (t.customer_id, t.transaction_value);
</programlisting>
  </para>

  <para>
<!--
   Notice that this would be exactly equivalent to the following
   statement because the <literal>MATCHED</literal> result does not change
   during execution.
-->
<literal>MATCHED</literal>の結果は実行中に変更されないため、これは次の文とまったく同じになることに注意してください。

<programlisting>
MERGE INTO customer_account ca
USING (SELECT customer_id, transaction_value FROM recent_transactions) AS t
ON t.customer_id = ca.customer_id
WHEN MATCHED THEN
  UPDATE SET balance = balance + transaction_value
WHEN NOT MATCHED THEN
  INSERT (customer_id, balance)
  VALUES (t.customer_id, t.transaction_value);
</programlisting>
  </para>

  <para>
<!--
   Attempt to insert a new stock item along with the quantity of stock. If
   the item already exists, instead update the stock count of the existing
   item. Don't allow entries that have zero stock.
-->
在庫数量とともに新規在庫品目を挿入しようとしました。
品目がすでに存在する場合は、既存品目の在庫数を更新します。
在庫数が0のエントリは許可しません。
<programlisting>
MERGE INTO wines w
USING wine_stock_changes s
ON s.winename = w.winename
WHEN NOT MATCHED AND s.stock_delta > 0 THEN
  INSERT VALUES(s.winename, s.stock_delta)
WHEN MATCHED AND w.stock + s.stock_delta > 0 THEN
  UPDATE SET stock = w.stock + s.stock_delta
WHEN MATCHED THEN
  DELETE;
</programlisting>

<!--
   The <literal>wine_stock_changes</literal> table might be, for example, a
   temporary table recently loaded into the database.
-->
<literal>wine_stock_changes</literal>テーブルは、たとえば、最近データベースにロードされた一時テーブルです。
  </para>

 </refsect1>

 <refsect1>
<!--
  <title>Compatibility</title>
-->
  <title>互換性</title>
   <para>
<!--
    This command conforms to the <acronym>SQL</acronym> standard.
-->
このコマンドは標準<acronym>SQL</acronym>に準拠しています。
  </para>
   <para>
<!--
    The <literal>WITH</literal> clause and <literal>DO NOTHING</literal>
    action are extensions to the <acronym>SQL</acronym> standard.
-->
<literal>WITH</literal>句と<literal>DO NOTHING</literal>アクションは、標準<acronym>SQL</acronym>の拡張です。
  </para>
 </refsect1>
</refentry>
