<!-- doc/src/sgml/pgarchivecleanup.sgml -->

<refentry id="pgarchivecleanup">
 <indexterm zone="pgarchivecleanup">
  <primary>pg_archivecleanup</primary>
 </indexterm>

 <refmeta>
  <refentrytitle><application>pg_archivecleanup</application></refentrytitle>
  <manvolnum>1</manvolnum>
<!--
  <refmiscinfo>Application</refmiscinfo>
-->
  <refmiscinfo>アプリケーション</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_archivecleanup</refname>
<!--
  <refpurpose>clean up <productname>PostgreSQL</productname> WAL archive files</refpurpose>
-->
<refpurpose><productname>PostgreSQL</productname> WALアーカイブファイルを消去する</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_archivecleanup</command>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
   <arg choice="plain"><replaceable>archivelocation</replaceable></arg>
   <arg choice="plain"><replaceable>oldestkeptwalfile</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
  <title>Description</title>
-->
  <title>説明</title>

 <para>
<!--
  <application>pg_archivecleanup</> is designed to be used as an
  <literal>archive_cleanup_command</literal> to clean up WAL file archives when
  running as a standby server (see <xref linkend="warm-standby">).
  <application>pg_archivecleanup</> can also be used as a standalone program to
  clean WAL file archives.
-->
<application>pg_archivecleanup</>は、スタンバイサーバとして動作している際のWALファイルのアーカイブを消去するための<literal>archive_cleanup_command</literal>として使用されるように設計されています（<xref linkend="warm-standby">参照）。
同時に、<application>pg_archivecleanup</>はWALファイルのアーカイブを消去するためのスタンドアローンのプログラムとしても利用することができます。
 </para>

  <para>
<!--
   To configure a standby
   server to use <application>pg_archivecleanup</>, put this into its
   <filename>recovery.conf</filename> configuration file:
-->
<application>pg_archivecleanup</>を使うためにスタンバイサーバを設定するには、以下を<filename>recovery.conf</filename>設定ファイルに記述します。
<programlisting>
archive_cleanup_command = 'pg_archivecleanup <replaceable>archivelocation</> %r'
</programlisting>
<!--
   where <replaceable>archivelocation</> is the directory from which WAL segment
   files should be removed.
-->
<replaceable>archivelocation</>は、WALセグメントファイルを削除するディレクトリです。
  </para>
  <para>
<!--
   When used within <xref linkend="archive-cleanup-command">, all WAL files
   logically preceding the value of the <literal>%r</> argument will be removed
   from <replaceable>archivelocation</>. This minimizes the number of files
   that need to be retained, while preserving crash-restart capability.  Use of
   this parameter is appropriate if the <replaceable>archivelocation</> is a
   transient staging area for this particular standby server, but
   <emphasis>not</> when the <replaceable>archivelocation</> is intended as a
   long-term WAL archive area, or when multiple standby servers are recovering
   from the same archive location.
-->
<literal>archive_cleanup_command</literal>で使用される場合、論理的に<literal>%r</>より前のすべてのWALファイルは<replaceable>archivelocation</>から削除されます。
これによって、クラッシュ—リスタートの機能を維持するための、保持しなければならないファイル数を最小限にします。
このパラメータの使用は、<replaceable>archivelocation</>がスタンバイサーバにおいて短期的な保存場所となっている場合には適切ですが、<replaceable>archivelocation</>を長期的なWALアーカイブ領域として使っている場合、または複数のスタンバイサーバが同一のアーカイブログの場所からリカバリしている場合には<emphasis>適切ではありません</>。
  </para>
  <para>
<!--
   When used as a standalone program all WAL files logically preceding the
   <replaceable>oldestkeptwalfile</> will be removed from <replaceable>archivelocation</>.
   In this mode, if you specify a <filename>.backup</> file name, then only the file prefix
   will be used as the <replaceable>oldestkeptwalfile</>. This allows you to remove
   all WAL files archived prior to a specific base backup without error.
   For example, the following example will remove all files older than
   WAL file name <filename>000000010000003700000010</>:
-->
スタンドアローンプログラムとして使用される場合、<replaceable>oldestkeptwalfile</>より論理的に前のWALファイルは、すべて<replaceable>archivelocation</>から削除されます。
このモードでは、<filename>.backup</>ファイルが指定されると、そのプレフィックス部だけが<replaceable>oldestkeptwalfile</>として使用されます。
この機能は、エラーを起こすことなく特定のベースバックアップより前のすべてのWALファイルを削除することを可能にします。
以下の例は、<filename>000000010000003700000010</>より古いすべてのファイルを削除する実例です。
<programlisting>
pg_archivecleanup -d archive 000000010000003700000010.00000020.backup

pg_archivecleanup:  keep WAL file "archive/000000010000003700000010" and later
pg_archivecleanup:  removing file "archive/00000001000000370000000F"
pg_archivecleanup:  removing file "archive/00000001000000370000000E"
</programlisting>
  </para>
  <para>
<!--
   <application>pg_archivecleanup</application> assumes that
   <replaceable>archivelocation</> is a directory readable and writable by the
   server-owning user.
-->
<application>pg_archivecleanup</application>は、<replaceable>archivelocation</>がサーバを実行しているユーザによって読み書き可能なディレクトリであるものと仮定しています。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Options</title>
-->
  <title>オプション</title>

   <para>
<!--
    <application>pg_archivecleanup</application> accepts the following command-line arguments:
-->
<application>pg_archivecleanup</application>は、以下のコマンドライン引数を受け付けます。

    <variablelist>

     <varlistentry>
      <term><option>-d</option></term>
      <listitem>
       <para>
<!--
        Print lots of debug logging output on <filename>stderr</>.
-->
<filename>stderr</>に大量のデバッグログを出力します。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-n</option></term>
      <listitem>
       <para>
<!--
        Print the names of the files that would have been removed on <filename>stdout</> (performs a dry run).
-->
削除されるファイルの名前を<filename>stdout</>に出力します(実際には削除しません).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-V</></term>
      <term><option>--version</></term>
      <listitem>
       <para>
<!--
        Print the <application>pg_archivecleanup</application> version and exit.
-->
<application>pg_archivecleanup</application>のバージョンを表示して終了します。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-x</option> <replaceable>extension</></term>
      <listitem>
       <para>
<!--
        When using the program as a standalone utility, provide an extension
        that will be stripped from all file names before deciding if they
        should be deleted.  This is typically useful for cleaning up archives
        that have been compressed during storage, and therefore have had an
        extension added by the compression program.  For example: <literal>-x
        .gz</literal>.
-->
プログラムがスタンドアローンユーティリティとして使用される場合、削除するファイルを決定する前にファイル名から取り除かれる拡張子を指定します。
保存時に圧縮され、そのため圧縮プログラムにより拡張子を付けられたアーカイブを消去するのに特に役に立ちます。
例: <literal>-x.gz</literal>
       </para>

       <para>
<!--
        Note that the
        <filename>.backup</> file name passed to the program should not
        include the extension.
-->
プログラムに渡されるファイル名<filename>.backup</>は拡張子を含んではいけないことに注意して下さい。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-?</></term>
      <term><option>--help</></term>
      <listitem>
       <para>
<!--
        Show help about <application>pg_archivecleanup</application> command line
        arguments, and exit.
-->
<application>pg_archivecleanup</application>のコマンドライン引数に関するヘルプを表示して終了します。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
 </refsect1>

 <refsect1>
<!--
  <title>Notes</title>
-->
  <title>注釈</title>

  <para>
<!--
   <application>pg_archivecleanup</application> is designed to work with
   <productname>PostgreSQL</> 8.0 and later when used as a standalone utility,
   or with <productname>PostgreSQL</> 9.0 and later when used as an
   archive cleanup command.
-->
<application>pg_archivecleanup</application>は、<productname>PostgreSQL</> 8.0 とそれ以降において、スタンドアローンユーティリティとして動作するように設計されています。
また、<productname>PostgreSQL</> 9.0 とそれ以降においてはアーカイブのクリーンナップコマンドとして動作するように設計されています。
  </para>

  <para>
<!--
   <application>pg_archivecleanup</application> is written in C and has an
   easy-to-modify source code, with specifically designated sections to modify
   for your own needs
-->
<application>pg_standby</application>はC言語で書かれており、必要に応じて修正すべき部分が明確に示されているので、修正の容易なソースコードとなっています。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Examples</title>
-->
  <title>例</title>

<!--
  <para>On Linux or Unix systems, you might use:
-->
  <para>LinuxやUnixのシステムでは、以下のように使います。
<programlisting>
archive_cleanup_command = 'pg_archivecleanup -d /mnt/standby/archive %r 2>>cleanup.log'
</programlisting>
<!--
   where the archive directory is physically located on the standby server,
   so that the <varname>archive_command</> is accessing it across NFS,
   but the files are local to the standby.
   This will:
-->
アーカイブディレクトリは物理的にはスタンバイサーバ上に配置されていますので、<literal>archive_command</>はNFSを経由してアーカイブディレクトリにアクセスしますが、それらのファイルはスタンバイサーバにとってはローカルファイルです。
この設定では、
  </para>
  <itemizedlist>
   <listitem>
    <para>
<!--
     produce debugging output in <filename>cleanup.log</>
-->
デバッグ出力を<filename>cleanup.log</>に生成します。
    </para>
   </listitem>
   <listitem>
    <para>
<!--
     remove no-longer-needed files from the archive directory
-->
アーカイブディレクトリの中から、不要になったファイルを削除します。
    </para>
   </listitem>
  </itemizedlist>
 </refsect1>

 <refsect1>
<!--
  <title>Author</title>
-->
  <title>作者</title>

  <para>
   Simon Riggs <email>simon@2ndquadrant.com</email>
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>See Also</title>
-->
  <title>関連項目</title>

  <simplelist type="inline">
   <member><xref linkend="pgstandby"></member>
  </simplelist>
 </refsect1>
</refentry>
