<!--
doc/src/sgml/ref/postgres-ref.sgml
PostgreSQL documentation
-->

<refentry id="app-postgres">
 <indexterm zone="app-postgres">
  <primary>postgres</primary>
 </indexterm>

 <refmeta>
  <refentrytitle><application>postgres</application></refentrytitle>
  <manvolnum>1</manvolnum>
<!--
  <refmiscinfo>Application</refmiscinfo>
-->
  <refmiscinfo>アプリケーション</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>postgres</refname>
<!--
  <refpurpose><productname>PostgreSQL</productname> database server</refpurpose>
-->
<refpurpose>
<productname>PostgreSQL</productname>データベースサーバ
</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>postgres</command>
   <arg rep="repeat"><replaceable>option</></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
  <title>Description</title>
-->
  <title>説明</title>

  <para>
<!--
   <command>postgres</command> is the
   <productname>PostgreSQL</productname> database server.  In order
   for a client application to access a database it connects (over a
   network or locally) to a running <command>postgres</command> instance.
   The <command>postgres</command> instance then starts a separate server
   process to handle the connection.
-->
<command>postgres</command>は、<productname>PostgreSQL</productname>のデータベースサーバです。
クライアントアプリケーションがデータベースに接続するためには、稼働中の<command>postgres</command>インスタンスに（ネットワークを介して、またはローカルで）接続する必要があります。
その後、<command>postgres</command>は接続を取り扱うために別のサーバプロセスを開始します。
  </para>

  <para>
<!--
   One <command>postgres</command> instance always manages the data of
   exactly one database cluster.  A database cluster is a collection
   of databases that is stored at a common file system location (the
   <quote>data area</quote>).  More than one
   <command>postgres</command> instance can run on a system at one
   time, so long as they use different data areas and different
   communication ports (see below).  When
   <command>postgres</command> starts it needs to know the location
   of the data area.  The location must be specified by the
   <option>-D</option> option or the <envar>PGDATA</envar> environment
   variable; there is no default.  Typically, <option>-D</option> or
   <envar>PGDATA</envar> points directly to the data area directory
   created by <xref linkend="app-initdb">.  Other possible file layouts are
   discussed in <xref linkend="runtime-config-file-locations">.
-->
1つの<command>postgres</command>インスタンスは常に1つのデータベースクラスタのデータを管理します。
データベースクラスタとは、共通のファイルシステム領域（<quote>データ領域</quote>）に格納されているデータベースの集まりのことです。
1つのシステム上で、同時に複数の<command>postmaster</command>インスタンスを実行することは可能ですが、それらは異なるデータ領域と、異なる接続ポート（下記参照）を使用する必要があります。
<command>postgres</command>は、その起動時にデータ領域の場所を知らなければなりません。
その場所を<option>-D</option>オプションまたは環境変数<envar>PGDATA</envar>によって指定しなければなりません。デフォルト値はありません。
通常、<option>-D</option>または<envar>PGDATA</envar>は、<xref linkend="app-initdb">で作成されたデータ領域ディレクトリを直接指し示します。
他のファイルレイアウトを取ることもできます。<xref linkend="runtime-config-file-locations">を参照してください。
  </para>

  <para>
<!--
   By default <command>postgres</command> starts in the
   foreground and prints log messages to the standard error stream.  In
   practical applications <command>postgres</command>
   should be started as a background process, perhaps at boot time.
-->
デフォルトでは、<command>postgres</command>はフォアグラウンドで起動し、ログメッセージを標準エラー出力に出力します。
実運用では、<command>postgres</command>アプリケーションはおそらくマシン起動時にバックグラウンドで起動されるはずです。
  </para>

  <para>
<!--
   The <command>postgres</command> command can also be called in
   single-user mode.  The primary use for this mode is during
   bootstrapping by <xref linkend="app-initdb">.  Sometimes it is used
   for debugging or disaster recovery;  note that running a single-user
   server is not truly suitable for debugging the server, since no
   realistic interprocess communication and locking will happen.
   When invoked in single-user
   mode from the shell, the user can enter queries and the results
   will be printed to the screen, but in a form that is more useful
   for developers than end users.  In the single-user mode,
   the session user will be set to the user with ID 1, and implicit
   superuser powers are granted to this user.
   This user does not actually have to exist, so the single-user mode
   can be used to manually recover from certain
   kinds of accidental damage to the system catalogs.
-->
また<command>postgres</command>はシングルユーザモードで呼び出すこともできます。
このモードは、主に<xref linkend="app-initdb">による初期化処理の中で使用されます。
これを、デバッグのためや障害からの復旧時に使用することもできます。
実際には発生するはずのプロセス間通信やロック処理が発生しませんので、シングルユーザモードがサーバのデバッグに必ずしも適したものではないことに注意してください。
シェルからシングルユーザモードで起動された場合、ユーザは問い合わせを入力できます。
結果は画面上に表示されますが、その形式はエンドユーザ向けではなく開発者向けのものです。
シングルユーザモードでは、セッションユーザはIDが1のユーザと設定され、暗黙的にスーパーユーザの権限がこのユーザに与えられます。
このユーザは実際に存在していなくても構いません。
このため、シングルユーザモードはシステムカタログの偶発的な損傷などから手動で復旧するために使用することができます。
  </para>
 </refsect1>

 <refsect1 id="app-postgres-options">
<!--
  <title>Options</title>
-->
<title>オプション</title>

   <para>
<!--
    <command>postgres</command> accepts the following command-line
    arguments.  For a detailed discussion of the options consult <xref
    linkend="runtime-config">.  You can save typing most of these
    options by setting up a configuration file.  Some (safe) options
    can also be set from the connecting client in an
    application-dependent way to apply only for that session.  For
    example, if the environment variable <envar>PGOPTIONS</envar> is
    set, then <application>libpq</>-based clients will pass that
    string to the server, which will interpret it as
    <command>postgres</command> command-line options.
-->
<command>postgres</command>には、下記のコマンドライン引数を指定できます。
オプションに関する詳細は<xref linkend="runtime-config">を参照してください。
また、設定ファイルを使用することによって、これらのほとんどのオプションについて入力する手間を省くことができます。
一部の（安全な）オプションは接続中のクライアントから設定することもできます。
その設定方法はアプリケーションに依存し、また、そのセッションでのみ適用されます。
たとえば、環境変数<envar>PGOPTIONS</envar>を設定すると、<application>libpq</>に基づくクライアントはその文字列をサーバに渡します。
渡された文字列は<command>postgres</command>コマンドラインオプションとして解釈されます。
   </para>

   <refsect2>
<!--
    <title>General Purpose</title>
-->
<title>一般的な目的</title>

    <variablelist>
     <varlistentry>
      <term><option>-A 0|1</option></term>
      <listitem>
       <para>
<!--
        Enables run-time assertion checks, which is a debugging aid to
        detect programming mistakes.  This option is only available if
        assertions were enabled when <productname>PostgreSQL</> was
        compiled. If so, the default is on.
-->
実行時にアサーション検査を行い、プログラムの不具合を検知するデバッグを補助します。
このオプションは、<productname>PostgreSQL</>のコンパイル時にアサーションが有効にされた場合にのみ、使用可能となります。
この場合、デフォルトで有効になります。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-B <replaceable class="parameter">nbuffers</replaceable></option></term>
      <listitem>
       <para>
<!--
        Sets the number of shared buffers for use by the server
        processes.  The default value of this parameter is chosen
        automatically by <application>initdb</application>.
        Specifying this option is equivalent to setting the
        <xref linkend="guc-shared-buffers"> configuration parameter.
-->
サーバプロセスが使用する共有バッファの数を設定します。
このパラメータのデフォルト値は<application>initdb</application>により自動的に決まります。
このオプションを指定することは設定パラメータ<xref linkend="guc-shared-buffers">を設定することと同等です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-c <replaceable>name</replaceable>=<replaceable>value</replaceable></option></term>
      <listitem>
       <para>
<!--
        Sets a named run-time parameter. The configuration parameters
        supported by <productname>PostgreSQL</productname> are
        described in <xref linkend="runtime-config">. Most of the
        other command line options are in fact short forms of such a
        parameter assignment.  <option>-c</> can appear multiple times
        to set multiple parameters.
-->
指定の実行時パラメータを設定します。
<productname>PostgreSQL</productname>でサポートされる設定パラメータは<xref linkend="runtime-config">で説明します。
実際には、他の多くのコマンドラインオプションはこのようなパラメータへの代入を簡略化したものです。
<option>-c</>は複数のパラメータを設定するために複数個使用することができます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-C <replaceable>name</replaceable></option></term>
      <listitem>
       <para>
<!--
        Prints the value of the named run-time parameter, and exits.
        (See the <option>-c</> option above for details.)  This can
        be used on a running server, and returns values from
        <filename>postgresql.conf</>, modified by any parameters
        supplied in this invocation.  It does not reflect parameters
        supplied when the cluster was started.
-->
指定された名前の実行時パラメータの値を表示し、終了します、
（詳細については上の<option>-c</>を参照してください。）
これは実行中のサーバに対して使用することができ、<filename>postgresql.conf</>からの値やその起動時に与えられたパラメータにより変更された値を返します。
クラスタが起動した時に与えられたパラメータは反映されません。
       </para>

       <para>
<!--
        This option is meant for other programs that interact with a server
        instance, such as <xref linkend="app-pg-ctl">, to query configuration
        parameter values.  User-facing applications should instead use <xref
        linkend="sql-show"> or the <structname>pg_settings</structname> view.
-->
このオプションは、<xref linkend="app-pg-ctl">など、サーバインスタンスと連携する他のプログラムが設定パラメータ値を問い合わせることを意図しています。
ユーザ向けのアプリケーションでは代わりに<xref linkend="sql-show">や<structname>pg_settings</structname>ビューなどを使用すべきです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-d <replaceable>debug-level</replaceable></option></term>
      <listitem>
       <para>
<!--
        Sets the debug level.  The higher this value is set, the more
        debugging output is written to the server log.  Values are
        from 1 to 5.  It is also possible to pass <literal>-d
        0</literal> for a specific session, which will prevent the
        server log level of the parent <command>postgres</> process from being
        propagated to this session.
-->
デバッグレベルを設定します。
大きな値が設定されているほど、より多くのデバッグ情報がサーバのログに出力されます。
値として設定できる範囲は、1から5までです。
特定のセッションで<literal>-d 0</literal>を渡すこともできます。
この設定により、親の<command>postgres</>プロセスのサーバログレベルがこのセッションに伝播されません。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-D <replaceable class="parameter">datadir</replaceable></option></term>
      <listitem>
       <para>
<!--
        Specifies the file system location of the database
        configuration files.  See
        <xref linkend="runtime-config-file-locations"> for details.
-->
ファイルシステム上のデータベース設定ファイルの場所を指定します。
詳細は<xref linkend="runtime-config-file-locations">を参照してください。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-e</option></term>
      <listitem>
       <para>
<!--
        Sets the default date style to <quote>European</quote>, that is
        <literal>DMY</> ordering of input date fields.  This also causes
        the day to be printed before the month in certain date output formats.
        See <xref linkend="datatype-datetime"> for more information.
-->
デフォルトの日付データ形式を<quote>ヨーロッパ式</quote>、つまり<literal>DMY</>の順番にします。
これにより、いくつかの日付出力形式でも、月の前に日が表示されるようになります。
詳細は<xref linkend="datatype-datetime">を参照してください。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-F</option></term>
      <listitem>
       <para>
<!--
        Disables <function>fsync</function> calls for improved
        performance, at the risk of data corruption in the event of a
        system crash.  Specifying this option is equivalent to
        disabling the <xref linkend="guc-fsync"> configuration
        parameter. Read the detailed documentation before using this!
-->
性能向上のために<function>fsync</function>呼び出しを無効とします。
ただしこの場合、システムクラッシュ時にデータが損傷する危険性があります。
このオプションの指定は設定パラメータ<xref linkend="guc-fsync">を無効にすることと同一です。
このオプションを使用する時は、事前に詳細な文書を一読してください。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-h <replaceable class="parameter">hostname</replaceable></option></term>
      <listitem>
       <para>
<!--
        Specifies the IP host name or address on which
        <command>postgres</command> is to listen for TCP/IP
        connections from client applications.  The value can also be a
        comma-separated list of addresses, or <literal>*</> to specify
        listening on all available interfaces.  An empty value
        specifies not listening on any IP addresses, in which case
        only Unix-domain sockets can be used to connect to the
        server.  Defaults to listening only on
        <systemitem class="systemname">localhost</systemitem>.
        Specifying this option is equivalent to setting the <xref
        linkend="guc-listen-addresses"> configuration parameter.
-->
<command>postgres</command>がクライアントアプリケーションとの接続を監視するホスト名、または、IPアドレスを指定します。
この値には、カンマで区切ったアドレスの一覧、あるいは、全ての利用可能なインタフェースを監視することを意味する<literal>*</>を指定することができます。
空の値を指定すると、IPアドレスをまったく監視しないことを意味します。
この場合、サーバへの接続には、Unixドメインソケットのみが使用されます。
デフォルトでは<systemitem class="systemname">localhost</systemitem>のみを監視します。
このオプションを指定することは設定パラメータ<xref linkend="guc-listen-addresses">を設定することと同等です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-i</option></term>
      <listitem>
       <para>
<!--
        Allows remote clients to connect via TCP/IP (Internet domain)
        connections.  Without this option, only local connections are
        accepted.  This option is equivalent to setting
        <varname>listen_addresses</> to <literal>*</> in
        <filename>postgresql.conf</> or via <option>-h</>.
-->
リモートクライアントからのTCP/IP（インターネットドメイン）経由の接続を可能とします。
このオプションを設定しない場合には、ローカルからの接続のみが使用可能となります。
このオプションは、<filename>postgresql.conf</>内の<varname>listen_addresses</>を、あるいは<option>-h</>を<literal>*</>に設定することと同じ意味を持ちます。
       </para>
       <para>
<!--
        This option is deprecated since it does not allow access to the
        full functionality of <xref linkend="guc-listen-addresses">.
        It's usually better to set <varname>listen_addresses</> directly.
-->
このオプションは<xref linkend="guc-listen-addresses">の全ての機能を実現することができないため廃止が予定されています。
通常は、直接<varname>listen_addresses</>を設定する方法をお勧めします。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-k <replaceable class="parameter">directory</replaceable></option></term>
      <listitem>
       <para>
<!--
        Specifies the directory of the Unix-domain socket on which
        <command>postgres</command> is to listen for
        connections from client applications.  The value can also be a
        comma-separated list of directories.  An empty value
        specifies not listening on any Unix-domain sockets, in which case
        only TCP/IP sockets can be used to connect to the server.
        The default value is normally
        <filename>/tmp</filename>, but that can be changed at build time.
        Specifying this option is equivalent to setting the <xref
        linkend="guc-unix-socket-directories"> configuration parameter.
-->
<command>postgres</command>がクライアントアプリケーションからの接続を監視するUnixドメインソケットのディレクトリを指定します。
ディレクトリをカンマで区切ったリストを値とすることもできます。
空の値を指定すると、Unixドメインソケットをまったく監視しません。この場合サーバに接続するためにはTCP/IPのみを使用することができます。
デフォルトでは、通常<filename>/tmp</filename>となっていますが、これはコンパイルに変更できます。
このオプションを指定することは設定パラメータ<xref linkend="guc-unix-socket-directories">を設定することと同等です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-l</option></term>
      <listitem>
       <para>
<!--
        Enables secure connections using <acronym>SSL</acronym>.
        <productname>PostgreSQL</productname> must have been compiled with
        support for <acronym>SSL</acronym> for this option to be
        available. For more information on using <acronym>SSL</acronym>,
        refer to <xref linkend="ssl-tcp">.
-->
<acronym>SSL</acronym>を使用して、安全な接続を行います。
このオプションを使用するためには、<productname>PostgreSQL</productname>のコンパイル時に<acronym>SSL</acronym>を有効にする必要があります。
<acronym>SSL</acronym>の使用に関する詳細は<xref linkend="ssl-tcp">を参照してください。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-N <replaceable class="parameter">max-connections</replaceable></option></term>
      <listitem>
       <para>
<!--
        Sets the maximum number of client connections that this
        server will accept.  The default value of this parameter is chosen
        automatically by <application>initdb</application>.
        Specifying this option is equivalent to setting the
        <xref linkend="guc-max-connections"> configuration parameter.
-->
このサーバが受け付けるクライアント接続数の最大値を設定します。
このパラメータのデフォルト値は<application>initdb</application>により自動的に選択されます。
このオプションを指定することは設定パラメータ<xref linkend="guc-max-connections">を設定することと同じ意味を持ちます。
       </para>
      </listitem>
     </varlistentry>


     <varlistentry>
      <term><option>-o <replaceable class="parameter">extra-options</replaceable></option></term>
      <listitem>
       <para>
<!--
        The command-line-style options specified in <replaceable
        class="parameter">extra-options</replaceable> are passed to
        all server processes started by this
        <command>postgres</command> process.  If the option string contains
        any spaces, the entire string must be quoted.
-->
<replaceable class="parameter">extra-options</replaceable>で指定されたコマンドライン形式のオプションは、この<command>postgres</command>プロセスにより開始される全てのサーバプロセスに引き渡されます。
このオプションの文字列に空白文字が含まれている場合には、文字列全体を引用符で囲む必要があります。
       </para>

       <para>
<!--
        The use of this option is obsolete; all command-line options
        for server processes can be specified directly on the
        <command>postgres</command> command line.
-->
このオプションの使用は非推奨です。
サーバプロセス用のすべてのコマンドラインオプションは<command>postgres</command>コマンドラインで直接指定することができます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-p <replaceable class="parameter">port</replaceable></option></term>
      <listitem>
       <para>
<!--
        Specifies the TCP/IP port or local Unix domain socket file
        extension on which <command>postgres</command>
        is to listen for connections from client applications.
        Defaults to the value of the <envar>PGPORT</envar> environment
        variable, or if <envar>PGPORT</envar> is not set, then
        defaults to the value established during compilation (normally
        5432).  If you specify a port other than the default port,
        then all client applications must specify the same port using
        either command-line options or <envar>PGPORT</envar>.
-->
クライアントアプリケーションからの接続を<command>postgres</command>が監視するTCP/IPポート、またはローカルUnixドメインソケットファイルの拡張子を指定します。
デフォルトでは、環境変数<envar>PGPORT</envar>、<envar>PGPORT</envar>が設定されていない場合はコンパイル時に設定された値（通常5432）が使用されます。
デフォルトのポート以外を指定した場合には、コマンドラインオプション、または<envar>PGPORT</envar>を使用して、全てのクライアントアプリケーションが同じポートを指定するようにしなければなりません。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-s</option></term>
      <listitem>
       <para>
<!--
        Print time information and other statistics at the end of each command.
        This is useful for benchmarking or for use in tuning the number of
        buffers.
-->
各コマンドの終了時に時間情報や他の統計情報を表示します。
これはベンチマークやバッファ数の調整時の使用に適しています。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-S</option> <replaceable class="parameter">work-mem</replaceable></term>
      <listitem>
       <para>
<!--
        Specifies the amount of memory to be used by internal sorts and hashes
        before resorting to temporary disk files.  See the description of the
        <varname>work_mem</> configuration parameter in <xref
        linkend="runtime-config-resource-memory">.
-->
内部的なソート処理やハッシュ処理で一時ディスクファイルに頼る前に使用するメモリ量を指定します。
設定パラメータ<xref linkend="runtime-config-resource-memory">の<varname>work_mem</>の説明を参照してください。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-V</></term>
      <term><option>--version</></term>
      <listitem>
       <para>
<!--
        Print the <application>postgres</application> version and exit.
-->
<application>postgres</application>のバージョンを表示し、終了します。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--<replaceable>name</replaceable>=<replaceable>value</replaceable></option></term>
      <listitem>
       <para>
<!--
        Sets a named run-time parameter; a shorter form of
        <option>-c</>.
-->
指定した実行時パラメータを設定します。
<option>-c</>の省略形式です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--describe-config</option></term>
      <listitem>
       <para>
<!--
        This option dumps out the server's internal configuration variables,
        descriptions, and defaults in tab-delimited <command>COPY</> format.
        It is designed primarily for use by administration tools.
-->
このオプションは、サーバの内部設定変数、その説明、および、デフォルト値をタブ区切りの<command>COPY</>書式でダンプ出力します。
これは、管理用ツールでの使用を主目的として設計されました。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-?</></term>
      <term><option>--help</></term>
      <listitem>
       <para>
<!--
        Show help about <application>postgres</application> command line
        arguments, and exit.
-->
<application>postgres</application>のコマンドライン引数に関する説明を表示し、終了します。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </refsect2>

   <refsect2>
<!--
    <title>Semi-internal Options</title>
-->
<title>開発者向けオプション</title>

    <para>
<!--
     The options described here are used
     mainly for debugging purposes, and in some cases to assist with
     recovery of severely damaged databases. There should be no reason
     to use them in a production database setup.  They are listed
     here only for use by <productname>PostgreSQL</productname>
     system developers.  Furthermore, these options might
     change or be removed in a future release without notice.
-->
ここで説明するオプションは、主にデバッグ用に、場合によっては深刻な障害を受けたデータベースの復旧を補助するために使われます。
これらを運用状態のデータベースの設定として使用する理由はないはずです。
これらのオプションを説明しておくのは、<productname>PostgreSQL</productname>システム開発者が利用するためです。
さらに、これらのオプションは、いずれも将来のリリースで予告なしに変更・廃止される可能性があります。
    </para>

    <variablelist>
     <varlistentry>
      <term><option>-f</option> <literal>{ s | i | o | b | t | n | m | h }</literal></term>
      <listitem>
       <para>
<!--
        Forbids the use of particular scan and join methods:
        <literal>s</literal> and <literal>i</literal>
        disable sequential and index scans respectively,
        <literal>o</literal>, <literal>b</literal> and <literal>t</literal>
        disable index-only scans, bitmap index scans, and TID scans
        respectively, while
        <literal>n</literal>, <literal>m</literal>, and <literal>h</literal>
        disable nested-loop, merge and hash joins respectively.
-->
特定のスキャンと結合方式の使用を禁止します。
<literal>s</literal>はシーケンシャルスキャン、<literal>i</literal>はインデックススキャンを無効にします。
<literal>o</literal>、<literal>b</literal>、<literal>t</literal>はそれぞれ、インデックスオンリースキャン、ビットマップインデックススキャン、TIDスキャンを無効にします。
<literal>n</literal>はネストループ結合、<literal>m</literal>はマージ結合、<literal>h</literal>はハッシュ結合を無効にします。
       </para>

       <para>
<!--
        Neither sequential scans nor nested-loop joins can be disabled
        completely; the <literal>-fs</literal> and
        <literal>-fn</literal> options simply discourage the optimizer
        from using those plan types if it has any other alternative.
-->
シーケンシャルスキャンとネストループ結合は、完全に無効にすることはできません。
<literal>-fs</literal>オプションと<literal>-fn</literal>オプションは、単に「他の選択肢があるならば、これらの種類の計画を使わないようにする」ということをオプティマイザに指示するだけです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-n</option></term>
      <listitem>
       <para>
<!--
        This option is for debugging problems that cause a server
        process to die abnormally.  The ordinary strategy in this
        situation is to notify all other server processes that they
        must terminate and then reinitialize the shared memory and
        semaphores.  This is because an errant server process could
        have corrupted some shared state before terminating.  This
        option specifies that <command>postgres</command> will
        not reinitialize shared data structures.  A knowledgeable
        system programmer can then use a debugger to examine shared
        memory and semaphore state.
-->
これはサーバプロセスが異常終了する問題をデバッグするためのオプションです。
このような状態では、他のすべてのサーバプロセスに対し、終了し、共有メモリやセマフォを再初期化するように通知するのが、通常の戦略です。
これはエラーが起きたサーバプロセスが、終了する前に、何かしら共有状態を破損したかもしれないからです。
このオプションは、<command>postgres</command>が共有データ構造を再初期化しないように指定します。
知識のあるシステムプログラマであれば、その後にデバッガを使用して共有メモリやセマフォの状態を検証することができます。
       </para>
     </listitem>
    </varlistentry>

     <varlistentry>
      <term><option>-O</option></term>
      <listitem>
       <para>
<!--
        Allows the structure of system tables to be modified.  This is
        used by <command>initdb</command>.
-->
システムテーブルの構造の変更を可能にします。
これは<command>initdb</command>によって使われます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-P</option></term>
      <listitem>
       <para>
<!--
        Ignore system indexes when reading system tables, but still update
        the indexes when modifying the tables.  This is useful when
        recovering from damaged system indexes.
-->
システムテーブルの読み込みの際にシステムインデックスを無視します。
しかし、システムテーブルの更新の際にはインデックスを更新します。
破損したシステムインデックスから復旧する場合に有用です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-t</option> <literal>pa[rser] | pl[anner] | e[xecutor]</literal></term>
      <listitem>
       <para>
<!--
        Print timing statistics for each query relating to each of the
        major system modules.  This option cannot be used together
        with the <option>-s</option> option.
-->
それぞれの主要なシステムモジュールに関連する問い合わせに対し、時間に関する統計情報を表示します。
このオプションは<option>-s</option>オプションと一緒に使うことはできません。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-T</option></term>
      <listitem>
       <para>
<!--
        This option is for debugging problems that cause a server
        process to die abnormally.  The ordinary strategy in this
        situation is to notify all other server processes that they
        must terminate and then reinitialize the shared memory and
        semaphores.  This is because an errant server process could
        have corrupted some shared state before terminating.  This
        option specifies that <command>postgres</command> will
        stop all other server processes by sending the signal
        <literal>SIGSTOP</literal>, but will not cause them to
        terminate.  This permits system programmers to collect core
        dumps from all server processes by hand.
-->
これはサーバプロセスが異常終了する問題をデバッグするためのオプションです。
このような状態では、他のすべてのサーバプロセスに対し、終了し、共有メモリやセマフォを再初期化するように通知するのが、通常の戦略です。
これはエラーが起きたサーバプロセスが、終了する前に、何かしら共有状態を破損したかもしれないからです。
このオプションは、<command>postgres</command>が他のすべてのサーバプロセスに対し<literal>SIGSTOP</literal>シグナルを送信して、終了させるのではなく停止させることを指定します。
これによりシステムプログラマはすべてのサーバプロセスのコアダンプを手作業で収集することができます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-v</option> <replaceable class="parameter">protocol</replaceable></term>
      <listitem>
       <para>
<!--
        Specifies the version number of the frontend/backend protocol
        to be used for a particular session.  This option is for
        internal use only.
-->
特定のセッションで使われるフロントエンド/バックエンドプロトコルのバージョン番号を指定します。
このオプションは内部使用のみを目的としたものです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-W</option> <replaceable class="parameter">seconds</replaceable></term>
      <listitem>
       <para>
<!--
        A delay of this many seconds occurs when a new server process
        is started, after it conducts the authentication procedure.
        This is intended to give an opportunity to attach to the
        server process with a debugger.
-->
新規サーバプロセスが起動するときに指定した秒数の遅延が発生します。
認証手続きはこの後で行われます。
サーバプロセスにデバッガを接続する時間を提供することが目的です。
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </refsect2>

   <refsect2>
<!--
    <title>Options for Single-User Mode</title>
-->
    <title>シングルユーザモード用のオプション</title>

    <indexterm>
<!--
     <primary>single-user mode</primary>
-->
     <primary>シングルユーザモード</primary>
    </indexterm>

    <para>
<!--
     The following options only apply to the single-user mode.
-->
以下のオプションはシングルユーザモードに対してのみ適用されます。
    </para>

    <variablelist>
     <varlistentry>
      <term><option>--single</option></term>
      <listitem>
       <para>
<!--
        Selects the single-user mode.  This must be the first argument
        on the command line.
-->
シングルユーザモードを選択します。
これはコマンドラインで最初の引数でなければなりません。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">database</replaceable></term>
      <listitem>
       <para>
<!--
        Specifies the name of the database to be accessed.  This must be
        the last argument on the command line.  If it is
        omitted it defaults to the user name.
-->
アクセスするデータベースの名前を指定します。
これはコマンドラインの最後の引数でなければなりません。
省略時は、デフォルトでユーザ名になります。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-E</option></term>
      <listitem>
       <para>
<!--
        Echo all commands.
-->
すべてのコマンドをエコー表示します。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-j</option></term>
      <listitem>
       <para>
<!--
        Disables use of newline as a statement delimiter.
-->
改行文字を文の区切り文字として使用することを無効にします。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-r</option> <replaceable class="parameter">filename</replaceable></term>
      <listitem>
       <para>
<!--
        Send all server log output to <replaceable
        class="parameter">filename</replaceable>.  This option is only
        honored when supplied as a command-line option.
-->
全てのサーバログ出力を<replaceable class="parameter">filename</replaceable>に送ります。
このオプションは、コマンド行オプションとして指定された場合のみ、受け付けられます。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </refsect2>
 </refsect1>

 <refsect1>
<!--
  <title>Environment</title>
-->
<title>環境</title>

  <variablelist>
   <varlistentry>
    <term><envar>PGCLIENTENCODING</envar></term>

    <listitem>
     <para>
<!--
      Default character encoding used by clients.  (The clients can
      override this individually.)  This value can also be set in the
      configuration file.
-->
クライアントで使用される文字符号化方式のデフォルトです。
（クライアントは個別に変更することができます。）
また、この値は設定ファイルでも設定可能です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>PGDATA</envar></term>

    <listitem>
     <para>
<!--
      Default data directory location
-->
デフォルトのデータディレクトリの場所です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>PGDATESTYLE</envar></term>

    <listitem>
     <para>
<!--
      Default value of the <xref linkend="guc-datestyle"> run-time
      parameter.  (The use of this environment variable is deprecated.)
-->
実行時パラメータ<xref linkend="guc-datestyle">のデフォルト値です。
（この環境変数の使用は廃止予定です。）
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>PGPORT</envar></term>

    <listitem>
     <para>
<!--
      Default port number (preferably set in the configuration file)
-->
デフォルトのポート番号です。
（設定ファイル内で設定するほうが好まれています。）
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>TZ</envar></term>

    <listitem>
     <para>
<!--
      Server time zone
-->
サーバのタイムゾーンです。
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </refsect1>

 <refsect1>
<!--
   <title>Diagnostics</title>
-->
<title>診断</title>

   <para>
<!--
    A failure message mentioning <literal>semget</> or
    <literal>shmget</> probably indicates you need to configure your
    kernel to provide adequate shared memory and semaphores.  For more
    discussion see <xref linkend="kernel-resources">.  You might be able
    to postpone reconfiguring your kernel by decreasing <xref
    linkend="guc-shared-buffers"> to reduce the shared memory
    consumption of <productname>PostgreSQL</>, and/or by reducing
    <xref linkend="guc-max-connections"> to reduce the semaphore
    consumption.
-->
<literal>semget</>や<literal>shmget</>について言及するエラーメッセージは、おそらく、十分な共有メモリやセマフォを提供できるようにカーネルを再構築する必要があることを示します。
詳細は<xref linkend="kernel-resources">を参照してください。
ただし、<xref linkend="guc-shared-buffers">の値を小さくして<productname>PostgreSQL</>の共有メモリ消費量を低減する、<xref linkend="guc-max-connections">の値を小さくしてセマフォ消費量を低減するといった対策を行うことで、カーネルの再構築を先延ばしすることができるかもしれません。
   </para>

   <para>
<!--
    A failure message suggesting that another server is already running
    should be checked carefully, for example by using the command
-->
他のサーバが既に実行中であることを示すエラーメッセージに対しては、例えば以下のコマンドを使用して、注意深く検査しなければなりません。
<screen>
<prompt>$</prompt> <userinput>ps ax | grep postgres</userinput>
</screen>
<!--
        or
-->
もしくは
<screen>
<prompt>$</prompt> <userinput>ps -ef | grep postgres</userinput>
</screen>
<!--
    depending on your system.  If you are certain that no conflicting
    server is running, you can remove the lock file mentioned in the
    message and try again.
-->
どちらを使用するかは、システムによって異なります。
競合するサーバが稼働していないことが確実であれば、メッセージ内で示されたロックファイルを削除して、再度試してください。
   </para>

   <para>
<!--
    A failure message indicating inability to bind to a port might
    indicate that that port is already in use by some
    non-<productname>PostgreSQL</productname> process.  You might also
    get this error if you terminate <command>postgres</command>
    and immediately restart it using the same port; in this case, you
    must simply wait a few seconds until the operating system closes
    the port before trying again.  Finally, you might get this error if
    you specify a port number that your operating system considers to
    be reserved.  For example, many versions of Unix consider port
    numbers under 1024 to be <quote>trusted</quote> and only permit
    the Unix superuser to access them.
-->
ポートをバインドできなかったことを示すエラーメッセージの場合は、<productname>PostgreSQL</productname>以外のプロセスが既にそのポートを使用している可能性が考えられます。
また、<command>postgres</command>を停止して、すぐに同じポートを使う設定で再起動した場合、このエラーが出ることがあります。
この場合、オペレーティングシステムがポートを閉鎖するまで数秒待ってから再挑戦してください。
最後に、オペレーティングシステムが予約しているポート番号を指定した場合も、このエラーが発生することがあります。
例えば、Unixの多くのバージョンでは1024より小さいポート番号は<quote>信頼できる（trusted）</quote>とみなされており、Unixのスーパーユーザ以外アクセスできません。
   </para>

 </refsect1>

 <refsect1>
<!--
  <title>Notes</title>
-->
<title>注釈</title>

  <para>
<!--
   The utility command <xref linkend="app-pg-ctl"> can be used to
   start and shut down the <command>postgres</command> server
   safely and comfortably.
-->
ユーティリティコマンド<xref linkend="app-pg-ctl">を使って、<command>postgres</command>サーバを安全かつ簡便に起動とシャットダウンすることができます。
  </para>

  <para>
<!--
   If at all possible, <emphasis>do not</emphasis> use
   <literal>SIGKILL</literal> to kill the main
   <command>postgres</command> server.  Doing so will prevent
   <command>postgres</command> from freeing the system
   resources (e.g., shared memory and semaphores) that it holds before
   terminating.  This might cause problems for starting a fresh
   <command>postgres</command> run.
-->
<command>postgres</command>を終了させるために<literal>SIGKILL</literal>を使用するのは<emphasis>可能な限り避けてください</emphasis>。
<literal>SIGKILL</literal>で終了させると、<command>postgres</command>が終了前に保持しているシステムリソース（共有メモリやセマフォ）を解放しなくなることがあります。
システムリソースが解放されていないと、新しく<command>postgres</command>を起動する時に問題が起こる可能性があります。
  </para>

  <para>
<!--
   To terminate the <command>postgres</command> server normally, the
   signals <literal>SIGTERM</literal>, <literal>SIGINT</literal>, or
   <literal>SIGQUIT</literal> can be used.  The first will wait for
   all clients to terminate before quitting, the second will
   forcefully disconnect all clients, and the third will quit
   immediately without proper shutdown, resulting in a recovery run
   during restart.
-->
<command>postgres</command>サーバを正常に終了させるために、<literal>SIGTERM</literal>、<literal>SIGINT</literal>、<literal>SIGQUIT</literal>を使用することができます。
<literal>SIGTERM</literal>は全てのクライアントが終了するのを待ってから終了させます。
<literal>SIGINT</literal>は強制的に全てのクライアントとの接続を切断します。
<literal>SIGQUIT</literal>は適切なシャットダウンを行わないで、即時に終了させ、次回の起動時に復旧処理が行われます。
  </para>

  <para>
<!--
   The <literal>SIGHUP</literal> signal will reload
   the server configuration files.  It is also possible to send
   <literal>SIGHUP</literal> to an individual server process, but that
   is usually not sensible.
-->
<literal>SIGHUP</literal>シグナルによりサーバの設定ファイルを再読み込みします。
また、<literal>SIGHUP</literal>を個々のサーバプロセスに送信することも可能ですが、通常は意味がありません。
  </para>

  <para>
<!--
   To cancel a running query, send the <literal>SIGINT</literal> signal
   to the process running that command. To terminate a backend process
   cleanly, send <literal>SIGTERM</literal> to that process. See
   also <function>pg_cancel_backend</> and <function>pg_terminate_backend</>
   in <xref linkend="functions-admin-signal"> for the SQL-callable equivalents
   of these two actions.
-->
実行中の問い合わせを中止するには、そのコマンドを実行しているプロセスに<literal>SIGINT</literal>シグナルを送信してください。
きれいにバックエンドプロセスを終了させるためには、対象プロセスに<literal>SIGTERM</literal>を送信してください。
また、これらの２つと同じ操作を行うSQLから呼び出すことができるものについては<xref linkend="functions-admin-signal">内の<function>pg_cancel_backend</>および<function>pg_terminate_backend</>を参照してください。
  </para>

  <para>
<!--
   The <command>postgres</command> server uses <literal>SIGQUIT</literal>
   to tell subordinate server processes to terminate without normal
   cleanup.
   This signal <emphasis>should not</emphasis> be used by users.  It
   is also unwise to send <literal>SIGKILL</literal> to a server
   process &mdash; the main <command>postgres</command> process will
   interpret this as a crash and will force all the sibling processes
   to quit as part of its standard crash-recovery procedure.
-->
<command>postgres</command>サーバでは、通常のクリーンアップを行わずに下位のサーバプロセスを終了させるためには<literal>SIGQUIT</literal>を使用します。
これは<emphasis>ユーザが使用すべきではありません</emphasis>。
また、サーバに<literal>SIGKILL</literal>シグナルを送信するのは好ましくありません。
メインの<command>postgres</command>はこれをクラッシュとして解釈するので、クラッシュからの標準的な復旧手続きの一環として、強制的に共通の親プロセスを持つ<command>postgres</command>プロセスを全て終了させます。
  </para>

 </refsect1>

 <refsect1 id="app-postgres-bugs">
<!--
  <title>Bugs</title>
-->
  <title>不具合</title>
  <para>
<!--
   The <option>&#045;&#045;</> options will not work on <systemitem
   class="osname">FreeBSD</> or <systemitem class="osname">OpenBSD</>.
   Use <option>-c</> instead. This is a bug in the affected operating
   systems; a future release of <productname>PostgreSQL</productname>
   will provide a workaround if this is not fixed.
-->
<option>--</>オプションは<systemitem class="osname">FreeBSD</>や<systemitem class="osname">OpenBSD</>ではうまく動きません。
代わりに<option>-c</>を使用してください。
これは対象のオペレーティングシステムの不具合です。
もし修正されなければ、将来の<productname>PostgreSQL</productname>リリースで回避策を提供する予定です。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Usage</title>
-->
<title>使用方法</title>

   <para>
<!--
    To start a single-user mode server, use a command like
-->
シングルユーザモードのサーバを起動するには、以下のようなコマンドを使用してください。
<screen>
<userinput>postgres --single -D /usr/local/pgsql/data <replaceable>other-options</> my_database</userinput>
</screen>
<!--
    Provide the correct path to the database directory with <option>-D</>, or
    make sure that the environment variable <envar>PGDATA</> is set.
    Also specify the name of the particular database you want to work in.
-->
データベースディレクトリの正確なパスを<option>-D</>で指定します。パスを指定しない時は、必ず環境変数<envar>PGDATA</>を設定しておいてください。
また、作業対象とするデータベースの名前も指定してください。
   </para>

   <para>
<!--
    Normally, the single-user mode server treats newline as the command
    entry terminator; there is no intelligence about semicolons,
    as there is in <application>psql</>.  To continue a command
    across multiple lines, you must type backslash just before each
    newline except the last one.
-->
通常、シングルユーザモードのサーバでは、改行をコマンド入力の終わりとみなします。
<application>psql</>におけるセミコロンのような高度な機能はありません。
コマンドが複数行にわたる場合は、改行を入力する前にバックスラッシュを入力しなければなりません（最終行を除く）。
   </para>

   <para>
<!--
    But if you use the <option>-j</> command line switch, then newline does
    not terminate command entry.  In this case, the server will read the standard input
    until the end-of-file (<acronym>EOF</>) marker, then
    process the input as a single command string.  Backslash-newline is not
    treated specially in this case.
-->
ただし、コマンドラインスイッチ<option>-j</>を使用した場合は、改行がコマンド入力の終わりとはみなされません。
サーバは標準入力をファイル終端マーク（<acronym>EOF</>）まで読み取り、そこまでの入力を1つのコマンド文字列として処理します。
この場合、バックスラッシュと改行の組み合わせは特別扱いされません。
   </para>

   <para>
<!--
    To quit the session, type <acronym>EOF</acronym>
    (<keycombo action="simul"><keycap>Control</><keycap>D</></>, usually).
    If you've
    used <option>-j</>, two consecutive <acronym>EOF</>s are needed to exit.
-->
セッションを終了するには、<acronym>EOF</acronym>（通常<keycombo action="simul"><keycap>Control</><keycap>D</></>）を入力します。
<option>-j</>を使用している場合、終了するために<acronym>EOF</>を2度連続して入力する必要があります。
   </para>

   <para>
<!--
    Note that the single-user mode server does not provide sophisticated
    line-editing features (no command history, for example).
    Single-User mode also does not do any background processing, like
    automatic checkpoints.
-->
シングルユーザモードのサーバには、高度な行編集機能が用意されていないことに注意してください（例えばコマンド履歴機能はありません）。
またシングルユーザモードは、自動チェックポイントなどのバックグラウンド処理をまったく行いません。

   </para>
 </refsect1>

 <refsect1 id="app-postgres-examples">
<!--
  <title>Examples</title>
-->
  <title>例</title>

  <para>
<!--
   To start <command>postgres</command> in the background
   using default values, type:
-->
デフォルト値を使用して<command>postgres</command>をバックグラウンドで起動するには、以下を入力してください。

<screen>
<prompt>$</prompt> <userinput>nohup postgres &gt;logfile 2&gt;&amp;1 &lt;/dev/null &amp;</userinput>
</screen>
  </para>

  <para>
<!--
   To start <command>postgres</command> with a specific
   port, e.g. 1234:
-->
例えば1234というポートを指定して<command>postgres</command>を起動するには、以下を入力してください。
<screen>
<prompt>$</prompt> <userinput>postgres -p 1234</userinput>
</screen>
<!--
   To connect to this server using <application>psql</>, specify this port with the -p option:
-->
<application>psql</>を使用して上のサーバに接続するには、以下のように-pオプションでこのポートを指定してください。
<screen>
<prompt>$</prompt> <userinput>psql -p 1234</userinput>
</screen>
<!--
   or set the environment variable <envar>PGPORT</envar>:
-->
または環境変数<envar>PGPORT</envar>を設定してください。
<screen>
<prompt>$</prompt> <userinput>export PGPORT=1234</userinput>
<prompt>$</prompt> <userinput>psql</userinput>
</screen>
  </para>

  <para>
<!--
   Named run-time parameters can be set in either of these styles:
-->
指定の実行時パラメータを以下のいずれかで設定することができます。
<screen>
<prompt>$</prompt> <userinput>postgres -c work_mem=1234</userinput>
<prompt>$</prompt> <userinput>postgres --work-mem=1234</userinput>
</screen>
<!--
   Either form overrides whatever setting might exist for
   <varname>work_mem</> in <filename>postgresql.conf</>.  Notice that
   underscores in parameter names can be written as either underscore
   or dash on the command line.  Except for short-term experiments,
   it's probably better practice to edit the setting in
   <filename>postgresql.conf</> than to rely on a command-line switch
   to set a parameter.
-->
どちらの形式でも、<filename>postgresql.conf</>内に設定されている<varname>work_mem</>の値を上書きします。
コマンドラインでは、パラメータ内のアンダースコア（_）をアンダースコアとしてもダッシュ記号（-）としても記載できることに注意してください。
おそらく短期間の実験という場合を除き、コマンドラインスイッチに依存するよりも<filename>postgresql.conf</>内の設定を変更してパラメータを設定する方が実用的です。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>See Also</title>
-->
<title>関連項目</title>

  <para>
   <xref linkend="app-initdb">,
   <xref linkend="app-pg-ctl">
  </para>
 </refsect1>

</refentry>

