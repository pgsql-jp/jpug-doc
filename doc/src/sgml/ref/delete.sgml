<!--
doc/src/sgml/ref/delete.sgml
PostgreSQL documentation
-->

<refentry id="SQL-DELETE">
 <indexterm zone="sql-delete">
  <primary>DELETE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>DELETE</refentrytitle>
  <manvolnum>7</manvolnum>
<!--
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 言語</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>DELETE</refname>
<!--
  <refpurpose>delete rows of a table</refpurpose>
-->
  <refpurpose>テーブルから行を削除する</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
[ WITH [ RECURSIVE ] <replaceable class="parameter">with_query</replaceable> [, ...] ]
DELETE FROM [ ONLY ] <replaceable class="PARAMETER">table_name</replaceable> [ * ] [ [ AS ] <replaceable class="parameter">alias</replaceable> ]
    [ USING <replaceable class="PARAMETER">using_list</replaceable> ]
    [ WHERE <replaceable class="PARAMETER">condition</replaceable> | WHERE CURRENT OF <replaceable class="PARAMETER">cursor_name</replaceable> ]
    [ RETURNING * | <replaceable class="parameter">output_expression</replaceable> [ [ AS ] <replaceable class="parameter">output_name</replaceable> ] [, ...] ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
  <title>Description</title>
-->
  <title>説明</title>

  <para>
<!--
   <command>DELETE</command> deletes rows that satisfy the
   <literal>WHERE</literal> clause from the specified table.  If the
   <literal>WHERE</literal> clause is absent, the effect is to delete
   all rows in the table.  The result is a valid, but empty table.
-->
<command>DELETE</command>は、指定したテーブルから<literal>WHERE</literal>句を満たす行を削除します。
<literal>WHERE</literal>がない場合、指定したテーブルの全ての行を削除することになります。
この結果、そのテーブルは存在するが中身が空のテーブルになります。
  </para>

   <tip>
    <para>
<!--
     <xref linkend="sql-truncate"> is a
     <productname>PostgreSQL</productname> extension that provides a
     faster mechanism to remove all rows from a table.
-->
<xref linkend="sql-truncate">は、<productname>PostgreSQL</productname>による拡張で、より高速に、テーブルから全ての行を削除する仕組みを提供します。
    </para>
   </tip>

  <para>
<!--
   There are two ways to delete rows in a table using information
   contained in other tables in the database: using sub-selects, or
   specifying additional tables in the <literal>USING</literal> clause.
   Which technique is more appropriate depends on the specific
   circumstances.
-->
データベース内のほかのテーブルに含まれる情報を用いてテーブル内の行を削除する方法には、副問い合わせと<literal>USING</literal>句で追加テーブルを指定する方法の2つがあります。
どちらの技法が適切かはその状況によります。
  </para>

  <para>
<!--
   The optional <literal>RETURNING</> clause causes <command>DELETE</>
   to compute and return value(s) based on each row actually deleted.
   Any expression using the table's columns, and/or columns of other
   tables mentioned in <literal>USING</literal>, can be computed.
   The syntax of the <literal>RETURNING</> list is identical to that of the
   output list of <command>SELECT</>.
-->
<literal>RETURNING</>句を指定すると、<command>DELETE</>は実際に削除された各行に基づいて計算された値を返すようになります。
そのテーブルの列、<literal>USING</literal>で指定された他のテーブルの列、あるいは、その両方を使用した式を計算することができます。
<literal>RETURNING</>リストの構文は<command>SELECT</>の出力リストと同一です。
  </para>

  <para>
<!--
   You must have the <literal>DELETE</literal> privilege on the table
   to delete from it, as well as the <literal>SELECT</literal>
   privilege for any table in the <literal>USING</literal> clause or
   whose values are read in the <replaceable
   class="parameter">condition</replaceable>.
-->
削除を実行するには、そのテーブルの<literal>DELETE</literal>権限が必要です。
また、<literal>USING</literal>句内のテーブルに対する<literal>SELECT</literal>権限、および、<replaceable class="parameter">condition</replaceable>で使用する値を読み取るために、その値が含まれるテーブルに対する<literal>SELECT</literal>権限も必要です。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Parameters</title>
-->
  <title>パラメータ</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">with_query</replaceable></term>
    <listitem>
     <para>
<!--
      The <literal>WITH</literal> clause allows you to specify one or more
      subqueries that can be referenced by name in the <command>DELETE</>
      query. See <xref linkend="queries-with"> and <xref linkend="sql-select">
      for details.
-->
<literal>WITH</literal>句により<command>DELETE</>問い合わせ内で名前で参照可能な１つ以上の副問い合わせを指定することができます。
詳しくは<xref linkend="queries-with">と<xref linkend="sql-select">を参照してください。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">table_name</replaceable></term>
    <listitem>
     <para>
<!--
      The name (optionally schema-qualified) of the table to delete rows
      from.  If <literal>ONLY</> is specified before the table name,
      matching rows are deleted from the named table only.  If
      <literal>ONLY</> is not specified, matching rows are also deleted
      from any tables inheriting from the named table.  Optionally,
      <literal>*</> can be specified after the table name to explicitly
      indicate that descendant tables are included.
-->
行を削除するテーブルの名前です（スキーマ修飾名も可）。
テーブル名の前に<literal>ONLY</>が指定された場合、そのテーブルでのみマッチする行が削除されます。
<literal>ONLY</>が指定されていない場合、そのテーブルおよび（もしあれば）そのテーブルを継承する全てのテーブルから一致する行が削除されます。
オプションで、テーブル名の後に<literal>*</>を指定することで、明示的に継承するテーブルも含まれることを示すことができます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">alias</replaceable></term>
    <listitem>
     <para>
<!--
      A substitute name for the target table. When an alias is
      provided, it completely hides the actual name of the table.  For
      example, given <literal>DELETE FROM foo AS f</>, the remainder
      of the <command>DELETE</command> statement must refer to this
      table as <literal>f</> not <literal>foo</>.
-->
対象テーブルの別名です。
別名が与えられた場合、実際のテーブル名は完全に隠蔽されます。
たとえば、<literal>DELETE FROM foo AS f</>とあるとき、この<command>DELETE</command>文の残りの部分ではこのテーブルを<literal>foo</>ではなく<literal>f</>として参照しなければなりません。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">using_list</replaceable></term>
    <listitem>
     <para>
<!--
      A list of table expressions, allowing columns from other tables
      to appear in the <literal>WHERE</> condition.  This is similar
      to the list of tables that can be specified in the <xref
      linkend="sql-from" endterm="sql-from-title"> of a
      <command>SELECT</command> statement; for example, an alias for
      the table name can be specified.  Do not repeat the target table
      in the <replaceable class="PARAMETER">using_list</replaceable>,
      unless you wish to set up a self-join.
-->
<literal>WHERE</>条件内に他のテーブルの列を記述できるようにするための、テーブル式のリストです。
これは、<command>SELECT</command>文の<xref linkend="sql-from" endterm="sql-from-title">において指定できるテーブルのリストと似ています。
例えば、テーブル名の別名も指定することができます。
自己結合を設定する目的以外では<replaceable class="PARAMETER">using_list</replaceable>に対象のテーブルを繰り返さないでください。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">condition</replaceable></term>
    <listitem>
     <para>
<!--
      An expression that returns a value of type <type>boolean</type>.
      Only rows for which this expression returns <literal>true</>
      will be deleted.
-->
<type>boolean</type>型の値を返す式です。
この式が<literal>true</>を返す行のみが削除されます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">cursor_name</replaceable></term>
    <listitem>
     <para>
<!--
      The name of the cursor to use in a <literal>WHERE CURRENT OF</>
      condition.  The row to be deleted is the one most recently fetched
      from this cursor.  The cursor must be a non-grouping
      query on the <command>DELETE</>'s target table.
      Note that <literal>WHERE CURRENT OF</> cannot be
      specified together with a Boolean condition.  See
      <xref linkend="sql-declare">
      for more information about using cursors with
      <literal>WHERE CURRENT OF</>.
-->
<literal>WHERE CURRENT OF</>条件で使用されるカーソルの名前です。
削除対象の行は、そのカーソルからもっとも最近に取り出される行です。
カーソルは、<command>DELETE</>の対象テーブルに対するグループ化のない問い合わせでなければなりません。
<literal>WHERE CURRENT OF</>を論理条件といっしょに指定することはできません。
<literal>WHERE CURRENT OF</>付きのカーソルの使用に関する情報については<xref linkend="sql-declare">を参照してください。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">output_expression</replaceable></term>
    <listitem>
     <para>
<!--
      An expression to be computed and returned by the <command>DELETE</>
      command after each row is deleted.  The expression can use any
      column names of the table named by <replaceable class="PARAMETER">table_name</replaceable>
      or table(s) listed in <literal>USING</>.
      Write <literal>*</> to return all columns.
-->
各行を削除した後に<command>DELETE</>によって計算され、返される式です。
この式には、<replaceable class="PARAMETER">table_name</replaceable>で指名したテーブルまたは<literal>USING</>で指定したテーブルの任意の列名を使用することができます。
すべての列を返す場合は<literal>*</>と記載してください。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">output_name</replaceable></term>
    <listitem>
     <para>
<!--
      A name to use for a returned column.
-->
返される列で使用される名前です。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!--
  <title>Outputs</title>
-->
  <title>出力</title>

  <para>
<!--
   On successful completion, a <command>DELETE</> command returns a command
   tag of the form
-->
正常に終了した場合、<command>DELETE</>コマンドは以下の形式のコマンドタグを返します。
<screen>
DELETE <replaceable class="parameter">count</replaceable>
</screen>
<!--
   The <replaceable class="parameter">count</replaceable> is the number
   of rows deleted.  Note that the number may be less than the number of
   rows that matched the <replaceable
   class="parameter">condition</replaceable> when deletes were
   suppressed by a <literal>BEFORE DELETE</> trigger.  If <replaceable
   class="parameter">count</replaceable> is 0, no rows were deleted by
   the query (this is not considered an error).
-->
<replaceable class="parameter">count</replaceable>は削除した行数です。
この数は、<literal>BEFORE DELETE</>トリガによって削除が抑止された場合、<replaceable class="parameter">condition</replaceable>に合致した行より少なくなる可能性があることに注意してください。
<replaceable class="parameter">count</replaceable>が0の場合、<replaceable class="parameter">condition</replaceable>を満たす行が存在しなかったことを示します
（これはエラーとはみなされません）。
  </para>

  <para>
<!--
   If the <command>DELETE</> command contains a <literal>RETURNING</>
   clause, the result will be similar to that of a <command>SELECT</>
   statement containing the columns and values defined in the
   <literal>RETURNING</> list, computed over the row(s) deleted by the
   command.
-->
<command>DELETE</>コマンドが<literal>RETURNING</>句を持つ場合、その結果は、<literal>RETURNING</>リストで定義した列と値を持ち、そのコマンドで削除された行全体に対して計算を行う<command>SELECT</>文の結果と似たものになるでしょう。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Notes</title>
-->
  <title>注釈</title>

  <para>
<!--
   <productname>PostgreSQL</productname> lets you reference columns of
   other tables in the <literal>WHERE</> condition by specifying the
   other tables in the <literal>USING</literal> clause.  For example,
   to delete all films produced by a given producer, one can do:
-->
<productname>PostgreSQL</productname>では、<literal>USING</literal>句で他のテーブルを指定することで、<literal>WHERE</>条件内で他のテーブルを参照することができます。
例えば、指定したプロデューサが製作した全ての映画を削除する時は、次のようなコマンドを実行します。
<programlisting>
DELETE FROM films USING producers
  WHERE producer_id = producers.id AND producers.name = 'foo';
</programlisting>
<!--
   What is essentially happening here is a join between <structname>films</>
   and <structname>producers</>, with all successfully joined
   <structname>films</> rows being marked for deletion.
   This syntax is not standard.  A more standard way to do it is:
-->
ここでは、<structname>films</>と<structname>producers</>とを結合して、<structname>films</>行に削除用の印を付けるという作業を行っています。
この構文は標準に従ったものではありません。
より標準的な方法は以下の通りです。
<programlisting>
DELETE FROM films
  WHERE producer_id IN (SELECT id FROM producers WHERE name = 'foo');
</programlisting>
<!--
   In some cases the join style is easier to write or faster to
   execute than the sub-select style.
-->
副問い合わせ形式より結合形式の方が書き易い、あるいは、実行が速くなることがあります。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Examples</title>
-->
  <title>例</title>

  <para>
<!--
   Delete all films but musicals:
-->
ミュージカル以外の全ての映画を削除します。

<programlisting>
DELETE FROM films WHERE kind &lt;&gt; 'Musical';
</programlisting>
  </para>

  <para>
<!--
   Clear the table <literal>films</literal>:
-->
<literal>films</literal>テーブルを空にします。
<programlisting>
DELETE FROM films;
</programlisting>
  </para>

  <para>
<!--
   Delete completed tasks, returning full details of the deleted rows:
-->
完了した作業（statusがDONE）を削除し、削除された行のすべての詳細を返します。
<programlisting>
DELETE FROM tasks WHERE status = 'DONE' RETURNING *;
</programlisting>
  </para>

   <para>
<!--
   Delete the row of <structname>tasks</> on which the cursor
   <literal>c_tasks</> is currently positioned:
-->
<structname>tasks</>において<literal>c_tasks</>カーソルが現在位置している行を削除します。
<programlisting>
DELETE FROM tasks WHERE CURRENT OF c_tasks;
</programlisting></para>
 </refsect1>

 <refsect1>
<!--
  <title>Compatibility</title>
-->
  <title>互換性</title>

  <para>
<!--
   This command conforms to the <acronym>SQL</acronym> standard, except
   that the <literal>USING</literal> and <literal>RETURNING</> clauses
   are <productname>PostgreSQL</productname> extensions, as is the ability
   to use <literal>WITH</> with <command>DELETE</>.
-->
このコマンドは標準SQLに準拠しています。
ただし、<literal>USING</>句と<literal>RETURNING</>句は<productname>PostgreSQL</productname>の拡張です。
<command>DELETE</>で<literal>WITH</>が使用可能であることも同様に拡張です。
  </para>
 </refsect1>
</refentry>
