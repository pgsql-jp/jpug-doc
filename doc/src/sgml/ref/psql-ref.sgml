<!--
doc/src/sgml/ref/psql-ref.sgml
PostgreSQL documentation
-->

<refentry id="APP-PSQL">
 <indexterm zone="app-psql">
  <primary>psql</primary>
 </indexterm>

  <refmeta>
    <refentrytitle><application>psql</application></refentrytitle>
    <manvolnum>1</manvolnum>
<!--
    <refmiscinfo>Application</refmiscinfo>
-->
<refmiscinfo>アプリケーション</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname><application>psql</application></refname>
    <refpurpose>
<!--
      <productname>PostgreSQL</productname> interactive terminal
-->
<productname>PostgreSQL</productname>の対話的ターミナル
    </refpurpose>
  </refnamediv>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>psql</command>
   <arg rep="repeat"><replaceable class="parameter">option</replaceable></arg>
   <arg choice="opt"><replaceable class="parameter">dbname</replaceable>
   <arg choice="opt"><replaceable class="parameter">username</replaceable></arg></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
  <title>Description</title>
-->
<title>説明</title>

    <para>
<!--
     <application>psql</application> is a terminal-based front-end to
     <productname>PostgreSQL</productname>. It enables you to type in
     queries interactively, issue them to
     <productname>PostgreSQL</productname>, and see the query results.
     Alternatively, input can be from a file. In addition, it provides a
     number of meta-commands and various shell-like features to
     facilitate writing scripts and automating a wide variety of tasks.
-->
<application>psql</application>とは<productname>PostgreSQL</productname>のターミナル型フロントエンドです。
対話的に問い合わせを入力し、それを<productname>PostgreSQL</productname>に対して発行して、結果を確認することができます。
また、ファイルから入力を読み込むことも可能です。
さらに、スクリプトの記述を簡便化したり、様々なタスクを自動化したりする、いくつものメタコマンドとシェルに似た各種の機能を備えています。
    </para>
 </refsect1>

 <refsect1 id="R1-APP-PSQL-3">
<!--
  <title>Options</title>
-->
<title>オプション</title>

  <variablelist>
    <varlistentry>
      <term><option>-a</></term>
      <term><option>--echo-all</></term>
      <listitem>
      <para>
<!--
      Print all input lines to standard output as they are read. This is more
      useful for script processing than interactive mode. This is
      equivalent to setting the variable <varname>ECHO</varname> to
      <literal>all</literal>.
-->
読み込んだ全ての行を標準出力に表示します。
これは対話式モードよりもスクリプト処理の際に有用です。
<varname>ECHO</varname>変数を<literal>all</literal>に設定するのと同じ意味を持ちます。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-A</></term>
      <term><option>--no-align</></term>
      <listitem>
      <para>
<!--
      Switches to unaligned output mode. (The default output mode is
      otherwise aligned.)
-->
位置揃えなしの出力モードに切り替えます
（デフォルトの出力モードは位置揃えありです）。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-c <replaceable class="parameter">command</replaceable></></term>
      <term><option>--command=<replaceable class="parameter">command</replaceable></></term>
      <listitem>
      <para>
<!--
      Specifies that <application>psql</application> is to execute one
      command string, <replaceable class="parameter">command</replaceable>,
      and then exit. This is useful in shell scripts. Start-up files
      (<filename>psqlrc</filename> and <filename>~/.psqlrc</filename>) are
      ignored with this option.
-->
<application>psql</application>に対し、<replaceable class="parameter">command</replaceable>という1つのコマンド文字列を実行し、終了するよう指示します。
このコマンドはシェルスクリプト内で有用です。
このオプションを使用すると起動ファイル（<filename>psqlrc</filename>および<filename>~/.psqlrc</filename>）は無視されます。
      </para>
      <para>
<!--
      <replaceable class="parameter">command</replaceable> must be either
      a command string that is completely parsable by the server (i.e.,
      it contains no <application>psql</application>-specific features),
      or a single backslash command. Thus you cannot mix
      <acronym>SQL</acronym> and <application>psql</application>
      meta-commands with this option. To achieve that, you could
      pipe the string into <application>psql</application>, for example:
      <literal>echo '\x \\ SELECT * FROM foo;' | psql</literal>.
      (<literal>\\</> is the separator meta-command.)
-->
<replaceable class="parameter">command</replaceable>は、サーバで完全に解析可能な（つまり、<application>psql</application>特有の機能は含まない）コマンド文字列、もしくは、バックスラッシュコマンド1つである必要があります。
このため、このオプションでは<acronym>SQL</acronym>と<application>psql</application>メタコマンドを混在させることはできません。
これらを同時に使用するには、例えば、<literal>echo '\x \\ SELECT * FROM foo;' | psql</literal>のようにパイプを使って文字列を<application>psql</application>に渡します（<literal>\\</>はメタコマンドの区切り文字です。）。
      </para>
      <para>
<!--
       If the command string contains multiple SQL commands, they are
       processed in a single transaction, unless there are explicit
       <command>BEGIN</>/<command>COMMIT</> commands included in the
       string to divide it into multiple transactions.  This is
       different from the behavior when the same string is fed to
       <application>psql</application>'s standard input.  Also, only
       the result of the last SQL command is returned.
-->
コマンド文字列が複数のSQLコマンドを含む場合、トランザクションを複数に分ける<command>BEGIN</>/<command>COMMIT</>コマンドが明示的に文字列内に含まれない限り、それらのコマンドは1つのトランザクションで処理されます。
これは、同じ文字列を<application>psql</application>の標準入力として渡した場合の動作とは異なります。
また最後のSQLコマンドの結果のみが返されます。
      </para>
      <para>
<!--
       Because of these legacy behaviors, putting more than one command in
       the <option>-c</option> string often has unexpected results.  It's
       better to feed multiple commands to <application>psql</application>'s
       standard input, either using <application>echo</application> as
       illustrated above, or via a shell here-document, for example:
-->
これらの従来的な動作のため、<option>-c</option>の文字列に2つ以上のコマンドを指定すると、予期しない結果をもたらすことがあります。
上記のように<application>echo</application>を使うか、あるいは以下の例のようにシェルのヒアドキュメントを使って、<application>psql</application>の標準入力に複数のコマンドを入力する方が良いでしょう。
<programlisting>
psql &lt;&lt;EOF
\x
SELECT * FROM foo;
EOF
</programlisting>
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-d <replaceable class="parameter">dbname</replaceable></></term>
      <term><option>--dbname=<replaceable class="parameter">dbname</replaceable></></term>
      <listitem>
      <para>
<!--
       Specifies the name of the database to connect to. This is
       equivalent to specifying <replaceable
       class="parameter">dbname</replaceable> as the first non-option
       argument on the command line.
-->
接続するデータベースの名前を指定します。
コマンドラインでオプション以外の最初の引数として<replaceable class="parameter">dbname</replaceable>を指定するのと同じ効力を持ちます。
      </para>
      <para>
<!--
       If this parameter contains an <symbol>=</symbol> sign or starts
       with a valid <acronym>URI</acronym> prefix
       (<literal>postgresql://</literal>
       or <literal>postgres://</literal>), it is treated as a
       <parameter>conninfo</parameter> string. See <xref
       linkend="libpq-connstring"> for more information.
-->
このパラメータに<symbol>=</symbol>記号が含まれる場合、または有効な<acronym>URI</acronym>接頭辞(<literal>postgresql://</literal>または<literal>postgres://</literal>)から始まる場合<parameter>conninfo</parameter>文字列として扱われます。
詳しくは<xref linkend="libpq-connect">を参照してください。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-e</></term>
      <term><option>--echo-queries</></term>
      <listitem>
      <para>
<!--
      Copy all SQL commands sent to the server to standard output as well.
      This is equivalent
      to setting the variable <varname>ECHO</varname> to
      <literal>queries</literal>.
-->
サーバに送られるすべてのSQLコマンドを標準出力にも送ります。
<varname>ECHO</varname>変数を<literal>queries</literal>に設定するのと同じ効力を持ちます。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-E</></term>
      <term><option>--echo-hidden</></term>
      <listitem>
      <para>
<!--
      Echo the actual queries generated by <command>\d</command> and other backslash
      commands. You can use this to study <application>psql</application>'s
      internal operations. This is equivalent to
      setting the variable <varname>ECHO_HIDDEN</varname> from within
      <application>psql</application>.
-->
<command>\d</command>やその他のバックスラッシュコマンドによって生成される実際の問い合わせを表示します。
これを使って、<application>psql</application>の内部動作を調べることができます。
<application>psql</application>内部から<varname>ECHO_HIDDEN</varname>変数を設定するのと同じ効力を持ちます。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-f <replaceable class="parameter">filename</replaceable></></term>
      <term><option>--file=<replaceable class="parameter">filename</replaceable></></term>
      <listitem>
      <para>
<!--
      Use the file <replaceable class="parameter">filename</replaceable>
      as the source of commands instead of reading commands interactively.
      After the file is processed, <application>psql</application>
      terminates. This is in many ways equivalent to the meta-command
      <command>\i</command>.
-->
対話式にコマンドを読み取るのではなく、<replaceable class="parameter">filename</replaceable>ファイルをコマンドの入力元として使用します。
このファイルの処理が終了した後、<application>psql</application>は終了します。
これは<command>\i</command>メタコマンドとほぼ同じ効力を持ちます。
      </para>

      <para>
<!--
       If <replaceable>filename</replaceable> is <literal>-</literal>
       (hyphen), then standard input is read.
-->
<replaceable>filename</replaceable>に<literal>-</literal>（ハイフン）を指定すると、標準入力から読み取られます。
      </para>

      <para>
<!--
      Using this option is subtly different from writing <literal>psql
      &lt; <replaceable
      class="parameter">filename</replaceable></literal>. In general,
      both will do what you expect, but using <literal>-f</literal>
      enables some nice features such as error messages with line
      numbers. There is also a slight chance that using this option will
      reduce the start-up overhead. On the other hand, the variant using
      the shell's input redirection is (in theory) guaranteed to yield
      exactly the same output you would have received had you entered
      everything by hand.
-->
このオプションを指定するのと、<literal>psql &lt; <replaceable class="parameter">filename</replaceable></literal>と入力するのでは、微妙に動作が異なります。
一般的には、両者とも期待通りの動作を行いますが、<literal>-f</literal>を使用した場合は、エラーメッセージに行番号を付けるなどいくつか便利な機能が有効になります。
また、このオプションを使用した場合、起動時のオーバーヘッドが減少する可能性が若干あります。
一方、シェルの入力リダイレクションを使用する方法では、（理論的には）全て手作業で入力した場合の出力とまったく同一な出力になることが保証されます。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-F <replaceable class="parameter">separator</replaceable></></term>
      <term><option>--field-separator=<replaceable class="parameter">separator</replaceable></></term>
      <listitem>
      <para>
<!--
      Use <replaceable class="parameter">separator</replaceable> as the
      field separator for unaligned output. This is equivalent to
      <command>\pset fieldsep</command> or <command>\f</command>.
-->
<replaceable class="parameter">separator</replaceable>を位置揃えを行わない出力におけるフィールド区切り文字として使用します。
<command>\pset fieldsep</command>もしくは<command>\f</command>と同じ効力を持ちます。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-h <replaceable class="parameter">hostname</replaceable></></term>
      <term><option>--host=<replaceable class="parameter">hostname</replaceable></></term>
      <listitem>
      <para>
<!--
      Specifies the host name of the machine on which the
      server is running. If the value begins
      with a slash, it is used as the directory for the Unix-domain
      socket.
-->
サーバを実行しているマシンのホスト名を指定します。
この値がスラッシュから始まる場合、Unixドメインソケット用のディレクトリとして使用されます。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-H</></term>
      <term><option>--html</></term>
      <listitem>
      <para>
<!--
      Turn on <acronym>HTML</acronym> tabular output. This is
      equivalent to <literal>\pset format html</literal> or the
      <command>\H</command> command.
-->
<acronym>HTML</acronym>表形式を有効にします。
<literal>\pset format html</literal>もしくは<command>\H</command>コマンドと同じ効力を持ちます。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-l</></term>
      <term><option>--list</></term>
      <listitem>
      <para>
<!--
      List all available databases, then exit. Other non-connection
      options are ignored. This is similar to the meta-command
      <command>\list</command>.
-->
利用可能な全てのデータベースを一覧表示し、終了します。
この他の接続に関連しないオプションは無視されます。
<command>\list</command>メタコマンドと似た効力を持ちます。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-L <replaceable class="parameter">filename</replaceable></></term>
      <term><option>--log-file=<replaceable class="parameter">filename</replaceable></></term>
      <listitem>
      <para>
<!--
       Write all query output into file <replaceable
       class="parameter">filename</replaceable>, in addition to the
       normal output destination.
-->
すべての問い合わせの出力を通常の出力先に出力し、さらにファイル<replaceable class="parameter">filename</replaceable>に書き出します。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-n</></term>
      <term><option>--no-readline</></term>
      <listitem>
      <para>
<!--
       Do not use <application>Readline</application> for line editing and do
       not use the command history.
       This can be useful to turn off tab expansion when cutting and pasting.
-->
行編集用の<application>Readline</application>を使用しません。
またコマンド履歴も使用しません。
コピー＆ペースト時のタブ展開を無効にするために有用かもしれません。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-o <replaceable class="parameter">filename</replaceable></></term>
      <term><option>--output=<replaceable class="parameter">filename</replaceable></></term>
      <listitem>
      <para>
<!--
      Put all query output into file <replaceable
      class="parameter">filename</replaceable>. This is equivalent to
      the command <command>\o</command>.
-->
全ての問い合わせの出力を<replaceable class="parameter">filename</replaceable>ファイルに書き込みます。
これは<command>\o</command>コマンドと同じ効力を持ちます。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-p <replaceable class="parameter">port</replaceable></></term>
      <term><option>--port=<replaceable class="parameter">port</replaceable></></term>
      <listitem>
      <para>
<!--
      Specifies the TCP port or the local Unix-domain
      socket file extension on which the server is listening for
      connections. Defaults to the value of the <envar>PGPORT</envar>
      environment variable or, if not set, to the port specified at
      compile time, usually 5432.
-->
サーバが接続監視を行っているTCPポートもしくはローカルUnixドメインソケットファイルの拡張子を指定します。
環境変数<envar>PGPORT</envar>の値、環境変数が設定されていない場合はコンパイル時に指定した値（通常は5432）がデフォルト値となります。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-P <replaceable class="parameter">assignment</replaceable></></term>
      <term><option>--pset=<replaceable class="parameter">assignment</replaceable></></term>
      <listitem>
      <para>
<!--
      Specifies printing options, in the style of
      <command>\pset</command>. Note that here you
      have to separate name and value with an equal sign instead of a
      space. For example, to set the output format to <application>LaTeX</application>, you could write
      <literal>-P format=latex</literal>.
-->
<command>\pset</command>形式により表示オプションを指定します。
ここでは空白ではなく等号を使って名前と値を区切っていることに注意してください。
たとえば、出力形式を<application>LaTeX</application>にする場合、<literal>-P format=latex</literal>と入力します。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-q</></term>
      <term><option>--quiet</></term>
      <listitem>
      <para>
<!--
      Specifies that <application>psql</application> should do its work
      quietly. By default, it prints welcome messages and various
      informational output. If this option is used, none of this
      happens. This is useful with the <option>-c</option> option.
      Within <application>psql</application> you can also set the
      <varname>QUIET</varname> variable to achieve the same effect.
-->
<application>psql</application>がメッセージ出力なしで処理を行うように指示します。
デフォルトでは、ウェルカム（welcome）メッセージや各種の情報が表示されますが、
このオプションを使用した場合、これらのメッセージが表示されません。
<option>-c</option>オプションと併用すると便利です。
<application>psql</application>内で<varname>QUIET</varname>変数を設定した場合も、同じ効力を得ることができます。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-R <replaceable class="parameter">separator</replaceable></></term>
      <term><option>--record-separator=<replaceable class="parameter">separator</replaceable></></term>
      <listitem>
      <para>
<!--
      Use <replaceable class="parameter">separator</replaceable> as the
      record separator for unaligned output. This is equivalent to the
      <command>\pset recordsep</command> command.
-->
<replaceable class="parameter">separator</replaceable>を位置揃えを行わない出力におけるレコード区切り文字として使用します。
これは<command>\pset recordsep</command>コマンドと同じです。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-s</></term>
      <term><option>--single-step</></term>
      <listitem>
      <para>
<!--
      Run in single-step mode. That means the user is prompted before
      each command is sent to the server, with the option to cancel
      execution as well. Use this to debug scripts.
-->
シングルステップモードで実行します。
これは各コマンドがサーバに送信される前に、ユーザに対して実行するかキャンセルするかについて確認を求めることを意味します。
スクリプトのデバッグを行う時に使用してください。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-S</></term>
      <term><option>--single-line</></term>
      <listitem>
      <para>
<!--
      Runs in single-line mode where a newline terminates an SQL command, as a
      semicolon does.
-->
シングル行モードで実行します。このモードでは、セミコロンと同じように改行もSQLコマンドの終端として扱われます。
      </para>

      <note>
      <para>
<!--
      This mode is provided for those who insist on it, but you are not
      necessarily encouraged to use it. In particular, if you mix
      <acronym>SQL</acronym> and meta-commands on a line the order of
      execution might not always be clear to the inexperienced user.
-->
このモードはどうしてもこのような方式を使用したいユーザ向けに用意されたもので、必ずしも使用が推奨されるわけではありません。
特に、1行に<acronym>SQL</acronym>とメタコマンドを混在させる場合、経験の浅いユーザにとってその実行順番は必ずしもわかりやすいものではありません。
      </para>
      </note>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-t</></term>
      <term><option>--tuples-only</></term>
      <listitem>
      <para>
<!--
      Turn off printing of column names and result row count footers,
      etc. This is equivalent to the <command>\t</command> command.
-->
列名と結果の行数フッタなどの表示を無効にします。
これは、<command>\t</command>コマンドとまったく同じ効力を持ちます。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-T <replaceable class="parameter">table_options</replaceable></></term>
      <term><option>--table-attr=<replaceable class="parameter">table_options</replaceable></></term>
      <listitem>
      <para>
<!--
      Specifies options to be placed within the
      <acronym>HTML</acronym> <sgmltag>table</sgmltag> tag. See
      <command>\pset</command> for details.
-->
<acronym>HTML</acronym>の<sgmltag>table</sgmltag>タグで使用されるオプションを指定します。
詳細は<command>\pset</command>を参照してください。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-U <replaceable class="parameter">username</replaceable></></term>
      <term><option>--username=<replaceable class="parameter">username</replaceable></></term>
      <listitem>
      <para>
<!--
      Connect to the database as the user <replaceable
      class="parameter">username</replaceable> instead of the default.
      (You must have permission to do so, of course.)
-->
デフォルトのユーザではなく<replaceable class="parameter">username</replaceable>ユーザとしてデータベースに接続します
（当然、そうする権限を持っていなければなりません）。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-v <replaceable class="parameter">assignment</replaceable></></term>
      <term><option>--set=<replaceable class="parameter">assignment</replaceable></></term>
      <term><option>--variable=<replaceable class="parameter">assignment</replaceable></></term>
      <listitem>
      <para>
<!--
      Perform a variable assignment, like the <command>\set</command>
      meta-command. Note that you must separate name and value, if
      any, by an equal sign on the command line. To unset a variable,
      leave off the equal sign. To set a variable with an empty value,
      use the equal sign but leave off the value. These assignments are
      done during a very early stage of start-up, so variables reserved
      for internal purposes might get overwritten later.
-->
<command>\set</command>メタコマンドのように、変数の代入を行います。
値がある場合、コマンド行上では、名前と値を等号（=）で区切る必要があることに注意してください。
変数を未設定の状態にするには、等号を指定しないでください。
値が空の変数を設定するには、値を指定しないで等号のみ使用してください。
これらの代入は起動時の非常に早い段階で行われます。
そのため、内部で使用するために予約されている変数は後で上書きされる可能性があります。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-V</></term>
      <term><option>--version</></term>
      <listitem>
      <para>
<!--
      Print the <application>psql</application> version and exit.
-->
<application>psql</application>のバージョンを表示し、終了します。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-w</></term>
     <term><option>--no-password</></term>
     <listitem>
      <para>
<!--
       Never issue a password prompt.  If the server requires password
       authentication and a password is not available by other means
       such as a <filename>.pgpass</filename> file, the connection
       attempt will fail.  This option can be useful in batch jobs and
       scripts where no user is present to enter a password.
-->
パスワードの入力を促しません。
サーバがパスワード認証を必要とし、かつ、<filename>.pgpass</filename>ファイルなどの他の方法が利用できない場合、接続試行は失敗します。
バッチジョブやスクリプトなどパスワードを入力するユーザが存在しない場合にこのオプションは有用かもしれません。
      </para>

      <para>
<!--
       Note that this option will remain set for the entire session,
       and so it affects uses of the meta-command
       <command>\connect</command> as well as the initial connection attempt.
-->
このオプションはセッション全体にわたって設定されたままであることに注意してください。
このため<command>\connect</command>メタコマンドの使用に関しても初期接続試行と同様に影響します。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-W</></term>
      <term><option>--password</></term>
      <listitem>
      <para>
<!--
       Force <application>psql</application> to prompt for a
       password before connecting to a database.
-->
データベースに接続する前に、<application>psql</application>は強制的にパスワード入力を促します。
      </para>

      <para>
<!--
       This option is never essential, since <application>psql</application>
       will automatically prompt for a password if the server demands
       password authentication.  However, <application>psql</application>
       will waste a connection attempt finding out that the server wants a
       password.  In some cases it is worth typing <option>-W</> to avoid
       the extra connection attempt.
-->
サーバがパスワード認証を要求する場合<application>psql</application>は自動的にパスワード入力を促しますので、これが重要になることはありません。
しかし、<application>psql</application>は、サーバにパスワードが必要かどうかを判断するための接続試行を無駄に行います。
こうした余計な接続試行を防ぐために<option>-W</>の入力が有意となる場合もあります。
      </para>

      <para>
<!--
       Note that this option will remain set for the entire session,
       and so it affects uses of the meta-command
       <command>\connect</command> as well as the initial connection attempt.
-->
このオプションはセッション全体に対して設定されたままであることに注意してください。
このため初期接続試行と同様に<command>\connect</command>メタコマンドの使用にも影響を与えます。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-x</></term>
      <term><option>--expanded</></term>
      <listitem>
      <para>
<!--
      Turn on the expanded table formatting mode. This is equivalent to the
      <command>\x</command> command.
-->
拡張テーブル形式モードを有効にします。
これは<command>\x</command>コマンドと同じです。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-X,</></term>
      <term><option>--no-psqlrc</></term>
      <listitem>
      <para>
<!--
      Do not read the start-up file (neither the system-wide
      <filename>psqlrc</filename> file nor the user's
      <filename>~/.psqlrc</filename> file).
-->
起動用ファイル（<filename>psqlrc</filename>ファイルおよびユーザ用の<filename>~/.psqlrc</filename>ファイルのどちらも）を読み込みません。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-z</option></term>
      <term><option>--field-separator-zero</option></term>
      <listitem>
      <para>
<!--
      Set the field separator for unaligned output to a zero byte.
-->
位置揃えを行わない出力用のフィールド区切り文字をゼロバイトに設定します。
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-0</option></term>
      <term><option>--record-separator-zero</option></term>
      <listitem>
      <para>
<!--
      Set the record separator for unaligned output to a zero byte.  This is
      useful for interfacing, for example, with <literal>xargs -0</literal>.
-->
位置揃えを行わない出力用のレコード区切り文字をゼロバイトに設定します。
これは例えば<literal>xargs -0</literal>と連携する時に有用です。
      </para>
      </listitem>
    </varlistentry>

     <varlistentry>
      <term><option>-1</option></term>
      <term><option>--single-transaction</option></term>
      <listitem>
       <para>
<!--
        When <application>psql</application> executes a script, adding
        this option wraps <command>BEGIN</>/<command>COMMIT</> around the
        script to execute it as a single transaction.  This ensures that
        either all the commands complete successfully, or no changes are
        applied.
-->
このオプションで起動された<application>psql</application>でスクリプトを実行するとき、スクリプトの前後を<command>BEGIN</>/<command>COMMIT</>で囲み、単一トランザクションとして実行します。
これによりすべてのコマンドが完全に成功するか、変更がまったく行われないかのいずれかになります。
       </para>

       <para>
<!--
        If the script itself uses <command>BEGIN</>, <command>COMMIT</>,
        or <command>ROLLBACK</>, this option will not have the desired
        effects.
        Also, if the script contains any command that cannot be executed
        inside a transaction block, specifying this option will cause that
        command (and hence the whole transaction) to fail.
-->
スクリプト内部で<command>BEGIN</>、<command>COMMIT</>、<command>ROLLBACK</>を使用している場合、このオプションは想定した効果をもたらしません。
また、スクリプト内部にトランザクションブロック内部で実行することができないコマンドが含まれている場合、このオプションを指定することで、そのコマンドは失敗（そしてそのためにトランザクション全体が失敗）します。
       </para>
      </listitem>
     </varlistentry>

    <varlistentry>
      <term><option>-?</></term>
      <term><option>--help</></term>
      <listitem>
      <para>
<!--
      Show help about <application>psql</application> command line
      arguments, and exit.
-->
<application>psql</application>のコマンドライン引数に関するヘルプを表示し、終了します。
      </para>
      </listitem>
    </varlistentry>

  </variablelist>
 </refsect1>


 <refsect1>
<!--
  <title>Exit Status</title>
-->
  <title>終了ステータス</title>

  <para>
<!--
   <application>psql</application> returns 0 to the shell if it
   finished normally, 1 if a fatal error of its own occurs (e.g. out of memory,
   file not found), 2 if the connection to the server went bad
   and the session was not interactive, and 3 if an error occurred in a
   script and the variable <varname>ON_ERROR_STOP</varname> was set.
-->
<application>psql</application>は、正常に終了した時には0を、<application>psql</application>にとって致命的なエラー（メモリ不足やファイルが見つからないなど）が発生した時には1を、セッションが対話式でない状態でサーバとの接続が不完全になった時には2を、<varname>ON_ERROR_STOP</varname>変数が設定されている状態でスクリプトでエラーが発生した時には3をシェルに返します。
  </para>
 </refsect1>


 <refsect1>
<!--
  <title>Usage</title>
-->
<title>使用方法</title>

  <refsect2 id="R2-APP-PSQL-connecting">
<!--
    <title>Connecting to a Database</title>
-->
<title>データベースへの接続</title>

    <para>
<!--
    <application>psql</application> is a regular
    <productname>PostgreSQL</productname> client application. In order
    to connect to a database you need to know the name of your target
    database, the host name and port number of the server, and what user
    name you want to connect as. <application>psql</application> can be
    told about those parameters via command line options, namely
    <option>-d</option>, <option>-h</option>, <option>-p</option>, and
    <option>-U</option> respectively. If an argument is found that does
    not belong to any option it will be interpreted as the database name
    (or the user name, if the database name is already given). Not all
    of these options are required; there are useful defaults. If you omit the host
    name, <application>psql</> will connect via a Unix-domain socket
    to a server on the local host, or via TCP/IP to <literal>localhost</> on
    machines that don't have Unix-domain sockets. The default port number is
    determined at compile time.
    Since the database server uses the same default, you will not have
    to specify the port in most cases. The default user name is your
    Unix user name, as is the default database name. Note that you cannot
    just connect to any database under any user name. Your database
    administrator should have informed you about your access rights.
-->
<application>psql</application>は<productname>PostgreSQL</productname>の正式なクライアントアプリケーションです。
データベースに接続するには、接続するデータベース名、ホスト名、サーバのポート番号、接続する際に使用するユーザ名がわかっていなければなりません。
<application>psql</application>では、それらをコマンドラインオプションで指定することができます。接続するデータベース名は<option>-d</option>、ホスト名は<option>-h</option>、サーバのポート番号は<option>-p</option>、接続するユーザ名は<option>-U</option>を使用してそれぞれ指定します。
オプションでない引数がある場合、それはデータベース名（データベース名が与えられている場合にはユーザ名）とみなされます。
これらのオプションは全て指定されている必要はありません。便利なデフォルト値があります。
ホスト名を省略した場合、<application>psql</>はUnixドメインソケット経由でローカルホスト上のサーバに、Unixドメインソケットを持たないマシンでは<literal>localhost</>にTCP/IP経由で接続します。
デフォルトのポート番号はコンパイル時に設定されます。
データベースサーバは同じデフォルト値を使用するので、多くの場合、ポートは指定する必要はありません。
デフォルトのユーザ名とデータベース名は、Unixのユーザ名です。
任意のユーザ名で全てのデータベースに接続できるわけではありません。
データベース管理者は、接続権限をユーザに知らせておかなければなりません。
    </para>

    <para>
<!--
    When the defaults aren't quite right, you can save yourself
    some typing by setting the environment variables
    <envar>PGDATABASE</envar>, <envar>PGHOST</envar>,
    <envar>PGPORT</envar> and/or <envar>PGUSER</envar> to appropriate
    values. (For additional environment variables, see <xref
    linkend="libpq-envars">.) It is also convenient to have a
    <filename>~/.pgpass</> file to avoid regularly having to type in
    passwords. See <xref linkend="libpq-pgpass"> for more information.
-->
デフォルトが完全には適用できない時は、入力の手間を省くために、環境変数<envar>PGDATABASE</envar>、<envar>PGHOST</envar>、<envar>PGPORT</envar>、<envar>PGUSER</envar>に適当な値を設定することもできます。
（この他の環境変数については、<xref linkend="libpq-envars">を参照してください。）
また、<filename>~/.pgpass</>ファイルを使用すれば、定常的なパスワードの入力を省略でき、便利です。
詳細は<xref linkend="libpq-pgpass">を参照してください。
    </para>

    <para>
<!--
     An alternative way to specify connection parameters is in a
     <parameter>conninfo</parameter> string or
     a <acronym>URI</acronym>, which is used instead of a database
     name. This mechanism give you very wide control over the
     connection. For example:
-->
他の接続パラメータの指定方法として<parameter>conninfo</parameter>文字列または<acronym>URI</acronym>があります。
これは、データベース名の代わりに使用されます。
この機構により、接続全体に関する非常に幅広い制御を行うことができます。
以下に例を示します。
<programlisting>
$ <userinput>psql "service=myservice sslmode=require"</userinput>
$ <userinput>psql postgresql://dbmaster:5433/mydb?sslmode=require</userinput>
</programlisting>
<!--
     This way you can also use <acronym>LDAP</acronym> for connection
     parameter lookup as described in <xref linkend="libpq-ldap">.
     See <xref linkend="libpq-paramkeywords"> for more information on all the
     available connection options.
-->
この方法では接続パラメータの検索に、<xref linkend="libpq-ldap">で説明する<acronym>LDAP</acronym>を使用することもできます。
利用できる接続オプションのすべてについての詳細は、<xref linkend="libpq-paramkeywords">を参照してください。
    </para>

    <para>
<!--
    If the connection could not be made for any reason (e.g., insufficient
    privileges, server is not running on the targeted host, etc.),
    <application>psql</application> will return an error and terminate.
-->
何らかの原因（権限がない、指定したホストでサーバが稼働していないなど）で接続ができなかった場合は、<application>psql</application>はエラーメッセージを表示し、終了します。
    </para>

    <para>
<!--
     If both standard input and standard output are a
     terminal, then <application>psql</application> sets the client
     encoding to <quote>auto</quote>, which will detect the
     appropriate client encoding from the locale settings
     (<envar>LC_CTYPE</envar> environment variable on Unix systems).
     If this doesn't work out as expected, the client encoding can be
     overridden using the environment
     variable <envar>PGCLIENTENCODING</envar>.
-->
標準入力および標準出力の両方が端末である場合、<application>psql</application>はクライアントの符号化方式を<quote>auto</quote>に設定します。
これはロケール設定（Unixシステムでは環境変数<envar>LC_CTYPE</envar>）から適切なクライアント符号化方式を決定します。
想定した通りに動作しない場合、環境変数<envar>PGCLIENTENCODING</envar>を使用してクライアント符号化方式を上書きすることができます。
    </para>
  </refsect2>

  <refsect2 id="R2-APP-PSQL-4">
<!--
    <title>Entering SQL Commands</title>
-->
<title>SQLコマンドの入力</title>

    <para>
<!--
    In normal operation, <application>psql</application> provides a
    prompt with the name of the database to which
    <application>psql</application> is currently connected, followed by
    the string <literal>=&gt;</literal>. For example:
-->
通常の操作において、<application>psql</application>は、<application>psql</application>が現在接続しているデータベース名の後に<literal>=&gt;</literal>の文字列が付いたプロンプトを表示します。
以下に例を示します。
<programlisting>
$ <userinput>psql testdb</userinput>
psql (&version;)
Type "help" for help.


testdb=&gt;
</programlisting>
    </para>

    <para>
<!--
    At the prompt, the user can type in <acronym>SQL</acronym> commands.
    Ordinarily, input lines are sent to the server when a
    command-terminating semicolon is reached. An end of line does not
    terminate a command.  Thus commands can be spread over several lines for
    clarity. If the command was sent and executed without error, the results
    of the command are displayed on the screen.
-->
プロンプトに対しユーザは<acronym>SQL</acronym>コマンドを入力することができます。
通常、入力された行はコマンド終了を意味するセミコロンに達した時点でサーバへと送信されます。
改行はコマンドの終了とはみなされません。
したがって、わかりやすくするために、コマンドは複数の行にわたって記述することができます。
コマンドが送信され問題なく実行されると、画面にコマンドの結果が表示されます。
    </para>

    <para>
<!--
    Whenever a command is executed, <application>psql</application> also polls
    for asynchronous notification events generated by
    <xref linkend="SQL-LISTEN"> and
    <xref linkend="SQL-NOTIFY">.
-->
また、コマンドが実行される度に、<application>psql</application>は<xref linkend="SQL-LISTEN">と<xref linkend="SQL-NOTIFY">によって生成された非同期通知イベントを検査します。
    </para>

    <para>
<!--
    While C-style block comments are passed to the server for
    processing and removal, SQL-standard comments are removed by
    <application>psql</application>.
-->
Cの形式のブロックコメントは、サーバに送信され、サーバによって取り除かれますが、SQL標準のコメントは<application>psql</application>によって取り除かれます。
    </para>
  </refsect2>

  <refsect2 id="APP-PSQL-meta-commands">
<!--
    <title>Meta-Commands</title>
-->
    <title>メタコマンド</title>

    <para>
<!--
    Anything you enter in <application>psql</application> that begins
    with an unquoted backslash is a <application>psql</application>
    meta-command that is processed by <application>psql</application>
    itself. These commands make
    <application>psql</application> more useful for administration or
    scripting. Meta-commands are often called slash or backslash commands.
-->
<application>psql</application>内で入力されたコマンドのうち、引用符で囲まれていないバックスラッシュで始まるものは、<application>psql</application>自身が実行する<application>psql</application>のメタコマンドとして扱われます。
これらのコマンドを使うと、データベースを管理したりスクリプトを作成するにあたって、<application>psql</application>がより便利になります。
メタコマンドはよくスラッシュコマンド、またはバックスラッシュコマンドとも呼ばれます。
    </para>

    <para>
<!--
    The format of a <application>psql</application> command is the backslash,
    followed immediately by a command verb, then any arguments. The arguments
    are separated from the command verb and each other by any number of
    whitespace characters.
-->
<application>psql</application>コマンドは、バックスラッシュ、コマンド本体、引数の順につなげた形式になっています。
引数とコマンド本体の間および引数と引数の間は、空白文字によって分割されています。
    </para>

    <para>
<!--
    To include whitespace in an argument you can quote it with
    single quotes. To include a single quote in an argument,
    write two single quotes within single-quoted text.
    Anything contained in single quotes is
    furthermore subject to C-like substitutions for
    <literal>\n</literal> (new line), <literal>\t</literal> (tab),
    <literal>\b</literal> (backspace), <literal>\r</literal> (carriage return),
    <literal>\f</literal> (form feed),
    <literal>\</literal><replaceable>digits</replaceable> (octal), and
    <literal>\x</literal><replaceable>digits</replaceable> (hexadecimal).
    A backslash preceding any other character within single-quoted text
    quotes that single character, whatever it is.
-->
引数に空白を含める場合は単一引用符で囲みます。
単一引用符を引数に含める場合には、単一引用符で括られた文字列の中で、その単一引用符を2つ続けてください。
単一引用符で囲われた文字は、C言語と同じような置換の対象となります。
このような文字には、<literal>\n</literal>（改行）、<literal>\t</literal>（タブ）、<literal>\b</literal> (後退)、<literal>\r</literal>(復帰)、<literal>\f</literal> (改頁)、<literal>\</literal><replaceable>digits</replaceable>（8進数で表された文字）、<literal>\x</literal><replaceable>digits</replaceable>（16進数で表された文字）があります。
単一引用符で括られたテキスト内でその他の任意の文字の前にバックスラッシュを付けた場合は、その文字が何であろうとその一文字だけとして扱われます。
    </para>

    <para>
<!--
    Within an argument, text that is enclosed in backquotes
    (<literal>`</literal>) is taken as a command line that is passed to the
    shell. The output of the command (with any trailing newline removed)
    replaces the backquoted text.
-->
引数の中で逆引用符(<literal>`</literal>)で囲まれたテキストは、コマンドラインとして認識され、シェルに渡されます。
コマンドの結果（末尾の改行は削除されます）で逆引用符で囲まれたテキストを置き換えます。
    </para>

    <para>
<!--
    If an unquoted colon (<literal>:</literal>) followed by a
    <application>psql</> variable name appears within an argument, it is
    replaced by the variable's value, as described in <xref
    linkend="APP-PSQL-interpolation" endterm="APP-PSQL-interpolation-title">.
-->
<xref linkend="APP-PSQL-interpolation" endterm="APP-PSQL-interpolation-title">に示すように、引数の中で引用符で囲まれていないコロン(<literal>:</literal>)の後に<application>psql</>変数名が存在する場合、そこは変数の値に置換されます。
    </para>

    <para>
<!--
    Some commands take an <acronym>SQL</acronym> identifier (such as a
    table name) as argument. These arguments follow the syntax rules
    of <acronym>SQL</acronym>: Unquoted letters are forced to
    lowercase, while double quotes (<literal>"</>) protect letters
    from case conversion and allow incorporation of whitespace into
    the identifier.  Within double quotes, paired double quotes reduce
    to a single double quote in the resulting name.  For example,
    <literal>FOO"BAR"BAZ</> is interpreted as <literal>fooBARbaz</>,
    and <literal>"A weird"" name"</> becomes <literal>A weird"
    name</>.
-->
コマンドには、引数として（テーブル名などの）<acronym>SQL</acronym>の識別子を取るものがあります。
これらの引数は次のような<acronym>SQL</acronym>の構文規則に従います。 
引用符を伴わない文字は強制的に小文字になります。しかし、二重引用符（<literal>"</>）で囲まれると、大文字小文字変換が行われず、空白文字を識別子内に含めることができます。
さらに、二重引用符内では、連続する2つの二重引用符は1つの二重引用符とみなされます。
例えば、<literal>FOO"BAR"BAZ</>は<literal>fooBARbaz</>と解釈され、<literal>"A weird"" name"</>は<literal>A weird" name</>になります。
    </para>

    <para>
<!--
    Parsing for arguments stops at the end of the line, or when another
    unquoted backslash is found.  An unquoted backslash
    is taken as the beginning of a new meta-command. The special
    sequence <literal>\\</literal> (two backslashes) marks the end of
    arguments and continues parsing <acronym>SQL</acronym> commands, if
    any. That way <acronym>SQL</acronym> and
    <application>psql</application> commands can be freely mixed on a
    line. But in any case, the arguments of a meta-command cannot
    continue beyond the end of the line.
-->
引数の解析は行末または引用符で囲まれていないもう1つのバックスラッシュが見つかると終了します。
引用符がないバックスラッシュは新しいメタコマンドの始まりと解釈されます。
<literal>\\</literal>（バックスラッシュ2つ）という特別な文字の並びは引数の終わりを意味するので、<acronym>SQL</acronym>コマンドが残されている場合は、その解析を続けます。
このように、<acronym>SQL</acronym>コマンドと<application>psql</application>コマンドは1つの行に自由に混合して記述することができます。
しかし、あらゆる場合において、メタコマンドの引数は行をまたぐことはできません。
    </para>

    <para>
<!--
    The following meta-commands are defined:
-->
メタコマンドとして、以下のものが定義されています。

    <variablelist>
      <varlistentry>
        <term><literal>\a</literal></term>
        <listitem>
        <para>
<!--
        If the current table output format is unaligned, it is switched to aligned.
        If it is not unaligned, it is set to unaligned. This command is
        kept for backwards compatibility. See <command>\pset</command> for a
        more general solution.
-->
現在のテーブルの出力形式が「揃えない」になっていれば「揃える」に、
「揃える」になっていれば「揃えない」に設定します。
このコマンドは後方互換性を保持するためにあります。
より一般的な解決策は<command>\pset</command>を参照してください。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
<!--
        <term><literal>\c</literal> or <literal>\connect</literal> <literal>[ <replaceable class="parameter">dbname</replaceable> [ <replaceable class="parameter">username</replaceable> ] [ <replaceable class="parameter">host</replaceable> ] [ <replaceable class="parameter">port</replaceable> ] ]</literal></term>
-->
        <term><literal>\c</literal> または <literal>\connect</literal> <literal>[ <replaceable class="parameter">dbname</replaceable> [ <replaceable class="parameter">username</replaceable> ] [ <replaceable class="parameter">host</replaceable> ] [ <replaceable class="parameter">port</replaceable> ] ]</literal></term>
        <listitem>
        <para>
<!--
        Establishes a new connection to a <productname>PostgreSQL</>
        server. If the new connection is successfully made, the
        previous connection is closed. If any of <replaceable
        class="parameter">dbname</replaceable>, <replaceable
        class="parameter">username</replaceable>, <replaceable
        class="parameter">host</replaceable> or <replaceable
        class="parameter">port</replaceable> are omitted or specified
        as <literal>-</literal>, the value of that parameter from the
        previous connection is used. If there is no previous
        connection, the <application>libpq</application> default for
        the parameter's value is used.
-->
<productname>PostgreSQL</>サーバへの新規の接続を確立します。
新規接続に成功した場合、以前の接続は閉じられます。
<replaceable class="parameter">dbname</replaceable>、<replaceable class="parameter">username</replaceable>、<replaceable class="parameter">host</replaceable>、<replaceable class="parameter">port</replaceable>のいずれかが省略、あるいは <literal>-</literal>と指定された場合、対応するパラメータの値はこれまでの接続の値が使用されます。
これまで接続されていない場合は、そのパラメータの値には<application>libpq</application>のデフォルト値が使用されます。
        </para>

        <para>
<!--
        If the connection attempt failed (wrong user name, access
        denied, etc.), the previous connection will only be kept if
        <application>psql</application> is in interactive mode. When
        executing a non-interactive script, processing will
        immediately stop with an error. This distinction was chosen as
        a user convenience against typos on the one hand, and a safety
        mechanism that scripts are not accidentally acting on the
        wrong database on the other hand.
-->
接続の試行が（ユーザ名の間違いやアクセス拒否などの理由で）失敗した場合、<application>psql</application>が対話式モードである場合に限り、それまでの接続が保持されます。
非対話式スクリプトを実行している場合は、処理はエラーとなり、即座に停止します。
この実装の違いは、対話モードでは入力ミスに対するユーザの利便性を考慮し、非対話モードではスクリプトによって間違ったデータベースを操作することを防ぐための安全策を考慮した結果決められました。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\C [ <replaceable class="parameter">title</replaceable> ]</literal></term>
        <listitem>
        <para>
<!--
        Sets the title of any tables being printed as the result of a
        query or unset any such title. This command is equivalent to
        <literal>\pset title <replaceable
        class="parameter">title</replaceable></literal>. (The name of
        this command derives from <quote>caption</quote>, as it was
        previously only used to set the caption in an
        <acronym>HTML</acronym> table.)
-->
問い合わせ結果として表示されるテーブルのタイトルの設定、または、タイトルの設定解除を行います。
このコマンドは、<literal>\pset title <replaceable class="parameter">title</replaceable></literal>と同じ効力を持ちます。
（このコマンド名は<quote>標題(caption)</quote>に由来します。
以前は<acronym>HTML</acronym>のテーブルの標題を設定するためだけに使われていたためです。）
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
       <term><literal>\cd [ <replaceable>directory</replaceable> ]</literal></term>
       <listitem>
        <para>
<!--
         Changes the current working directory to
         <replaceable>directory</replaceable>. Without argument, changes
         to the current user's home directory.
-->
現在の作業ディレクトリを<replaceable>directory</replaceable>に変更します。
引数がない場合は、現在のユーザのホームディレクトリに変更します。
        </para>

        <tip>
         <para>
<!--
          To print your current working directory, use <literal>\! pwd</literal>.
-->
現在の作業ディレクトリを表示するには、<literal>\! pwd</literal>を使用してください。
         </para>
        </tip>
       </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\conninfo</literal></term>
        <listitem>
        <para>
<!--
        Outputs information about the current database connection.
-->
現在のデータベース接続に関する情報を出力します。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry id="APP-PSQL-meta-commands-copy">
        <term><literal>\copy { <replaceable class="parameter">table</replaceable> [ ( <replaceable class="parameter">column_list</replaceable> ) ] | ( <replaceable class="parameter">query</replaceable> ) }
        { <literal>from</literal> | <literal>to</literal> }
        { <replaceable class="parameter">'filename'</replaceable> | program <replaceable class="parameter">'command'</replaceable> | stdin | stdout | pstdin | pstdout }
        [ [ with ] ( <replaceable class="parameter">option</replaceable> [, ...] ) ]</literal></term>

        <listitem>
        <para>
<!--
        Performs a frontend (client) copy. This is an operation that
        runs an <acronym>SQL</acronym> <xref linkend="SQL-COPY">
        command, but instead of the server
        reading or writing the specified file,
        <application>psql</application> reads or writes the file and
        routes the data between the server and the local file system.
        This means that file accessibility and privileges are those of
        the local user, not the server, and no SQL superuser
        privileges are required.
-->
フロントエンド（クライアント）コピーを行います。
これは<xref linkend="SQL-COPY"> <acronym>SQL</acronym>コマンドを実行する操作ですが、サーバで指定ファイルに対する読み込みまたは書き込みを行うのではなく、<application>psql</application>がファイルの読み書きや、サーバとローカルファイルシステム間のデータ送信を行います。 
この場合、ファイルへのアクセス権限はサーバではなくローカルユーザのものを使用するので、SQLのスーパーユーザ権限は必要ありません。
        </para>

        <para>
<!--
        When <literal>program</> is specified,
        <replaceable class="parameter">command</replaceable> is
        executed by <application>psql</application> and the data passed from
        or to <replaceable class="parameter">command</replaceable> is
        routed between the server and the client.
        Again, the execution privileges are those of
        the local user, not the server, and no SQL superuser
        privileges are required.
-->
<literal>program</>が指定された場合、<replaceable class="parameter">command</replaceable>が<application>psql</application>により実行され、<replaceable class="parameter">command</replaceable>から、または、<replaceable class="parameter">command</replaceable>へのデータはサーバとクライアント間を行き来します。
ここでも、実行権限はローカル側のユーザであり、サーバ側ではなく、SQLスーパーユーザ権限は必要とされません。
        </para>

        <para>
<!--
        For <literal>\copy ... from stdin</>, data rows are read from the same
        source that issued the command, continuing until <literal>\.</literal>
        is read or the stream reaches <acronym>EOF</>. This option is useful
        for populating tables in-line within a SQL script file.
        For <literal>\copy ... to stdout</>, output is sent to the same place
        as <application>psql</> command output, and
        the <literal>COPY <replaceable>count</></literal> command status is
        not printed (since it might be confused with a data row).
        To read/write <application>psql</application>'s standard input or
        output regardless of the current command source or <literal>\o</>
        option, write <literal>from pstdin</> or <literal>to pstdout</>.
-->
<literal>\copy ... from stdin</literal>では、データ行は、コマンドの発行源と同じところから、<literal>\.</literal>を読み取るまで、あるいは、ストリームが<acronym>EOF</>に達するまで読み続けます。
このオプションは、SQLスクリプトファイルの内部でテーブルにデータを投入する場合に便利です。
<literal>\copy ... to stdout</>では、出力は<application>psql</>コマンドの出力と同じところに送られますが、<literal>COPY <replaceable>count</></literal>コマンドのステータスは表示されません(これはデータ行と混同してしまうかもしれないからです)。
コマンドの入力元や<literal>\o</>オプションに関わらず、<application>psql</application>の標準入力や標準出力を読み書きするには、<literal>from pstdin</>あるいは<literal>to pstdout</>と書いてください。
        </para>

        <para>
<!--
        The syntax of this command is similar to that of the
        <acronym>SQL</acronym> <xref linkend="sql-copy">
        command.  All options other than the data source/destination are
        as specified for <xref linkend="sql-copy">.
        Because of this, special parsing rules apply to the <command>\copy</>
        command. In particular, <application>psql</>'s variable substitution
        rules and backslash escapes do not apply.
-->
このコマンドの構文は<acronym>SQL</acronym>の<xref linkend="sql-copy">コマンドに似ています。
データの入力元と出力先以外のすべてのオプションは<xref linkend="sql-copy">と同じです。
このため<command>\copy</>コマンドには特別な解析規則が適用されていることに注意してください。
特に、<application>psql</>の変数の置換規則やバックスラッシュエスケープは適用されません。
        </para>

        <tip>
        <para>
<!--
        This operation is not as efficient as the <acronym>SQL</acronym>
        <command>COPY</command> command because all data must pass
        through the client/server connection. For large
        amounts of data the <acronym>SQL</acronym> command might be preferable.
-->
この操作は<acronym>SQL</acronym>の<command>COPY</command>コマンドほど効率が良いわけではありません。
これは、全てのデータをクライアント/サーバ接続を通じてやり取りしなければならないからです。
データ量が多い時は<acronym>SQL</acronym>コマンドを使用する方が良いでしょう。
        </para>
        </tip>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\copyright</literal></term>
        <listitem>
        <para>
<!--
        Shows the copyright and distribution terms of
        <productname>PostgreSQL</productname>.
-->
<productname>PostgreSQL</productname>の著作権および配布条項を表示します。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\d[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>

        <listitem>
        <para>
<!--
        For each relation (table, view, index, sequence, or foreign table)
        or composite type matching the
        <replaceable class="parameter">pattern</replaceable>, show all
        columns, their types, the tablespace (if not the default) and any
        special attributes such as <literal>NOT NULL</literal> or defaults.
        Associated indexes, constraints, rules, and triggers are
        also shown.  For foreign tables, the associated foreign
        server is shown as well.
        (<quote>Matching the pattern</> is defined in
        <xref linkend="APP-PSQL-patterns" endterm="APP-PSQL-patterns-title">
        below.)
-->
<replaceable class="parameter">pattern</replaceable>にマッチする各リレーション（テーブル、ビュー、インデックス、シーケンス、外部テーブル）または複合型について、全ての列、列の型、テーブル空間（デフォルト以外を使用している場合）、<literal>NOT NULL</literal>やデフォルトなどの特別な属性を表示します。
関連付けられているインデックス、制約、ルールおよびトリガも表示されます。
外部テーブルでは関連する外部サーバも表示されます。
（<quote>パターンのマッチング</>については後述の<xref linkend="APP-PSQL-patterns" endterm="APP-PSQL-patterns-title">で定義されています。）
        </para>

        <para>
<!--
        For some types of relation, <literal>\d</> shows additional information
        for each column: column values for sequences, indexed expression for
        indexes and foreign data wrapper options for foreign tables.
-->
一部の種類のリレーションでは、<literal>\d</>は各列について追加の情報を表示します。
例えば、シーケンスでは列の値、インデックスではインデックス式、外部テーブルでは外部データラッパのオプションです。
        </para>

        <para>
<!--
        The command form <literal>\d+</literal> is identical, except that
        more information is displayed: any comments associated with the
        columns of the table are shown, as is the presence of OIDs in the
        table, the view definition if the relation is a view, a non-default
        <link linkend="SQL-CREATETABLE-REPLICA-IDENTITY">replica
        identity</link> setting.
-->
<literal>\d+</literal>というコマンド形式も同一ですが、より多くの情報を表示します。
こちらでは、テーブルの列に関連付けられたコメントやテーブルにOIDが存在するかどうか、リレーションがビューの場合はビューの定義、デフォルトと異なる<link linkend="SQL-CREATETABLE-REPLICA-IDENTITY">replica identity</link>の設定も表示されます。
        </para>

        <para>
<!--
        By default, only user-created objects are shown;  supply a
        pattern or the <literal>S</literal> modifier to include system
        objects.
-->
デフォルトではユーザが作成したオブジェクトのみが表示されます。
システムオブジェクトを含めるためには、パターンまたは<literal>S</literal>修飾子を付与してください。
        </para>

        <note>
        <para>
<!--
        If <command>\d</command> is used without a
        <replaceable class="parameter">pattern</replaceable> argument, it is
        equivalent to <command>\dtvsE</command> which will show a list of
        all visible tables, views, sequences and foreign tables.
        This is purely a convenience measure.
-->
<command>\d</command>が<replaceable class="parameter">pattern</replaceable>引数なしで使用された場合は、<command>\dtvsE</command>と同じ意味となり、可視である全てのテーブル、ビュー、シーケンス、外部テーブルの一覧が表示されます。
これは単に便宜上のものです。
        </para>
        </note>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\da[S] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>

        <listitem>
        <para>
<!--
        Lists aggregate functions, together with their
        return type and the data types they operate on. If <replaceable
        class="parameter">pattern</replaceable>
        is specified, only aggregates whose names match the pattern are shown.
        By default, only user-created objects are shown;  supply a
        pattern or the <literal>S</literal> modifier to include system
        objects.
-->
集約関数と、その戻り値のデータ型、演算対象となるデータ型の一覧を表示します。
<replaceable class="parameter">pattern</replaceable>が指定された場合、そのパターンに名前がマッチする集約のみが表示されます。
デフォルトではユーザが作成したオブジェクトのみが表示されます。
システムオブジェクトを含めるためには、パターンまたは<literal>S</literal>修飾子を付与してください。
        </para>
        </listitem>
      </varlistentry>



      <varlistentry>
        <term><literal>\db[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>

        <listitem>
        <para>
<!--
        Lists tablespaces. If <replaceable
        class="parameter">pattern</replaceable>
        is specified, only tablespaces whose names match the pattern are shown.
        If <literal>+</literal> is appended to the command name, each object
        is listed with its associated permissions.
-->
テーブル空間を一覧表示します。
<replaceable class="parameter">pattern</replaceable>が指定された場合、そのパターンに名前がマッチするテーブル空間のみが表示されます。
コマンド名に<literal>+</literal>が付与された場合、各オブジェクトに関連付けされた権限についても表示します。

        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dc[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Lists conversions between character-set encodings.
        If <replaceable class="parameter">pattern</replaceable>
        is specified, only conversions whose names match the pattern are
        listed.
        By default, only user-created objects are shown;  supply a
        pattern or the <literal>S</literal> modifier to include system
        objects.
        If <literal>+</literal> is appended to the command name, each object
        is listed with its associated description.
-->
文字セット符号化方式間の変換の一覧を表示します。
<replaceable class="parameter">pattern</replaceable>が指定された場合、そのパターンに名前がマッチする変換のみが表示されます。
デフォルトではユーザが作成したオブジェクトのみが表示されます。
システムオブジェクトを含めるためには、パターンまたは<literal>S</literal>修飾子を付与してください。
コマンド名に<literal>+</literal>を付与すると、各オブジェクトに関連する説明を付けて表示します。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dC[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Lists type casts.
        If <replaceable class="parameter">pattern</replaceable>
        is specified, only casts whose source or target types match the
        pattern are listed.
        If <literal>+</literal> is appended to the command name, each object
        is listed with its associated description.
-->
型キャストの一覧を表示します。
<replaceable class="parameter">pattern</replaceable>が指定された場合、そのパターンに元データ型または変換先データ型がマッチするキャストのみが表示されます。
コマンド名に<literal>+</literal>を付与すると、各オブジェクトに関連する説明を付けて表示します。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dd[S] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Shows the descriptions of objects of type <literal>constraint</>,
        <literal>operator class</>, <literal>operator family</>,
        <literal>rule</>, and <literal>trigger</>. All
        other comments may be viewed by the respective backslash commands for
        those object types.
-->
<literal>constraint</>、<literal>operator class</>、<literal>operator family</>、<literal>rule</>、<literal>trigger</>という種類のオブジェクトについての説明を表示します。
他のコメントはすべて、これらのオブジェクト種類用の対応するバックスラッシュコマンドによって表示されます。
        </para>

<!--
        <para><literal>\dd</literal> displays descriptions for objects matching the
        <replaceable class="parameter">pattern</replaceable>, or of visible
        objects of the appropriate type if no argument is given.  But in either
        case, only objects that have a description are listed.
        By default, only user-created objects are shown;  supply a
        pattern or the <literal>S</literal> modifier to include system
        objects.
-->
        <para>
<literal>\dd</literal>は<replaceable class="parameter">pattern</replaceable>にマッチするオブジェクトの説明を表示します。
引数が指定されていない場合は、適切な種類の可視なオブジェクトの説明を表示します。
どちらの場合でも、一覧に表示されるのは説明を持つオブジェクトのみです
デフォルトではユーザが作成したオブジェクトのみが表示されます。
システムオブジェクトを含めるためには、パターンまたは<literal>S</literal>修飾子を付与してください。
        </para>

        <para>
<!--
        Descriptions for objects can be created with the <xref
        linkend="sql-comment">
        <acronym>SQL</acronym> command.
-->
オブジェクトの説明は<xref linkend="sql-comment"> <acronym>SQL</acronym>コマンドを使用して作成することができます。
       </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\ddp [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Lists default access privilege settings.  An entry is shown for
        each role (and schema, if applicable) for which the default
        privilege settings have been changed from the built-in defaults.
        If <replaceable class="parameter">pattern</replaceable> is
        specified, only entries whose role name or schema name matches
        the pattern are listed.
-->
デフォルトのアクセス権限設定を一覧表示します。
組み込みのデフォルトから権限設定が変更されたロール（および適切ならばスキーマも）ごとに1項目示されます。
<replaceable class="parameter">pattern</replaceable>が指定された場合、パターンにマッチするロール名またはスキーマ名の項目のみが表示されます。
        </para>

        <para>
<!--
        The <xref linkend="sql-alterdefaultprivileges"> command is used to set
        default access privileges.  The meaning of the
        privilege display is explained under
        <xref linkend="sql-grant">.
-->
<xref linkend="sql-alterdefaultprivileges">コマンドを使用して、デフォルトのアクセス権限を設定します。
権限表示の意味は<xref linkend="sql-grant">で説明します。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dD[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Lists domains. If <replaceable
        class="parameter">pattern</replaceable>
        is specified, only domains whose names match the pattern are shown.
        By default, only user-created objects are shown;  supply a
        pattern or the <literal>S</literal> modifier to include system
        objects.
        If <literal>+</literal> is appended to the command name, each object
        is listed with its associated permissions and description.
-->
ドメインを一覧表示します。 
<replaceable class="parameter">pattern</replaceable>が指定されている場合は、パターンに名前がマッチするドメインのみが表示されます。
デフォルトではユーザが作成したオブジェクトのみが表示されます。
システムオブジェクトを含めるためには、パターンまたは<literal>S</literal>修飾子を付与してください。
コマンド名に<literal>+</literal>を付与すると、各オブジェクトに関連する権限と説明を付けて表示します。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dE[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <term><literal>\di[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <term><literal>\dm[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <term><literal>\ds[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <term><literal>\dt[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <term><literal>\dv[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>

        <listitem>
        <para>
<!--
        In this group of commands, the letters <literal>E</literal>,
        <literal>i</literal>, <literal>m</literal>, <literal>s</literal>,
        <literal>t</literal>, and <literal>v</literal>
        stand for foreign table, index, materialized view, sequence, table, and view,
        respectively.
        You can specify any or all of
        these letters, in any order, to obtain a listing of objects
        of these types.  For example, <literal>\dit</> lists indexes
        and tables.  If <literal>+</literal> is
        appended to the command name, each object is listed with its
        physical size on disk and its associated description, if any.
        If <replaceable class="parameter">pattern</replaceable> is
        specified, only objects whose names match the pattern are listed.
        By default, only user-created objects are shown; supply a
        pattern or the <literal>S</literal> modifier to include system
        objects.
-->
このコマンド群において、<literal>E</literal>、<literal>i</literal>、<literal>m</literal>、<literal>s</literal>、<literal>t</literal>、<literal>v</literal>という文字はそれぞれ、外部テーブル、インデックス、マテリアライズドビュー、シーケンス、テーブル、ビューを表します。
これらの種類のオブジェクトの一覧を表示するために、これらの文字の中の任意の文字またはすべてを任意の順番で指定することができます。
例えば、<literal>\dit</>はインデックスとテーブルを列挙します。
<literal>+</literal>がコマンド名に付与された場合、各オブジェクトは、もしあればディスク上の物理容量と関連する説明をつけて表示されます。
<replaceable class="parameter">pattern</replaceable>が指定されている場合は、パターンに名称がマッチする項目のみが表示されます。
デフォルトでは、ユーザが作成したオブジェクトのみが表示されます。
システムオブジェクトを含めるためにはパターンまたは<literal>S</literal>修飾子を付与してください。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\des[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Lists foreign servers (mnemonic: <quote>external
        servers</quote>).
        If <replaceable class="parameter">pattern</replaceable> is
        specified, only those servers whose name matches the pattern
        are listed.  If the form <literal>\des+</literal> is used, a
        full description of each server is shown, including the
        server's ACL, type, version, options, and description.
-->
外部(foreign)サーバ（つまり<quote>external servers</quote>）を一覧表示します。
<replaceable class="parameter">pattern</replaceable>が指定されている場合は、名前がパターンにマッチするサーバのみが表示されます。
<literal>\des+</literal>構文が使用された場合、サーバのACL、型、バージョン、オプション、説明など各サーバの完全な説明が表示されます。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\det[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Lists foreign tables (mnemonic: <quote>external tables</quote>).
        If <replaceable class="parameter">pattern</replaceable> is
        specified, only entries whose table name or schema name matches
        the pattern are listed.  If the form <literal>\det+</literal>
        is used, generic options and the foreign table description
        are also displayed.
-->
外部(foreign)テーブル（つまり<quote>external tables</quote>）を一覧表示します。
<replaceable class="parameter">pattern</replaceable>が指定された場合、パターンにテーブル名またはスキーマ名がマッチするもののみが表示されます。
<literal>\det+</literal>が使用された場合、汎用オプションと外部テーブルの説明も表示されます。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\deu[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Lists user mappings (mnemonic: <quote>external
        users</quote>).
        If <replaceable class="parameter">pattern</replaceable> is
        specified, only those mappings whose user names match the
        pattern are listed.  If the form <literal>\deu+</literal> is
        used, additional information about each mapping is shown.
-->
ユーザマップ（つまり<quote>external users</quote>）を一覧表示します。
<replaceable class="parameter">pattern</replaceable>が指定されている場合は、名前がパターンにマッチするユーザのみが表示されます。
<literal>\deu+</literal>構文が使用された場合、各マップについて追加情報が表示されます。
        </para>

        <caution>
        <para>
<!--
        <literal>\deu+</literal> might also display the user name and
        password of the remote user, so care should be taken not to
        disclose them.
-->
<literal>\deu+</literal>ではリモートユーザのユーザ名とパスワードも表示される可能性があります。
これらを外部に曝さないように注意しなければなりません。
        </para>
        </caution>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dew[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Lists foreign-data wrappers (mnemonic: <quote>external
        wrappers</quote>).
        If <replaceable class="parameter">pattern</replaceable> is
        specified, only those foreign-data wrappers whose name matches
        the pattern are listed.  If the form <literal>\dew+</literal>
        is used, the ACL, options, and description of the foreign-data
        wrapper are also shown.
-->
外部データラッパ（つまり<quote>external wrappers</quote>）を一覧表示します。
<replaceable class="parameter">pattern</replaceable>が指定されている場合、名前がパターンにマッチする外部データラッパのみが表示されます。
<literal>\dew+</literal>構文が使用された場合、外部データラッパのACL、オプションおよび説明も表示されます。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\df[antwS+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>

        <listitem>
        <para>
<!--
        Lists functions, together with their arguments, return types, and
        function types, which are classified as <quote>agg</> (aggregate),
        <quote>normal</>, <quote>trigger</>, or <quote>window</>.
        To display only functions
        of specific type(s), add the corresponding letters <literal>a</>,
        <literal>n</>, <literal>t</>, or <literal>w</> to the command.
        If <replaceable
        class="parameter">pattern</replaceable> is specified, only
        functions whose names match the pattern are shown.
        By default, only user-created
        objects are shown; supply a pattern or the <literal>S</literal>
        modifier to include system objects.
        If the form <literal>\df+</literal> is used, additional information
        about each function is shown, including security classification,
        volatility, owner, language, source code and description.
-->
関数とその引数と戻り値の型、および、<quote>agg</> (集約)、<quote>normal</>、<quote>trigger</>、<quote>window</>で分類される関数の種類の一覧を表示します。
特定種類の関数のみを表示させるには、対応する文字<literal>a</>、<literal>n</>、<literal>t</>、<literal>w</>をコマンドに付けて下さい。
<replaceable class="parameter">pattern</replaceable>が指定されている場合は、そのパターンに名前がマッチする関数のみが表示されます。
デフォルトではユーザが作成したオブジェクトのみが表示されます。
システムオブジェクトを含めるためには、パターンまたは<literal>S</literal>修飾子を付与してください。
<literal>\df+</literal>構文が使われた場合、各関数の、セキュリティ分類、揮発性、所有者、言語、ソースコードや説明を含む付加的情報も表示されます。
        </para>

        <tip>
        <para>
<!--
        To look up functions taking arguments or returning values of a specific
        type, use your pager's search capability to scroll through the
        <literal>\df</> output.
-->
特定の型を引数とする関数や特定の型を返す関数を検索するには、ページャの検索機能を使用して<literal>\df</>の出力をスクロールしてください。
        </para>

        </tip>

        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dF[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
         Lists text search configurations.
         If <replaceable class="parameter">pattern</replaceable> is specified,
         only configurations whose names match the pattern are shown.
         If the form <literal>\dF+</literal> is used, a full description of
         each configuration is shown, including the underlying text search
         parser and the dictionary list for each parser token type.
-->
全文検索設定を一覧表示します。
<replaceable class="parameter">pattern</replaceable>が指定された場合、このパターンにマッチする名前の設定のみが表示されます。
<literal>\dF+</literal>形式が使用された場合、使用される全文検索パーサや各パーサトークン型についての辞書リストなど各設定の完全な説明が表示されます。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\dFd[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
         Lists text search dictionaries.
         If <replaceable class="parameter">pattern</replaceable> is specified,
         only dictionaries whose names match the pattern are shown.
         If the form <literal>\dFd+</literal> is used, additional information
         is shown about each selected dictionary, including the underlying
         text search template and the option values.
-->
全文検索辞書を一覧表示します。
<replaceable class="parameter">pattern</replaceable>が指定された場合、このパターンにマッチする名前の辞書のみが表示されます。
<literal>\dFd+</literal>形式が使用された場合、選択された辞書それぞれについて使用される全文検索テンプレートやオプション値など更なる情報が表示されます。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\dFp[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
         Lists text search parsers.
         If <replaceable class="parameter">pattern</replaceable> is specified,
         only parsers whose names match the pattern are shown.
         If the form <literal>\dFp+</literal> is used, a full description of
         each parser is shown, including the underlying functions and the
         list of recognized token types.
-->
全文検索パーサを一覧表示します。
<replaceable class="parameter">pattern</replaceable>が指定された場合、このパターンにマッチする名前のパーサのみが表示されます。
<literal>\dFp+</literal>形式が使用された場合、使用される関数や認知されるトークン型のリストなど各パーサの完全な説明が表示されます。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\dFt[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
         Lists text search templates.
         If <replaceable class="parameter">pattern</replaceable> is specified,
         only templates whose names match the pattern are shown.
         If the form <literal>\dFt+</literal> is used, additional information
         is shown about each template, including the underlying function names.
-->
テキスト検索テンプレートを一覧表示します。
<replaceable class="parameter">pattern</replaceable>が指定された場合、このパターンにマッチする名前のテンプレートのみが表示されます。
<literal>\dFt+</literal>形式が使用された場合、テンプレートそれぞれについて使用される関数名など更なる情報が表示されます。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dg[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Lists database roles.
        (Since the concepts of <quote>users</> and <quote>groups</> have been
        unified into <quote>roles</>, this command is now equivalent to
        <literal>\du</literal>.)
        If <replaceable class="parameter">pattern</replaceable> is specified,
        only those roles whose names match the pattern are listed.
        If the form <literal>\dg+</literal> is used, additional information
        is shown about each role; currently this adds the comment for each
        role.
-->
データベースロールを一覧表示します。
(<quote>ユーザ</>と<quote>グループ</>という概念は<quote>ロール</>に統合されましたので、このコマンドは<literal>\du</literal>と同じものになりました。)
<replaceable class="parameter">pattern</replaceable>が指定されている場合は、そのパターンに名前がマッチするロールのみが表示されます。
<literal>\dg+</literal>構文が使用された場合、ロールそれぞれについて更なる情報が表示されます。
現時点では各ロールのコメントが追加されます。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dl</literal></term>
        <listitem>
        <para>
<!--
        This is an alias for <command>\lo_list</command>, which shows a
        list of large objects.
-->
<command>\lo_list</command>の別名で、ラージオブジェクトの一覧を表示します。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dL[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Lists procedural languages. If <replaceable
        class="parameter">pattern</replaceable>
        is specified, only languages whose names match the pattern are listed.
        By default, only user-created languages
        are shown; supply the <literal>S</literal> modifier to include system
        objects. If <literal>+</literal> is appended to the command name, each
        language is listed with its call handler, validator, access privileges,
        and whether it is a system object.
-->
手続き言語を一覧表示します。
<replaceable class="parameter">pattern</replaceable>を指定すると、パターンに名前がマッチする言語のみが表示されます。
デフォルトではユーザが作成した言語のみが表示されます。
システムオブジェクトを含めるためには、パターンまたは<literal>S</literal>修飾子を付与してください。
<literal>+</literal>をコマンド名に追加すると、呼び出しハンドラ、有効性検証関数、アクセス権限、システムオブジェクトか否かという情報を付けて各言語が表示されます。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dn[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>

        <listitem>
        <para>
<!--
        Lists schemas (namespaces). If <replaceable
        class="parameter">pattern</replaceable>
        is specified, only schemas whose names match the pattern are listed.
        By default, only user-created objects are shown; supply a
        pattern or the <literal>S</literal> modifier to include system objects.
        If <literal>+</literal> is appended to the command name, each object
        is listed with its associated permissions and description, if any.
-->
スキーマ（名前空間）の一覧を表示します。
<replaceable class="parameter">pattern</replaceable>を指定すると、パターンに名前がマッチするスキーマのみが表示されます。
デフォルトではユーザが作成したオブジェクトのみが表示されます。
パターンまたは<literal>S</literal>修飾子を追加すると、システムオブジェクトが表示に追加されます。
コマンド名の後に<literal>+</literal>を付加すると、各オブジェクトに関連付けられている権限と説明が（存在すれば）表示されます。

        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\do[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Lists operators with their operand and result types.
        If <replaceable class="parameter">pattern</replaceable> is
        specified, only operators whose names match the pattern are listed.
        By default, only user-created objects are shown; supply a
        pattern or the <literal>S</literal> modifier to include system
        objects.
        If <literal>+</literal> is appended to the command name,
        additional information about each operator is shown, currently just
        the name of the underlying function.
-->
演算子と、その演算項目と結果の型を一覧表示します。 
<replaceable class="parameter">pattern</replaceable>を指定すると、パターンに名前がマッチする演算子のみが表示されます。
デフォルトではユーザが作成したオブジェクトのみが表示されます。
システムオブジェクトを含めるためには、パターンまたは<literal>S</literal>修飾子を付与してください。
コマンド名に<literal>+</literal>を付加すると、各演算子についての追加情報が表示されますが、現在はその元になっている関数の名前だけです。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dO[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>

        <listitem>
        <para>
<!--
        Lists collations.
        If <replaceable class="parameter">pattern</replaceable> is
        specified, only collations whose names match the pattern are
        listed.  By default, only user-created objects are shown;
        supply a pattern or the <literal>S</literal> modifier to
        include system objects.  If <literal>+</literal> is appended
        to the command name, each collation is listed with its associated
        description, if any.
        Note that only collations usable with the current database's encoding
        are shown, so the results may vary in different databases of the
        same installation.
-->
照合順序を一覧表示します。
<replaceable class="parameter">pattern</replaceable>を指定すると、パターンに名前がマッチする照合順序のみが表示されます。
デフォルトではユーザが作成したオブジェクトのみが表示されます。
システムオブジェクトを含めるためには、パターンまたは<literal>S</literal>修飾子を付与してください。
コマンド名の後に<literal>+</literal>を付加すると、各照合順序に関連付けられている説明が（存在すれば）表示されます。
現在のデータベースの符号化方式で使用できる照合順序のみが表示されることに注意してください。
このため同じインストレーションであってもデータベースによって結果が異なる可能性があります。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dp [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Lists tables, views and sequences with their
        associated access privileges.
        If <replaceable class="parameter">pattern</replaceable> is
        specified, only tables, views and sequences whose names match the
        pattern are listed.
-->
テーブル、ビュー、シーケンスを、関連付けられているアクセス権限とともに一覧表示します。 
<replaceable class="parameter">pattern</replaceable>を指定すると、パターンに名前がマッチするテーブル、ビュー、シーケンスのみが表示されます。
        </para>

        <para>
<!--
        The <xref linkend="sql-grant"> and
        <xref linkend="sql-revoke">
        commands are used to set access privileges.  The meaning of the
        privilege display is explained under
        <xref linkend="sql-grant">.
-->
アクセス権限の設定には<xref linkend="sql-grant">コマンドと<xref linkend="sql-revoke">コマンドが使われます。
権限の表示に関する意味は<xref linkend="sql-grant">で説明します。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\drds [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">role-pattern</replaceable></link> [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">database-pattern</replaceable></link> ] ]</literal></term>
        <listitem>
        <para>
<!--
        Lists defined configuration settings.  These settings can be
        role-specific, database-specific, or both.
        <replaceable>role-pattern</replaceable> and
        <replaceable>database-pattern</replaceable> are used to select
        specific roles and databases to list, respectively.  If omitted, or if
        <literal>*</> is specified, all settings are listed, including those
        not role-specific or database-specific, respectively.
-->
定義済み設定に関する設定を一覧表示します。
これらの設定はロール固有、データベース固有、またはその両方です。
<literal>role-pattern</literal>および<literal>database-pattern</literal>はそれぞれ特定のロールやデータベースを選択するために使用します。
パターンが省略された場合、または<literal>*</>が指定された場合、ロール固有ではない、または、データベース固有ではない設定を含め、すべての設定を表示します。
        </para>

        <para>
<!--
        The <xref linkend="sql-alterrole"> and
        <xref linkend="sql-alterdatabase">
        commands are used to define per-role and per-database configuration
        settings.
-->
ロール単位およびデータベース単位の設定を定義するには<xref linkend="sql-alterrole">および<xref linkend="sql-alterdatabase">コマンドを使用します。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\dT[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Lists data types.
        If <replaceable class="parameter">pattern</replaceable> is
        specified, only types whose names match the pattern are listed.
        If <literal>+</literal> is appended to the command name, each type is
        listed with its internal name and size, its allowed values
        if it is an <type>enum</> type, and its associated permissions.
        By default, only user-created objects are shown;  supply a
        pattern or the <literal>S</literal> modifier to include system
        objects.
-->
データ型を一覧表示します。
<replaceable class="parameter">pattern</replaceable>を指定すると、パターンにマッチする名前を持つ型のみを表示します。
<literal>+</literal>をコマンド名に付けると、型ごとに、型の内部名、サイズ、<type>enum</>型では許される値、関連する権限も表示されます。
デフォルトではユーザが作成したオブジェクトのみが表示されます。
システムオブジェクトを含めるためには、パターンまたは<literal>S</literal>修飾子を付与してください。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\du[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Lists database roles.
        (Since the concepts of <quote>users</> and <quote>groups</> have been
        unified into <quote>roles</>, this command is now equivalent to
        <literal>\dg</literal>.)
        If <replaceable class="parameter">pattern</replaceable> is specified,
        only those roles whose names match the pattern are listed.
        If the form <literal>\du+</literal> is used, additional information
        is shown about each role; currently this adds the comment for each
        role.
-->
データベースロールを一覧表示します。
(<quote>ユーザ</>と<quote>グループ</>という概念は<quote>ロール</>に統合されましたので、このコマンドは<literal>\dg</literal>と同じものになりました。)
<replaceable class="parameter">pattern</replaceable>が指定されている場合は、そのパターンに名前がマッチするロールのみが表示されます。
<literal>\du+</literal>構文が使用された場合、ロールそれぞれについて更なる情報が表示されます。
現時点では各ロールのコメントが追加されます。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dx[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Lists installed extensions.
        If <replaceable class="parameter">pattern</replaceable>
        is specified, only those extensions whose names match the pattern
        are listed.
        If the form <literal>\dx+</literal> is used, all the objects belonging
        to each matching extension are listed.
-->
インストールされた拡張を一覧表示します。
<replaceable class="parameter">pattern</replaceable>を指定すると、パターンにマッチする名前の拡張のみを表示します。
<literal>\dx+</literal>形式が使用された場合、マッチする拡張それぞれについて拡張に属するすべてのオブジェクトが表示されます。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\dy[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Lists event triggers.
        If <replaceable class="parameter">pattern</replaceable>
        is specified, only those event triggers whose names match the pattern
        are listed.
        If <literal>+</literal> is appended to the command name, each object
        is listed with its associated description.
-->
イベントトリガを一覧表示します。
<replaceable class="parameter">pattern</replaceable>を指定すると、パターンにマッチする名前のイベントトリガのみを表示します。
<literal>+</literal>をコマンド名に追記すると、関連する説明を付けて各オブジェクトを表示します。

        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
<!--
        <term><literal>\e</literal> or <literal>\edit</> <literal> <optional> <replaceable class="parameter">filename</> </optional> <optional> <replaceable class="parameter">line_number</> </optional> </literal></term>
-->
        <term><literal>\e</literal>または<literal>\edit</> <literal> <optional> <replaceable class="parameter">filename</> </optional> <optional> <replaceable class="parameter">line_number</> </optional> </literal></term>

        <listitem>
        <para>
<!--
        If <replaceable class="parameter">filename</replaceable> is
        specified, the file is edited; after the editor exits, its
        content is copied back to the query buffer. If no <replaceable
        class="parameter">filename</replaceable> is given, the current query
        buffer is copied to a temporary file which is then edited in the same
        fashion.
-->
<replaceable class="parameter">filename</replaceable>が指定された場合、このファイルが編集されます。
エディタを終了した後、その内容は問い合わせバッファにコピーされます。
<replaceable class="parameter">filename</replaceable>がない場合、現在の問い合わせバッファが一時ファイルにコピーされ、同様に編集されます。
        </para>

        <para>
<!--
        The new query buffer is then re-parsed according to the normal
        rules of <application>psql</application>, where the whole buffer
        is treated as a single line. (Thus you cannot make scripts this
        way. Use <command>\i</command> for that.) This means that
        if the query ends with (or contains) a semicolon, it is
        immediately executed. Otherwise it will merely wait in the
        query buffer; type semicolon or <literal>\g</> to send it, or
        <literal>\r</> to cancel.
-->
次に、新しい問い合わせバッファは、<application>psql</application>の通常の規則に従い、全体を1行として再解析されます
（このため、この方法では<quote>スクリプト</quote>を作成できません。
この目的のためには<command>\i</command>を使用してください）。
これは問い合わせの終端がセミコロンである（もしくは問い合わせがセミコロンを含む）場合、すぐに実行されることを意味しています。
セミコロンを含まない場合は、問い合わせバッファ内に保持されて入力を待ちます。
セミコロンまたは<literal>\g</>を入力して送信するか、<literal>\r</>を入力してキャンセルしてください。
        </para>

        <para>
<!--
        If a line number is specified, <application>psql</application> will
        position the cursor on the specified line of the file or query buffer.
        Note that if a single all-digits argument is given,
        <application>psql</application> assumes it is a line number,
        not a file name.
-->
行番号(line_number)が指定された場合、<application>psql</application>はファイルまたは問い合わせバッファ内の指定行にカーソルを位置づけます。
すべてが数字の引数が1つだけ指定された場合、<application>psql</application>はそれをファイル名ではなく行番号であるとみなすことに注意してください。
        </para>

        <tip>
        <para>
<!--
        See under <xref linkend="app-psql-environment"
        endterm="app-psql-environment-title"> for how to configure and
        customize your editor.
-->
使用するエディタを設定、カスタマイズする方法については<xref linkend="app-psql-environment" endterm="app-psql-environment-title">を参照してください。
        </para>
        </tip>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\echo <replaceable class="parameter">text</replaceable> [ ... ]</literal></term>
        <listitem>
        <para>
<!--
        Prints the arguments to the standard output, separated by one
        space and followed by a newline. This can be useful to
        intersperse information in the output of scripts. For example:
-->
引数を空白で区切り、標準出力に出力し、改行します。
スクリプトが出力するところどころに情報を記載する場合に有用です。
使用例を次に示します。
<programlisting>
=&gt; <userinput>\echo `date`</userinput>
Tue Oct 26 21:40:57 CEST 1999
</programlisting>
<!--
        If the first argument is an unquoted <literal>-n</literal> the trailing
        newline is not written.
-->
最初の引数が引用符で囲まれていない<literal>-n</literal>である場合、最後の改行は出力されません。
        </para>

        <tip>
        <para>
<!--
        If you use the <command>\o</command> command to redirect your
        query output you might wish to use <command>\qecho</command>
        instead of this command.
-->
<command>\o</command>コマンドを使用して問い合わせの出力先を変更した場合、このコマンドではなく、<command>\qecho</command>を使用した方が良いかもしれません。
        </para>
        </tip>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\ef <optional> <replaceable class="parameter">function_description</> <optional>  <replaceable class="parameter">line_number</> </optional> </optional> </literal></term>

        <listitem>
        <para>
<!--
         This command fetches and edits the definition of the named function,
         in the form of a <command>CREATE OR REPLACE FUNCTION</> command.
         Editing is done in the same way as for <literal>\edit</>.
         After the editor exits, the updated command waits in the query buffer;
         type semicolon or <literal>\g</> to send it, or <literal>\r</>
         to cancel.
-->
このコマンドは指定された関数の定義を<command>CREATE OR REPLACE FUNCTION</>コマンド構文で取り出し、編集します。
編集は<literal>\edit</>と同様の方法で行われます。
エディタ終了後、更新されたコマンドは問い合わせバッファ内で待機しています。
セミコロンか<literal>\g</>を入力して送信するか、<literal>\r</>を入力して取り消すかしてください。
        </para>

        <para>
<!--
         The target function can be specified by name alone, or by name
         and arguments, for example <literal>foo(integer, text)</>.
         The argument types must be given if there is more
         than one function of the same name.
-->
対象の関数は名前だけ、または、たとえば<literal>foo(integer, text)</>のように名前と引数で指定することができます。
同じ名前の関数が複数存在する場合、引数の型を指定しなければなりません。
        </para>

        <para>
<!--
         If no function is specified, a blank <command>CREATE FUNCTION</>
         template is presented for editing.
-->
関数が指定されなかった場合、空の<command>CREATE FUNCTION</>のテンプレートが編集用に表示されます。
        </para>

        <para>
<!--
        If a line number is specified, <application>psql</application> will
        position the cursor on the specified line of the function body.
        (Note that the function body typically does not begin on the first
        line of the file.)
-->
行番号が指定された場合、<application>psql</application>は関数本体における指定行にカーソルを移動します。
（関数本体は通常、ファイルの先頭から始まらないことに注意してください。）
        </para>

        <tip>
        <para>
<!--
        See under <xref linkend="app-psql-environment"
        endterm="app-psql-environment-title"> for how to configure and
        customize your editor.
-->
使用するエディタを設定、カスタマイズする方法については<xref linkend="app-psql-environment" endterm="app-psql-environment-title">を参照してください。
        </para>
        </tip>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\encoding [ <replaceable class="parameter">encoding</replaceable> ]</literal></term>

        <listitem>
        <para>
<!--
        Sets the client character set encoding.  Without an argument, this command
        shows the current encoding.
-->
クライアント側の文字セット符号化方式を設定します。
引数を指定しない場合、このコマンドは現在の符号化方式を表示します。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\f [ <replaceable class="parameter">string</replaceable> ]</literal></term>

        <listitem>
        <para>
<!--
        Sets the field separator for unaligned query output. The default
        is the vertical bar (<literal>|</literal>). See also
        <command>\pset</command> for a generic way of setting output
        options.
-->
位置揃えされていない問い合わせの出力用の、フィールドの区切り文字を設定します。
デフォルトは、縦棒（<quote><literal>|</literal></quote>）です。
一般的な出力オプションの設定方法については、<command>\pset</command>を参照してください。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\g</literal> [ { <replaceable class="parameter">filename</replaceable> | <literal>|</literal><replaceable class="parameter">command</replaceable> } ]</term>

        <listitem>
        <para>
<!--
        Sends the current query input buffer to the server and
        optionally stores the query's output in <replaceable
        class="parameter">filename</replaceable> or pipes the output
        into a separate Unix shell executing <replaceable
        class="parameter">command</replaceable>.  The file or command is
        written to only if the query successfully returns zero or more tuples,
        not if the query fails or is a non-data-returning SQL command.
-->
現在の問い合わせ入力バッファをサーバに送ります。 
オプションを指定すれば、問い合わせ出力を<replaceable class="parameter">filename</replaceable>に格納したり、その出力を別のUnixシェルに渡し、<replaceable class="parameter">command</replaceable>を実行したりすることもできます。
問い合わせが成功しゼロ以上のタプルが返る場合にのみファイルまたはコマンドに書き出されます。
問い合わせが失敗する場合やデータを返さないSQLコマンドでは書き出されません。
        </para>
        <para>
<!--
        A bare <literal>\g</literal> is essentially equivalent to a semicolon.
        A <literal>\g</literal> with argument is a <quote>one-shot</quote>
        alternative to the <command>\o</command> command.
-->
<literal>\g</literal>だけを指定した場合は、セミコロンと実質的に同じです。
<literal>\g</literal>に引数を指定した場合は、<literal>\o</literal>コマンドの<quote>一度限りの</quote>代替手段として使用できます。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\gset</literal> [ <replaceable class="parameter">prefix</replaceable> ]</term>

        <listitem>
        <para>
<!--
         Sends the current query input buffer to the server and stores the
         query's output into <application>psql</> variables (see <xref
         linkend="APP-PSQL-variables" endterm="APP-PSQL-variables-title">).
         The query to be executed must return exactly one row.  Each column of
         the row is stored into a separate variable, named the same as the
         column.  For example:
-->
現在の問い合わせ入力バッファをサーバに送信し、問い合わせの出力を<application>psql</>変数（<xref linkend="APP-PSQL-variables" endterm="APP-PSQL-variables-title">参照）に格納します。
実行される問い合わせは正確に１行を返さなければなりません。
行の各列は、列と同じ名前を持つ別々の変数に格納されます。
例えば、以下のようになります。
<programlisting>
=&gt; <userinput>SELECT 'hello' AS var1, 10 AS var2</userinput>
-&gt; <userinput>\gset</userinput>
=&gt; <userinput>\echo :var1 :var2</userinput>
hello 10
</programlisting>
        </para>
        <para>
<!--
         If you specify a <replaceable class="parameter">prefix</replaceable>,
         that string is prepended to the query's column names to create the
         variable names to use:
-->
<replaceable class="parameter">prefix</replaceable>を指定した場合、使用する変数の名前を作成する時にその文字列が問い合わせの列名の前に付けられ、次のようになります。
<programlisting>
=&gt; <userinput>SELECT 'hello' AS var1, 10 AS var2</userinput>
-&gt; <userinput>\gset result_</userinput>
=&gt; <userinput>\echo :result_var1 :result_var2</userinput>
hello 10
</programlisting>
        </para>
        <para>
<!--
         If a column result is NULL, the corresponding variable is unset
         rather than being set.
-->
列の結果がNULLである場合、対応する変数は設定されず未設定状態となります。
        </para>
        <para>
<!--
         If the query fails or does not return one row,
         no variables are changed.
-->
問い合わせが失敗、または１行を返さない場合、変数は変更されません。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
<!--
        <term><literal>\h</literal> or <literal>\help</literal> <literal>[ <replaceable class="parameter">command</replaceable> ]</literal></term>
-->
        <term><literal>\h</literal>または<literal>\help</literal> <literal>[ <replaceable class="parameter">command</replaceable> ]</literal></term>
        <listitem>
        <para>
<!--
        Gives syntax help on the specified <acronym>SQL</acronym>
        command. If <replaceable class="parameter">command</replaceable>
        is not specified, then <application>psql</application> will list
        all the commands for which syntax help is available. If
        <replaceable class="parameter">command</replaceable> is an
        asterisk (<literal>*</literal>), then syntax help on all
        <acronym>SQL</acronym> commands is shown.
-->
指定した<acronym>SQL</acronym>コマンドの構文に関するヘルプを表示します。
<replaceable class="parameter">command</replaceable>が指定されていない場合は、<application>psql</application>は構文ヘルプが存在する全てのコマンドの一覧を表示します。
<replaceable class="parameter">command</replaceable>をアスタリスク（<literal>*</literal>）にすると、全ての<acronym>SQL</acronym>コマンドの構文ヘルプが表示されます。
        </para>

        <note>
        <para>
<!--
        To simplify typing, commands that consists of several words do
        not have to be quoted. Thus it is fine to type <userinput>\help
        alter table</userinput>.
-->
入力を簡単にするため、複数の単語からなるコマンドを引用符で囲む必要はありません。
<userinput>\help alter table</userinput>と入力するだけで十分です。
        </para>
        </note>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\H</literal></term>
        <listitem>
        <para>
<!--
        Turns on <acronym>HTML</acronym> query output format. If the
        <acronym>HTML</acronym> format is already on, it is switched
        back to the default aligned text format. This command is for
        compatibility and convenience, but see <command>\pset</command>
        about setting other output options.
-->
<acronym>HTML</acronym>問い合わせ出力形式を有効にします。
<acronym>HTML</acronym>形式が有効になっている場合は、デフォルトの位置揃えされたテキスト形式に戻します。
このコマンドは互換性と簡便性のために存在します。
他の出力オプションについては、<command>\pset</command>を参照してください。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\i <replaceable class="parameter">filename</replaceable></literal></term>
        <listitem>
        <para>
<!--
        Reads input from the file <replaceable
        class="parameter">filename</replaceable> and executes it as
        though it had been typed on the keyboard.
-->
<replaceable class="parameter">filename</replaceable>ファイルから入力を読み取り、キーボードから入力された場合と同じように実行します。
        </para>
        <note>
        <para>
<!--
        If you want to see the lines on the screen as they are read you
        must set the variable <varname>ECHO</varname> to
        <literal>all</literal>.
-->
読み取られた行を画面に表示させる場合は、<varname>ECHO</varname>変数を<literal>all</literal>に設定する必要があります。
        </para>
        </note>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\ir <replaceable class="parameter">filename</replaceable></literal></term>
        <listitem>
        <para>
<!--
        The <literal>\ir</> command is similar to <literal>\i</>, but resolves
        relative file names differently.  When executing in interactive mode,
        the two commands behave identically.  However, when invoked from a
        script, <literal>\ir</literal> interprets file names relative to the
        directory in which the script is located, rather than the current
        working directory.
-->
<literal>\ir</>コマンドは<literal>\i</>と似ていますが、相対ファイル名の解決方法が異なります。
対話モードで実行している場合は２つのコマンドの動作は同一です。
しかし、スクリプトから呼び出す場合、<literal>\ir</>は、現在の作業ディレクトリではなく、そのスクリプトの格納ディレクトリから見た相対ファイル名として解釈します。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
<!--
        <term><literal>\l[+]</literal> or <literal>\list[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
-->
        <term><literal>\l[+]</literal> または <literal>\list[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        List the databases in the server and show their names, owners,
        character set encodings, and access privileges.
        If <replaceable class="parameter">pattern</replaceable> is specified,
        only databases whose names match the pattern are listed.
        If <literal>+</literal> is appended to the command name, database
        sizes, default tablespaces, and descriptions are also displayed.
        (Size information is only available for databases that the current
        user can connect to.)
-->
サーバ内のデータベースについて、その名前、所有者、文字セット符号化方式、アクセス権限を一覧表示します。
<replaceable class="parameter">pattern</replaceable>を指定すると、パターンにマッチする名前を持つデータベースのみを表示します。
コマンド名に<literal>+</literal>を付けると、データベースのサイズ、デフォルトのテーブル空間、説明も表示します。
（サイズ情報は現在のユーザが接続可能なデータベースでのみ表示されます。）
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\lo_export <replaceable class="parameter">loid</replaceable> <replaceable class="parameter">filename</replaceable></literal></term>

        <listitem>
        <para>
<!--
        Reads the large object with <acronym>OID</acronym> <replaceable
        class="parameter">loid</replaceable> from the database and
        writes it to <replaceable
        class="parameter">filename</replaceable>. Note that this is
        subtly different from the server function
        <function>lo_export</function>, which acts with the permissions
        of the user that the database server runs as and on the server's
        file system.
-->
データベースから<acronym>OID</acronym>が<replaceable class="parameter">loid</replaceable>であるラージオブジェクトを読み取り、<replaceable class="parameter">filename</replaceable>に書き出します。
これは<function>lo_export</function>サーバ関数とは微妙に異なります。
<function>lo_export</function>関数は、データベースサーバを実行しているユーザ権限で、サーバ上のファイルシステムに対して動作します。
        </para>
        <tip>
        <para>
<!--
        Use <command>\lo_list</command> to find out the large object's
        <acronym>OID</acronym>.
-->
ラージオブジェクトの<acronym>OID</acronym>を確認するには、<command>\lo_list</command>を使用してください。
        </para>
        </tip>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\lo_import <replaceable class="parameter">filename</replaceable> [ <replaceable class="parameter">comment</replaceable> ]</literal></term>

        <listitem>
        <para>
<!--
        Stores the file into a <productname>PostgreSQL</productname>
        large object. Optionally, it associates the given
        comment with the object. Example:
-->
ファイルを<productname>PostgreSQL</productname>のラージオブジェクトに保存します。
オプションで、そのオブジェクトに指定したコメントを関連付けることができます。
下記に例を示します。
<programlisting>
foo=&gt; <userinput>\lo_import '/home/peter/pictures/photo.xcf' 'a picture of me'</userinput>
lo_import 152801
</programlisting>
<!--
        The response indicates that the large object received object
        ID 152801, which can be used to access the newly-created large
        object in the future. For the sake of readability, it is
        recommended to always associate a human-readable comment with
        every object. Both OIDs and comments can be viewed with the
        <command>\lo_list</command> command.
-->
上の応答は、指定したラージオブジェクトがオブジェクトID 152801として受け付けられたことを示します。
今後この新規作成されたラージオブジェクトにアクセスする場合に、この番号が使用できます。
可読性を高めるために、常に全てのオブジェクトに人間がわかるようなコメントを関連付けることが推奨されます。
<command>\lo_list</command>コマンドではOIDとコメントの両方が表示されます。
        </para>

        <para>
<!--
        Note that this command is subtly different from the server-side
        <function>lo_import</function> because it acts as the local user
        on the local file system, rather than the server's user and file
        system.
-->
このコマンドは、ローカルなユーザによってローカルなファイルシステムに対して動作します。一方、サーバ側の<function>lo_import</function>は、サーバのユーザによってサーバ上のファイルシステムに対して動作します。
このコマンドとサーバ側の<function>lo_import</function>は、この点で微妙に異なっています。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\lo_list</literal></term>
        <listitem>
        <para>
<!--
        Shows a list of all <productname>PostgreSQL</productname>
        large objects currently stored in the database,
        along with any comments provided for them.
-->
現在データベースに保存されている全ての<productname>PostgreSQL</productname>ラージオブジェクトの一覧を、そのオブジェクトに付けられたコメントと一緒に表示します。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\lo_unlink <replaceable class="parameter">loid</replaceable></literal></term>

        <listitem>
        <para>
<!--
        Deletes the large object with <acronym>OID</acronym>
        <replaceable class="parameter">loid</replaceable> from the
        database.
-->
<acronym>OID</acronym>が<replaceable class="parameter">loid</replaceable>であるラージオブジェクトをデータベースから削除します。
        </para>

        <tip>
        <para>
<!--
        Use <command>\lo_list</command> to find out the large object's
        <acronym>OID</acronym>.
-->
ラージオブジェクトの<acronym>OID</acronym>を確認するには、<command>\lo_list</command>を使用してください。
        </para>
        </tip>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\o</literal> [ {<replaceable class="parameter">filename</replaceable> | <literal>|</literal><replaceable class="parameter">command</replaceable>} ]</term>

        <listitem>
        <para>
<!--
        Saves future query results to the file <replaceable
        class="parameter">filename</replaceable> or pipes future results
        into a separate Unix shell to execute <replaceable
        class="parameter">command</replaceable>. If no arguments are
        specified, the query output will be reset to the standard output.
-->
以降の問い合わせの結果を、<replaceable class="parameter">filename</replaceable>で指定されたファイルに保存するか、または、別のUnixシェルに渡して<replaceable class="parameter">command</replaceable>を実行します。
引数がない場合、問い合わせの出力はリセットされて標準出力になります。
        </para>

<!--
        <para><quote>Query results</quote> includes all tables, command
        responses, and notices obtained from the database server, as
        well as output of various backslash commands that query the
        database (such as <command>\d</command>), but not error
        messages.
-->
<para><quote>問い合わせの結果</quote>には、全てのテーブル、コマンドの応答、データベースサーバからの注意メッセージだけでなく、データベースに問い合わせを行う（<command>\d</command>のような）各種バックスラッシュコマンドの出力が含まれます。ただし、エラーメッセージは含まれません。
        </para>

        <tip>
        <para>
<!--
        To intersperse text output in between query results, use
        <command>\qecho</command>.
-->
問い合わせの結果の間にテキストを挿入するには、<command>\qecho</command>を使用してください。
        </para>
        </tip>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\p</literal></term>
        <listitem>
        <para>
<!--
        Print the current query buffer to the standard output.
-->
現在の問い合わせバッファを標準出力に書き出します。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\password [ <replaceable class="parameter">username</replaceable> ]</literal></term>
        <listitem>
        <para>
<!--
        Changes the password of the specified user (by default, the current
        user).  This command prompts for the new password, encrypts it, and
        sends it to the server as an <command>ALTER ROLE</> command.  This
        makes sure that the new password does not appear in cleartext in the
        command history, the server log, or elsewhere.
-->
指定したユーザ（デフォルトは現在のユーザ）のパスワードを変更します。
このコマンドは、新しいパスワードを促し、暗号化して、それを<command>ALTER ROLE</>コマンドとしてサーバに送信します。
これによりコマンド履歴やサーバログなどどこにも新しいパスワードが平文では残りません。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\prompt [ <replaceable class="parameter">text</replaceable> ] <replaceable class="parameter">name</replaceable></literal></term>
        <listitem>
        <para>
<!--
         Prompts the user to supply text, which is assigned to the variable
         <replaceable class="parameter">name</>.
         An optional prompt string, <replaceable
         class="parameter">text</>, can be specified.  (For multiword
         prompts, surround the text with single quotes.)
-->
変数<replaceable class="parameter">name</>に代入するテキストを入力するようにユーザを促します。
プロンプト<replaceable class="parameter">text</>をオプションで指定することができます。
（複数の単語をプロンプトで使用する場合はそのテキストを単一引用符でくくってください。）
        </para>

        <para>
<!--
         By default, <literal>\prompt</> uses the terminal for input and
         output.  However, if the <option>-f</> command line switch was
         used, <literal>\prompt</> uses standard input and standard output.
-->
デフォルトでは<literal>\prompt</>は入出力に端末を使用します。
しかし、<option>-f</>コマンドラインスイッチが使用されている場合、<literal>\prompt</>は標準入力、標準出力を使用します。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\pset [ <replaceable class="parameter">option</replaceable> [ <replaceable class="parameter">value</replaceable> ] ]</literal></term>

        <listitem>
        <para>
<!--
        This command sets options affecting the output of query result tables.
        <replaceable class="parameter">option</replaceable>
        indicates which option is to be set. The semantics of
        <replaceable class="parameter">value</replaceable> vary depending
        on the selected option.  For some options, omitting <replaceable
        class="parameter">value</replaceable> causes the option to be toggled
        or unset, as described under the particular option.  If no such
        behavior is mentioned, then omitting
        <replaceable class="parameter">value</replaceable> just results in
        the current setting being displayed.
-->
このコマンドは問い合わせ結果のテーブル出力に影響するオプションを設定します。
<replaceable class="parameter">option</replaceable>には、どのオプションを設定するのかを記述します。
<replaceable class="parameter">value</replaceable>の意味は選択したオプションにより変わります。
以下のオプション別の説明の通り、オプションの中には<replaceable class="parameter">value</replaceable>を省略することでトグルや設定解除を行うものがあります。
こうした動作の記載がなければ、<replaceable class="parameter">value</replaceable>を省略すると、単に現在の設定値が表示されることになります。
        </para>

        <para>
<!--
        <command>\pset</command> without any arguments displays the current status
        of all printing options.
-->
何も引数をつけずに<command>\pset</command>を実行すると、すべての表示オプションの現在の状態を表示します。
        </para>

        <para>
<!--
        Adjustable printing options are:
-->
以下は、表示の調整に関するオプションです。
        <variablelist>
          <varlistentry>
          <term><literal>border</literal></term>
          <listitem>
          <para>
<!--
          The <replaceable class="parameter">value</replaceable> must be a
          number. In general, the higher
          the number the more borders and lines the tables will have,
          but this depends on the particular format. In
          <acronym>HTML</acronym> format, this will translate directly
          into the <literal>border=...</literal> attribute; in the
          other formats only values 0 (no border), 1 (internal dividing lines),
          and 2 (table frame) make sense.
          <literal>latex</literal> and <literal>latex-longtable</literal>
          also support a <literal>border</literal> value of 3 which adds
          a dividing line between each row.
-->
<replaceable class="parameter">value</replaceable>は数値でなければなりません。
基本的には、この数字が大きくなればなるほど、表示するテーブルが持つ境界線は増えますが、具体的にはそれぞれの出力形式に依存しています。
<acronym>HTML</acronym>書式では、この値は直接<literal>border=...</literal>属性に反映されます。
他の書式の場合は、0（境界線なし）、1（内側の境界線）、2（テーブル枠）という3つの数値のみ有効です。
<literal>latex</literal>および<literal>latex-longtable</literal>も各行の間に境界線を付ける、3という値の<literal>border</literal>をサポートします。
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>columns</literal></term>
          <listitem>
          <para>
<!--
          Sets the target width for the <literal>wrapped</> format, and also
          the width limit for determining whether output is wide enough to
          require the pager or switch to the vertical display in expanded auto
          mode.
          Zero (the default) causes the target width to be controlled by the
          environment variable <envar>COLUMNS</>, or the detected screen width
          if <envar>COLUMNS</> is not set.
          In addition, if <literal>columns</> is zero then the
          <literal>wrapped</> format only affects screen output.
          If <literal>columns</> is nonzero then file and pipe output is
          wrapped to that width as well.
-->
<literal>wrapped</>書式の対象幅を設定し、そして、ページャを必要とする、拡張自動モードにおける縦表示への切替えに十分な幅で出力するかどうかを決定する幅制限を設定します。
ゼロ（デフォルト）では、環境変数<envar>COLUMNS</>、もし<envar>COLUMNS</>が設定されていなければ、検出したスクリーンの幅、により対象幅が制御されます。
さらに<literal>columns</>がゼロの場合、<literal>wrapped</>書式はスクリーン出力にのみ影響を与えることになります。
<literal>columns</>が非ゼロの場合は、ファイルやパイプへの出力も同様に折り返されます。
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
<!--
          <term><literal>expanded</literal> (or <literal>x</literal>)</term>
-->
          <term><literal>expanded</literal> (または<literal>x</literal>)</term>
          <listitem>
          <para>
<!--
          If <replaceable class="parameter">value</replaceable> is specified it
          must be either <literal>on</literal> or <literal>off</literal>, which
          will enable or disable expanded mode, or <literal>auto</literal>.
          If <replaceable class="parameter">value</replaceable> is omitted the
          command toggles between the on and off settings.  When expanded mode
          is enabled, query results are displayed in two columns, with the
          column name on the left and the data on the right. This mode is
          useful if the data wouldn't fit on the screen in the
          normal <quote>horizontal</quote> mode.  In the auto setting, the
          expanded mode is used whenever the query output is wider than the
          screen, otherwise the regular mode is used.  The auto setting is only
          effective in the aligned and wrapped formats.  In other formats, it
          always behaves as if the expanded mode is off.
-->
<replaceable class="parameter">value</replaceable>を指定する場合は、拡張(expanded)モードを有効または無効にする<literal>on</literal>または<literal>off</literal>、あるいは<literal>auto</literal>のいずれかでなければなりません。
<replaceable class="parameter">value</replaceable>を省略した場合、このコマンドは通常モードと拡張モードの設定をトグルします。
拡張モードを有効にした場合、問い合わせ結果は左に列名、右にデータという2つの列で出力されます。
このモードは、データが通常の<quote>水平(horizontal)</quote>モードによる画面表示に適していない場合に有用です。
自動(auto)設定の場合、問い合わせの出力が画面幅より広ければ拡張モードが使用され、そうでなければ通常モードが使用されます。
自動設定は位置揃え書式または折り返し書式でのみ有効です。
この他の書式では、常に拡張モードが無効の場合と同様に動作します。
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>fieldsep</literal></term>
          <listitem>
          <para>
<!--
          Specifies the field separator to be used in unaligned output
          format. That way one can create, for example, tab- or
          comma-separated output, which other programs might prefer. To
          set a tab as field separator, type <literal>\pset fieldsep
          '\t'</literal>. The default field separator is
          <literal>'|'</literal> (a vertical bar).
-->
位置揃えなしの出力書式で使用されるフィールド区切り文字を指定します。
これにより、例えばタブ区切り、カンマ区切りといった他プログラムに要求される形式を作成することができます。
タブをフィールド区切り文字として使用するには、<literal>\pset fieldsep '\t'</literal>と入力します。
デフォルトのフィールド区切り文字は<literal>'|'</literal>（縦棒）です。
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>fieldsep_zero</literal></term>
          <listitem>
          <para>
<!--
          Sets the field separator to use in unaligned output format to a zero
          byte.
-->
位置揃えなしの出力書式で使用されるフィールド区切り文字をゼロバイトに指定します。
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>footer</literal></term>
          <listitem>
          <para>
<!--
          If <replaceable class="parameter">value</replaceable> is specified
          it must be either <literal>on</literal> or <literal>off</literal>
          which will enable or disable display of the table footer
          (the <literal>(<replaceable>n</> rows)</literal> count).
          If <replaceable class="parameter">value</replaceable> is omitted the
          command toggles footer display on or off.
-->
<replaceable class="parameter">value</replaceable>を指定する場合、それぞれテーブルフッタの表示(<literal>(<replaceable>n</> rows)</literal>数)を有効にする<literal>on</literal>または無効にする<literal>off</literal>のいずれかでなければなりません。
<replaceable class="parameter">value</replaceable>を省略した場合、このコマンドはフッタの表示、非表示をトグルします。
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>format</literal></term>
          <listitem>
          <para>
<!--
          Sets the output format to one of <literal>unaligned</literal>,
          <literal>aligned</literal>, <literal>wrapped</literal>,
          <literal>html</literal>,
          <literal>latex</literal> (uses <literal>tabular</literal>),
          <literal>latex-longtable</literal>, or
          <literal>troff-ms</literal>.
          Unique abbreviations are allowed.  (That would mean one letter
          is enough.)
-->
出力形式を<literal>unaligned</literal>、<literal>aligned</literal>、<literal>wrapped</literal>、<literal>html</literal>、<literal>latex</literal> (<literal>tabular</literal>を使用)、<literal>latex-longtable</literal>または<literal>troff-ms</literal>.のいずれかに設定します。
一意に判別できる範囲で省略が可能です
（つまり、1文字でも十分であるということです）。
          </para>

<!--
          <para><literal>unaligned</> format writes all columns of a row on one
          line, separated by the currently active field separator. This
          is useful for creating output that might be intended to be read
          in by other programs (for example, tab-separated or comma-separated
          format).
-->
<para><literal>unaligned</>書式は、表示行の1行に1つの行の全列を、現在有効なフィールド区切り文字で区切って書き出します。
これは他のプログラムに読み込ませることを目的とした出力(例えばタブ区切りやカンマ区切り書式)を生成する場合に有用です。
          </para>

<!--
          <para><literal>aligned</literal> format is the standard, human-readable,
          nicely formatted text output;  this is the default.
-->
<para><literal>aligned</literal>書式は、標準的で人間が読みやすいように、美しく整形されたテキスト出力です。
これがデフォルトです。
          </para>

<!--
          <para><literal>wrapped</> format is like <literal>aligned</> but wraps
          wide data values across lines to make the output fit in the target
          column width.  The target width is determined as described under
          the <literal>columns</> option.  Note that <application>psql</> will
          not attempt to wrap column header titles; therefore,
          <literal>wrapped</> format behaves the same as <literal>aligned</>
          if the total width needed for column headers exceeds the target.
-->
<para><literal>wrapped</>書式は<literal>aligned</>と似ていますが、幅の広いデータ値を複数行に折り返して対象の列幅に合うように出力します。
対象の幅は<literal>columns</>オプションの項に記述されているように決定されます。
<application>psql</>は列ヘッダタイトルを折り返さないことに注意して下さい。
このため<literal>wrapped</>書式は列ヘッダに必要とする幅全体が対象より長い場合、<literal>aligned</>と動作が同じになります。
          </para>

          <para>
<!--
          The <literal>html</>, <literal>latex</>,
          <literal>latex-longtable</literal>, and <literal>troff-ms</>
          formats put out tables that are intended to
          be included in documents using the respective mark-up
          language. They are not complete documents! This might not be
          necessary in <acronym>HTML</acronym>, but in
          <application>LaTeX</application> you must have a complete
          document wrapper.  <literal>latex-longtable</literal>
          also requires the <application>LaTeX</application>
          <literal>longtable</literal> and <literal>booktabs</> packages.
-->
<literal>html</>、<literal>latex</>、<literal>latex-longtable</literal>および<literal>troff-ms</>書式は対応するマークアップ言語を使用する文書内に含めることを目的とした表を出力します。
出力自体は完全な文書ではありません。
<acronym>HTML</acronym>では必要性がないかもしれませんが、<application>LaTeX</application>では完全な文書ラッパを持たせなければなりません。
<literal>latex-longtable</literal>では<application>LaTeX</application>の<literal>longtable</literal>および<literal>booktabs</>パッケージも必要です。
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>linestyle</literal></term>
          <listitem>
          <para>
<!--
          Sets the border line drawing style to one
          of <literal>ascii</literal>, <literal>old-ascii</literal>
          or <literal>unicode</literal>.
          Unique abbreviations are allowed.  (That would mean one
          letter is enough.)
          The default setting is <literal>ascii</>.
          This option only affects the <literal>aligned</> and
          <literal>wrapped</> output formats.
-->
境界線の表示形式を<literal>ascii</literal>、<literal>old-ascii</literal>または<literal>unicode</literal>のいずれかに設定します。
一意になれば省略形が許されます。（つまり一文字で十分であることを意味します。）
デフォルトの設定は<literal>ascii</>です。
このオプションは<literal>aligned</>および<literal>wrapped</>出力書式のみで有効です。
          </para>

<!--
          <para><literal>ascii</literal> style uses plain <acronym>ASCII</acronym>
          characters.  Newlines in data are shown using
          a <literal>+</literal> symbol in the right-hand margin.
          When the <literal>wrapped</literal> format wraps data from
          one line to the next without a newline character, a dot
          (<literal>.</>) is shown in the right-hand margin of the first line,
          and again in the left-hand margin of the following line.
-->
<para><literal>ascii</literal>形式は通常の<acronym>ASCII</acronym>を使用します。
データ内の改行は右側余白に<literal>+</literal>を使用して表します。
<literal>wrapped</literal>書式で、改行文字のない行が2行にまたがるときは、先頭行の右側余白にドット(.)を表示し、次の行の左側余白にもドットを表示します。
          </para>

<!--
          <para><literal>old-ascii</literal> style uses plain <acronym>ASCII</>
          characters, using the formatting style used
          in <productname>PostgreSQL</productname> 8.4 and earlier.
          Newlines in data are shown using a <literal>:</literal>
          symbol in place of the left-hand column separator.
          When the data is wrapped from one line
          to the next without a newline character, a <literal>;</>
          symbol is used in place of the left-hand column separator.
-->
<para><literal>old-ascii</literal>形式は通常の<acronym>ASCII</>文字を使用して、<productname>PostgreSQL</productname> 8.4以前で使用されていた方法で整形します。
データ内の改行は列区切りの左側に<literal>:</literal>記号を使用して表します。
データを改行文字なしに折り返す際には、列区切りの左側に<literal>;</>記号を使用して表します。
          </para>

<!--
          <para><literal>unicode</literal> style uses Unicode box-drawing characters.
          Newlines in data are shown using a carriage return symbol
          in the right-hand margin.  When the data is wrapped from one line
          to the next without a newline character, an ellipsis symbol
          is shown in the right-hand margin of the first line, and
          again in the left-hand margin of the following line.
-->
<para><literal>unicode</literal>形式はUnicode矩形描画文字を使用します。
データ内の改行は右側の余白に復帰記号を使用して表します。
データを改行文字なしに折り返す際には、省略記号を先頭行の右側余白に表示し、次の行の左側余白にも表示します。
          </para>

          <para>
<!--
          When the <literal>border</> setting is greater than zero,
          this option also determines the characters
          with which the border lines are drawn.
          Plain <acronym>ASCII</acronym> characters work everywhere, but
          Unicode characters look nicer on displays that recognize them.
-->
<literal>border</>設定がゼロより大きい場合、このオプションはまた、境界線を描画する文字も決定します。
通常の<acronym>ASCII</acronym>文字はどのような場合でも動作しますが、Unicode文字が表示できる環境では、その方が見た目が良くなります。
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>null</literal></term>
          <listitem>
          <para>
<!--
          Sets the string to be printed in place of a null value.
          The default is to print nothing, which can easily be mistaken for
          an empty string. For example, one might prefer <literal>\pset null
          '(null)'</literal>.
-->
null値の代わりに表示する文字列を設定します。
デフォルトでは何も表示しません。
そのため、よく空の文字列と間違うことがあります。
例えば<literal>\pset null '(null)'</literal>とする人もいます。
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>numericlocale</literal></term>
          <listitem>
          <para>
<!-- 
          If <replaceable class="parameter">value</replaceable> is specified
          it must be either <literal>on</literal> or <literal>off</literal>
          which will enable or disable display of a locale-specific character
          to separate groups of digits to the left of the decimal marker.
          If <replaceable class="parameter">value</replaceable> is omitted the
          command toggles between regular and locale-specific numeric output.
-->
<replaceable class="parameter">value</replaceable>を指定する場合、それぞれ10進数マーカの左に桁のくくりを分離するロケール固有の文字を表示する<literal>on</literal>または表示しない<literal>off</literal>のいずれかでなければなりません。
<replaceable class="parameter">value</replaceable>を省略した場合、このコマンドは通常出力かロケール固有の数値出力かをトグルします。
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>pager</literal></term>
          <listitem>
          <para>
<!--
          Controls use of a pager program for query and <application>psql</>
          help output. If the environment variable <envar>PAGER</envar>
          is set, the output is piped to the specified program.
          Otherwise a platform-dependent default (such as
          <filename>more</filename>) is used.
-->
問い合わせおよび<application>psql</>のヘルプを出力する際の、ページャプログラムの使用を制御します。
環境変数<envar>PAGER</envar>が設定されている場合、出力は指定したプログラムにパイプで渡されます。 
<envar>PAGER</envar>が設定されていない場合は、プラットフォーム依存のデフォルト（<filename>more</filename>など）が使用されます。
          </para>

          <para>
<!--
          When the <literal>pager</> option is <literal>off</>, the pager
          program is not used. When the <literal>pager</> option is
          <literal>on</>, the pager is used when appropriate, i.e., when the
          output is to a terminal and will not fit on the screen.
          The <literal>pager</> option can also be set to <literal>always</>,
          which causes the pager to be used for all terminal output regardless
          of whether it fits on the screen.  <literal>\pset pager</>
          without a <replaceable class="parameter">value</replaceable>
          toggles pager use on and off.
-->
<literal>pager</>オプションが<literal>off</>の場合、ページャプログラムは使用されません。
<literal>pager</>オプションが<literal>on</>の場合、ページャは適切な場合、つまり出力先が端末であり、その画面に収まらない場合に使用されます。
また<literal>pager</>オプションは<literal>always</>に設定することもできます。
こうすると画面に収まるかどうかに関わらずすべての端末出力でページャが使用されます。
<replaceable class="parameter">value</replaceable>を指定しない<literal>\pset pager</>はページャの使用をトグルします。
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>recordsep</literal></term>
          <listitem>
          <para>
<!--
          Specifies the record (line) separator to use in unaligned
          output format. The default is a newline character.
-->
位置揃えなしの出力書式で使用されるレコード（行）の区切り文字を指定します。
デフォルトは改行文字です。
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>recordsep_zero</literal></term>
          <listitem>
          <para>
<!--
          Sets the record separator to use in unaligned output format to a zero
          byte.
-->
位置揃えなしの出力書式で使用されるレコードの区切り文字をゼロバイトに指定します。
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
<!--
          <term><literal>tableattr</literal> (or <literal>T</literal>)</term>
-->
          <term><literal>tableattr</literal> (または <literal>T</literal>)</term>
          <listitem>
          <para>
<!--
          In <acronym>HTML</acronym> format, this specifies attributes
          to be placed inside the <sgmltag>table</sgmltag> tag.  This
          could for example be <literal>cellpadding</literal> or
          <literal>bgcolor</literal>. Note that you probably don't want
          to specify <literal>border</literal> here, as that is already
          taken care of by <literal>\pset border</literal>.
          If no
          <replaceable class="parameter">value</replaceable> is given,
          the table attributes are unset.
-->
<literal>html</>出力書式では、これは<sgmltag>table</sgmltag>タグ内に記述する属性を指定します。
これを使用して、例えば、<literal>cellpadding</literal>や<literal>bgcolor</literal>を指定することができます。
<literal>border</literal>属性は既に<literal>\pset border</literal>によって処理されているので、このコマンドで<literal>border</literal>を指定する必要はないでしょう。
<replaceable class="parameter">value</replaceable>の指定がない場合、テーブル属性の設定は解除されます。
          </para>
          <para>
<!--
          In <literal>latex-longtable</literal> format, this controls
          the proportional width of each column containing a left-aligned
          data type.  It is specified as a whitespace-separated list of values,
          e.g. <literal>'0.2 0.2 0.6'</>.  Unspecified output columns
          use the last specified value.
-->
<literal>latex-longtable</literal>書式では、これは
左揃えされたデータ型を含む各列の幅の比率を制御します。
空白文字で区切られた値のリスト、例えば<literal>'0.2 0.2 0.6'</>として指定します。
指定がない出力列は最後に指定された値を使用します。
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>title</literal></term>
          <listitem>
          <para>
<!--
          Sets the table title for any subsequently printed tables. This
          can be used to give your output descriptive tags. If no
          <replaceable class="parameter">value</replaceable> is given,
          the title is unset.
-->
今後表示される全てのテーブル用にテーブルタイトルを設定します。
これは出力に説明のためのタグを付けたい場合に有用です。
<replaceable class="parameter">value</replaceable>がない場合、タイトルの設定が解除されます。
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>tuples_only</literal> (or <literal>t</literal>)</term>
          <listitem>
          <para>
<!--
          If <replaceable class="parameter">value</replaceable> is specified
          it must be either <literal>on</literal> or <literal>off</literal>
          which will enable or disable tuples-only mode.
          If <replaceable class="parameter">value</replaceable> is omitted the
          command toggles between regular and tuples-only output.
          Regular output includes extra information such
          as column headers, titles, and various footers. In tuples-only
          mode, only actual table data is shown.
-->
<replaceable class="parameter">value</replaceable>を指定する場合、それぞれタプルのみの表示を有効にする、<literal>on</literal>または無効にする<literal>off</literal>のいずれかでなければなりません。
<replaceable class="parameter">value</replaceable>を省略した場合、このコマンドはタプルのみの表示と通常表示をトグルします。
通常表示では列のヘッダ、タイトル、各種フッタなどのその他の情報が追加されます。
タプルのみのモードでは、テーブルの実データのみが表示されます。
          </para>
          </listitem>
          </varlistentry>
        </variablelist>
        </para>

        <para>
<!--
        Illustrations of how these different formats look can be seen in
        the <xref linkend="APP-PSQL-examples"
        endterm="APP-PSQL-examples-title"> section.
-->
<xref linkend="APP-PSQL-examples" endterm="APP-PSQL-examples-title">節に、これらの書式がどのように見えるかを示した図があります。
        </para>

        <tip>
        <para>
<!--
        There are various shortcut commands for <command>\pset</command>. See
        <command>\a</command>, <command>\C</command>, <command>\H</command>,
        <command>\t</command>, <command>\T</command>, and <command>\x</command>.
-->
<command>\pset</command>には各種のショートカットコマンドがあります。
<command>\a</command>、<command>\C</command>、<command>\H</command>、<command>\t</command>、<command>\T</command>、<command>\x</command>を参照してください。
        </para>
        </tip>

        </listitem>
      </varlistentry>


      <varlistentry>
<!--
        <term><literal>\q</literal> or <literal>\quit</literal></term>
-->
        <term><literal>\q</literal>または<literal>\quit</literal></term>
        <listitem>
        <para>
<!--
        Quits the <application>psql</application> program.
        In a script file, only execution of that script is terminated.
-->
<application>psql</application>プログラムを終了します。
スクリプトファイルでは、そのスクリプトの実行のみが終了します。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\qecho <replaceable class="parameter">text</replaceable> [ ... ] </literal></term>
        <listitem>
        <para>
<!--
        This command is identical to <command>\echo</command> except
        that the output will be written to the query output channel, as
        set by <command>\o</command>.
-->
このコマンドは、<command>\echo</command>と同じです。
ただし、出力が<command>\o</command>により設定された問い合わせ出力チャネルに書き出される点が異なります。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\r</literal></term>
        <listitem>
        <para>
<!--
        Resets (clears) the query buffer.
-->
問い合わせバッファをリセット（クリア）します。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\s [ <replaceable class="parameter">filename</replaceable> ]</literal></term>
        <listitem>
        <para>
<!--
        Print <application>psql</application>'s command line history
        to <replaceable class="parameter">filename</replaceable>.
        If <replaceable class="parameter">filename</replaceable> is omitted,
        the history is written to the standard output (using the pager if
        appropriate).  This command is not available
        if <application>psql</application> was built
        without <application>Readline</application> support.
-->
<application>psql</application>のコマンドラインの履歴を<replaceable class="parameter">filename</replaceable>に出力します。
<replaceable class="parameter">filename</replaceable>が省略された場合、履歴は標準出力に書き出されます(適切であればページャを使います)。
このコマンドは、<application>psql</application>が<application>Readline</application>サポートなしの状態でビルドされた場合は利用できません。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\set [ <replaceable class="parameter">name</replaceable> [ <replaceable class="parameter">value</replaceable> [ ... ] ] ]</literal></term>

        <listitem>
        <para>
<!--
        Sets the <application>psql</> variable <replaceable
        class="parameter">name</replaceable> to <replaceable
        class="parameter">value</replaceable>, or if more than one value
        is given, to the concatenation of all of them. If only one
        argument is given, the variable is set with an empty value. To
        unset a variable, use the <command>\unset</command> command.
-->
<application>psql</>の変数<replaceable class="parameter">name</replaceable>を<replaceable class="parameter">value</replaceable>、または複数のvalueが与えられた場合はそれらを連結したものに設定します。
第一引数しか指定されない場合は、変数に空の値を設定されます。
変数を未設定とするには、<command>\unset</command>コマンドを使用してください。
        </para>


<!--
        <para><command>\set</> without any arguments displays the names and values
        of all currently-set <application>psql</> variables.
-->
        <para>
引数をまったく取らない<command>\set</>は、現在設定されている<application>psql</>変数すべての名前と値を表示します。
        </para>

        <para>
<!--
        Valid variable names can contain letters, digits, and
        underscores. See the section <xref
        linkend="APP-PSQL-variables"
        endterm="APP-PSQL-variables-title"> below for details.
        Variable names are case-sensitive.
-->
変数名には、文字、数字、アンダースコアを使用することができます。
詳細は、後述の<xref linkend="APP-PSQL-variables" endterm="APP-PSQL-variables-title">を参照してください。
変数名は大文字小文字を区別します。
        </para>

        <para>
<!--
        Although you are welcome to set any variable to anything you
        want, <application>psql</application> treats several variables
        as special. They are documented in the section about variables.
-->
必要ならば任意の変数に任意の値を設定できますが、<application>psql</application>はいくつかの変数を特別なものとして扱っています。
これらについては変数に関する節にて説明します。
        </para>

        <note>
        <para>
<!--
        This command is unrelated to the <acronym>SQL</acronym>
        command <xref linkend="SQL-SET">.
-->
このコマンドは<acronym>SQL</acronym>の<xref linkend="SQL-SET">コマンドとは関係ありません。
        </para>
        </note>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\setenv [ <replaceable class="parameter">name</replaceable> [ <replaceable class="parameter">value</replaceable> ] ]</literal></term>

        <listitem>
        <para>
<!--
        Sets the environment variable <replaceable
        class="parameter">name</replaceable> to <replaceable
        class="parameter">value</replaceable>, or if the
        <replaceable class="parameter">value</replaceable> is
        not supplied, unsets the environment variable. Example:
-->
環境変数<replaceable class="parameter">name</replaceable>を<replaceable class="parameter">value</replaceable>に設定します。
<replaceable class="parameter">value</replaceable>が与えられない場合は、その環境変数を未設定状態にします。
以下に例を示します。
<programlisting>
testdb=&gt; <userinput>\setenv PAGER less</userinput>
testdb=&gt; <userinput>\setenv LESS -imx4F</userinput>
</programlisting></para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\sf[+] <replaceable class="parameter">function_description</> </literal></term>

        <listitem>
        <para>
<!--
         This command fetches and shows the definition of the named function,
         in the form of a <command>CREATE OR REPLACE FUNCTION</> command.
         The definition is printed to the current query output channel,
         as set by <command>\o</command>.
-->
このコマンドは、<command>CREATE OR REPLACE FUNCTION</>コマンドの形式で、指定された関数の定義を抽出し表示します。
この定義は、<command>\o</command>で設定された現在の問い合わせ出力チャネルに出力されます。
        </para>

        <para>
<!--
         The target function can be specified by name alone, or by name
         and arguments, for example <literal>foo(integer, text)</>.
         The argument types must be given if there is more
         than one function of the same name.
-->
対象の関数は、名前だけまたは、例えば<literal>foo(integer, text)</>のように名前と引数で指定することができます。
同じ名前の関数が複数存在する場合は、引数の型を指定しなければなりません。
        </para>

        <para>
<!--
         If <literal>+</literal> is appended to the command name, then the
         output lines are numbered, with the first line of the function body
         being line 1.
-->
コマンド名に<literal>+</literal>を付けると、出力行に関数本体の先頭行を1行目と数える行番号が付けられます。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\t</literal></term>
        <listitem>
        <para>
<!--
        Toggles the display of output column name headings and row count
        footer. This command is equivalent to <literal>\pset
        tuples_only</literal> and is provided for convenience.
-->
出力列名ヘッダと行数フッタの表示を切り替えます。
このコマンドは<literal>\pset tuples_only</literal>と同じで、簡便性のために用意されています。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\T <replaceable class="parameter">table_options</replaceable></literal></term>
        <listitem>
        <para>
<!--
        Specifies attributes to be placed within the
        <sgmltag>table</sgmltag> tag in <acronym>HTML</acronym>
        output format. This command is equivalent to <literal>\pset
        tableattr <replaceable
        class="parameter">table_options</replaceable></literal>.
-->
<acronym>HTML</acronym>出力書式における<sgmltag>table</sgmltag>タグ内部に記述する属性を指定します。
このコマンドは<literal>\pset tableattr <replaceable class="parameter">table_options</replaceable></literal>と同じ効力を持ちます。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
       <term><literal>\timing [ <replaceable class="parameter">on</replaceable> | <replaceable class="parameter">off</replaceable> ]</literal></term>
        <listitem>
        <para>
<!--
         Without parameter, toggles a display of how long each SQL statement
         takes, in milliseconds.  With parameter, sets same.
-->
パラメータがない場合、各SQL文にかかる時間（ミリ秒単位）の表示の有無を切り替えます。
パラメータがある場合、指定した通りに設定します。
        </para>
       </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\unset <replaceable class="parameter">name</replaceable></literal></term>

        <listitem>
        <para>
<!--
        Unsets (deletes) the <application>psql</> variable <replaceable
        class="parameter">name</replaceable>.
-->
<application>psql</>変数<replaceable class="parameter">name</replaceable>を未設定状態にします（削除します）。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\w</literal> <replaceable class="parameter">filename</replaceable></term>
        <term><literal>\w</literal> <literal>|</><replaceable class="parameter">command</replaceable></term>
        <listitem>
        <para>
<!--
        Outputs the current query buffer to the file <replaceable
        class="parameter">filename</replaceable> or pipes it to the Unix
        command <replaceable class="parameter">command</replaceable>.
-->
現在の問い合わせバッファを、<replaceable class="parameter">filename</replaceable>ファイルに出力するか、もしくは、Unixコマンド<replaceable class="parameter">command</replaceable>にパイプで渡します。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\watch [ <replaceable class="parameter">seconds</replaceable> ]</literal></term>
        <listitem>
        <para>
<!--
        Repeatedly execute the current query buffer (like <literal>\g</>)
        until interrupted or the query fails.  Wait the specified number of
        seconds (default 2) between executions.
-->
中断するか問い合わせが失敗するまで、現在の問い合わせバッファを繰り返し（<literal>\g</>と同じように）実行します。
実行の間に指定秒数(デフォルトは2)の休止が入ります。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\x [ <replaceable class="parameter">on</replaceable> | <replaceable class="parameter">off</replaceable> | <replaceable class="parameter">auto</replaceable> ]</literal></term>
        <listitem>
        <para>
<!--
        Sets or toggles expanded table formatting mode. As such it is equivalent to
        <literal>\pset expanded</literal>.
-->
拡張テーブル形式モードを設定またはトグルします。
従って、このコマンドは<literal>\pset expanded</literal>と同じ効力を持ちます。
       </para>
       </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\z [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
<!--
        Lists tables, views and sequences with their
        associated access privileges.
        If a <replaceable class="parameter">pattern</replaceable> is
        specified, only tables, views and sequences whose names match the
        pattern are listed.
-->
テーブル、ビュー、シーケンスを、関連付けられているアクセス権限とともに一覧表示します。 
<replaceable class="parameter">pattern</replaceable>を指定すると、パターンに名前がマッチするテーブル、ビュー、シーケンスのみが表示されます。
        </para>

        <para>
<!--
        This is an alias for <command>\dp</command> (<quote>display
        privileges</quote>).
-->
これは<command>\dp</command>（<quote>権限の表示（display privileges）</quote>）の別名です。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\! [ <replaceable class="parameter">command</replaceable> ]</literal></term>
        <listitem>
        <para>
<!--
        Escapes to a separate Unix shell or executes the Unix command
        <replaceable class="parameter">command</replaceable>. The
        arguments are not further interpreted; the shell will see them
        as-is.  In particular, the variable substitution rules and
        backslash escapes do not apply.
-->
別のシェルを起動するか、もしくは、Unixのコマンド<replaceable class="parameter">command</replaceable>を実行します。
引数はこれ以上解釈されず、そのままシェルに渡されます。
特に、変数置換規則やバックスラッシュエスケープは適用されません。
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\?</literal></term>
        <listitem>
        <para>
<!--
        Shows help information about the backslash commands.
-->
バックスラッシュ（<quote>\</quote>）コマンドに関するヘルプ情報を表示します。
        </para>
        </listitem>
      </varlistentry>

    </variablelist>
  </para>

  <refsect3 id="APP-PSQL-patterns">
<!--
   <title id="APP-PSQL-patterns-title">Patterns</title>
-->
   <title id="APP-PSQL-patterns-title">パターン</title>

   <indexterm>
<!--
    <primary>patterns</primary>
    <secondary>in psql and pg_dump</secondary>
-->
    <primary>パターン</primary>
    <secondary>psqlおよびpg_dumpにおける</secondary>
   </indexterm>

  <para>
<!--
   The various <literal>\d</> commands accept a <replaceable
   class="parameter">pattern</replaceable> parameter to specify the
   object name(s) to be displayed.  In the simplest case, a pattern
   is just the exact name of the object.  The characters within a
   pattern are normally folded to lower case, just as in SQL names;
   for example, <literal>\dt FOO</> will display the table named
   <literal>foo</>.  As in SQL names, placing double quotes around
   a pattern stops folding to lower case.  Should you need to include
   an actual double quote character in a pattern, write it as a pair
   of double quotes within a double-quote sequence; again this is in
   accord with the rules for SQL quoted identifiers.  For example,
   <literal>\dt "FOO""BAR"</> will display the table named
   <literal>FOO"BAR</> (not <literal>foo"bar</>).  Unlike the normal
   rules for SQL names, you can put double quotes around just part
   of a pattern, for instance <literal>\dt FOO"FOO"BAR</> will display
   the table named <literal>fooFOObar</>.
-->
各種<literal>\d</>コマンドでは、<replaceable class="parameter">pattern</replaceable>パラメータを渡して、表示するオブジェクト名を指定することができます。
最も単純な場合では、パターンが正確にオブジェクト名に一致します。
パターン内の文字は、SQLの名前と同様、通常小文字に変換されます。
例えば<literal>\dt FOO</>は<literal>foo</>という名前のテーブルを表示します。
SQLの名前と同様、パターンを二重引用符で括ることで小文字への変換が取り止められます。
二重引用符自体をパターン内に含めなければならない場合、二重引用符で括った文字列の中で二重引用符を二重に記載してください。
これもSQLの引用符付き識別子の規則に従ったものです。
例えば、<literal>\dt "FOO""BAR"</>は<literal>FOO"BAR</>という名前のテーブルを表示します（<literal>foo"bar</>ではありません）。
SQLの名前と異なり、パターンの一部を二重引用符で括ることができます。
例えば、<literal>\dt FOO"FOO"BAR</>は<literal>fooFOObar</>という名前のテーブルを表示します。
  </para>

  <para>
<!--
   Whenever the <replaceable class="parameter">pattern</replaceable> parameter
   is omitted completely, the <literal>\d</> commands display all objects
   that are visible in the current schema search path &mdash; this is
   equivalent to using <literal>*</> as the pattern.
   (An object is said to be <firstterm>visible</> if its
   containing schema is in the search path and no object of the same
   kind and name appears earlier in the search path. This is equivalent to the
   statement that the object can be referenced by name without explicit
   schema qualification.)
   To see all objects in the database regardless of visibility,
   use <literal>*.*</> as the pattern.
-->
<replaceable class="parameter">pattern</replaceable>パラメータが完全に省略されている場合、<literal>\d</>コマンドは現在のスキーマ検索パス内で可視のオブジェクトを全て表示します。
これは<literal>*</>というパターンを使用することと同じです。
(オブジェクトを含むスキーマが検索パス上にあり、同じ種類かつ同じ名前のオブジェクトが検索パス上それより前に存在しない場合、そのオブジェクトは可視であるといいます。
これは明示的なスキーマ修飾がない名前でオブジェクトを参照できるということと同じです。)
可視か否かに関わらずデータベース内の全てのオブジェクトを表示するには、<literal>*.*</>というパターンを使用します。
  </para>

  <para>
<!--
   Within a pattern, <literal>*</> matches any sequence of characters
   (including no characters) and <literal>?</> matches any single character.
   (This notation is comparable to Unix shell file name patterns.)
   For example, <literal>\dt int*</> displays tables whose names
   begin with <literal>int</>.  But within double quotes, <literal>*</>
   and <literal>?</> lose these special meanings and are just matched
   literally.
-->
パターン内部では、<literal>*</>は（0文字を含む）任意の文字の並びにマッチし、<literal>?</>は任意の1文字にマッチします。
（この記法はUnixシェルのファイル名パターンと似ています。）
例えば、<literal>\dt int*</>は、<literal>int</>から始まる名前を持つテーブルを表示します。
しかし、二重引用符の中では、<literal>*</>と<literal>?</>はその特別な意味を失い、文字そのものにマッチします。
  </para>

  <para>
<!--
   A pattern that contains a dot (<literal>.</>) is interpreted as a schema
   name pattern followed by an object name pattern.  For example,
   <literal>\dt foo*.*bar*</> displays all tables whose table name
   includes <literal>bar</> that are in schemas whose schema name
   starts with <literal>foo</>.  When no dot appears, then the pattern
   matches only objects that are visible in the current schema search path.
   Again, a dot within double quotes loses its special meaning and is matched
   literally.
-->
ドット(<literal>.</>)を含むパターンは、スキーマ名にオブジェクト名が続くパターンとして解釈されます。
例えば、<literal>\dt foo*.*bar*</>は、スキーマ名が<literal>foo</>で始まるスキーマ内のテーブル名が<literal>bar</>を含むテーブルを全て表示します。
ドットがない場合、パターンは現行のスキーマ検索パス内で可視的なオブジェクトのみにマッチします。
ここでも、二重引用符で括られた文字列内のドットは特別な意味を失い、文字そのものにマッチすることになります。
  </para>

  <para>
<!--
   Advanced users can use regular-expression notations such as character
   classes, for example <literal>[0-9]</> to match any digit.  All regular
   expression special characters work as specified in
   <xref linkend="functions-posix-regexp">, except for <literal>.</> which
   is taken as a separator as mentioned above, <literal>*</> which is
   translated to the regular-expression notation <literal>.*</>,
   <literal>?</> which is translated to <literal>.</>, and
   <literal>$</> which is matched literally.  You can emulate
   these pattern characters at need by writing
   <literal>?</> for <literal>.</>,
   <literal>(<replaceable class="parameter">R</replaceable>+|)</literal> for
   <literal><replaceable class="parameter">R</replaceable>*</literal>, or
   <literal>(<replaceable class="parameter">R</replaceable>|)</literal> for
   <literal><replaceable class="parameter">R</replaceable>?</literal>.
   <literal>$</> is not needed as a regular-expression character since
   the pattern must match the whole name, unlike the usual
   interpretation of regular expressions (in other words, <literal>$</>
   is automatically appended to your pattern).  Write <literal>*</> at the
   beginning and/or end if you don't wish the pattern to be anchored.
   Note that within double quotes, all regular expression special characters
   lose their special meanings and are matched literally.  Also, the regular
   expression special characters are matched literally in operator name
   patterns (i.e., the argument of <literal>\do</>).
-->
上級者は文字クラス(例えば任意の数にマッチする<literal>[0-9]</>)などの正規表現を使用することができます。
ほぼすべての正規表現の特殊文字は<xref linkend="functions-posix-regexp">の規定通りに動作しますが、上述のように<literal>.</>が区切り文字となる点、<literal>*</>は正規表現の<literal>.*</>になる点、<literal>?</>が<literal>.</>になる点、<literal>$</>がそのまま扱われる点は例外です。
<literal>.</>の代わりに<literal>?</>と、<literal><replaceable class="parameter">R</replaceable>*</literal>の代わりに<literal>(<replaceable class="parameter">R</replaceable>+|)</literal>と、<literal><replaceable class="parameter">R</replaceable>?</literal>の代わりに<literal>(<replaceable class="parameter">R</replaceable>|)</literal>と記述することで、これらのパターン文字を模擬することができます。
通常の正規表現の解釈と異なり、パターンは常に名前全体にマッチするため、<literal>$</>を正規表現文字として扱う必要はありません。
（言い替えると、<literal>$</>は自動的にパターンに追加されます。）
パターンの適用位置を決められない場合は、<literal>*</>を先頭や末尾に記載してください。
二重引用符の内側では、正規表現の特殊文字はその意味を失い、文字そのものにマッチすることになる点に注意してください。
また、正規表現の特殊文字は、演算子名のパターン（つまり<literal>\do</>の引数）では文字そのものにマッチします。
  </para>
  </refsect3>
 </refsect2>

 <refsect2>
<!--
  <title>Advanced Features</title>
-->
<title>高度な機能</title>

   <refsect3 id="APP-PSQL-variables">
<!--
    <title id="APP-PSQL-variables-title">Variables</title>
-->
    <title id="APP-PSQL-variables-title">変数</title>

    <para>
<!--
    <application>psql</application> provides variable substitution
    features similar to common Unix command shells.
    Variables are simply name/value pairs, where the value
    can be any string of any length.  The name must consist of letters
    (including non-Latin letters), digits, and underscores.
-->
<application>psql</application>は一般的なUnixコマンドシェルに似た変数の置換機能を提供します。
変数とは名前と値の組み合わせです。
値として任意の長さの任意の文字列を使用できます。
名前は文字(非ラテン文字を含む)、数字、アンダースコアから構成されなければなりません。
    </para>

    <para>
<!--
    To set a variable, use the <application>psql</application> meta-command
    <command>\set</command>.  For example,
-->
変数を設定するには、<application>psql</application>の<command>\set</command>メタコマンドを以下のように使用します。
<programlisting>
testdb=&gt; <userinput>\set foo bar</userinput>
</programlisting>
<!--
    sets the variable <literal>foo</literal> to the value
    <literal>bar</literal>. To retrieve the content of the variable, precede
    the name with a colon, for example:
-->
この例では、変数<literal>foo</literal>を<literal>bar</literal>という値に設定しています。
変数の内容を取り出すには、以下のように変数名の前にコロンを付けます。

<programlisting>
testdb=&gt; <userinput>\echo :foo</userinput>
bar
</programlisting>
<!--
    This works in both regular SQL commands and meta-commands; there is
    more detail in <xref linkend="APP-PSQL-interpolation"
    endterm="APP-PSQL-interpolation-title">, below.
-->
これは通常のSQLコマンド内とメタコマンド内の両方で動作します。
後述の<xref linkend="APP-PSQL-interpolation" endterm="APP-PSQL-interpolation-title">で詳しく説明します。
    </para>

    <para>
<!--
    If you call <command>\set</command> without a second argument, the
    variable is set, with an empty string as value. To unset (i.e., delete)
    a variable, use the command <command>\unset</command>.  To show the
    values of all variables, call <command>\set</command> without any argument.
-->
第二引数なしで<command>\set</command>を呼び出すと、空文字列を値として持つ変数が設定されます。
変数を未設定状態にする(つまり削除する)ためには、<command>\unset</command>コマンドを使用してください。
すべての変数の値を表示するためには、引数なしで<command>\set</command>を呼び出してください。
    </para>

    <note>
    <para>
<!--
    The arguments of <command>\set</command> are subject to the same
    substitution rules as with other commands. Thus you can construct
    interesting references such as <literal>\set :foo
    'something'</literal> and get <quote>soft links</quote> or
    <quote>variable variables</quote> of <productname>Perl</productname>
    or <productname><acronym>PHP</acronym></productname> fame,
    respectively. Unfortunately (or fortunately?), there is no way to do
    anything useful with these constructs. On the other hand,
    <literal>\set bar :foo</literal> is a perfectly valid way to copy a
    variable.
-->
<command>\set</command>の引数は他のコマンドと同じ置換規則に従います。
このため、<literal>\set :foo 'something'</literal>のような参照を作成して、<productname>Perl</productname>における<quote>ソフトリンク</quote>や<productname><acronym>PHP</acronym></productname>における<quote>可変変数</quote>に当たるものを得られます。
しかし、残念ながら（あるいは幸運にも）、このような構成をうまく使用する方法はありません。
一方、<literal>\set bar :foo</literal>のようにして変数をコピーするのは、完全に有効な方法です。
    </para>
    </note>

    <para>
<!--
    A number of these variables are treated specially
    by <application>psql</application>. They represent certain option
    settings that can be changed at run time by altering the value of
    the variable, or in some cases represent changeable state of
    <application>psql</application>. Although
    you can use these variables for other purposes, this is not
    recommended, as the program behavior might grow really strange
    really quickly. By convention, all specially treated variables' names
    consist of all upper-case ASCII letters (and possibly digits and
    underscores). To ensure maximum compatibility in the future, avoid
    using such variable names for your own purposes. A list of all specially
    treated variables follows.
-->
これらの変数の多くは、<application>psql</application>に特別扱いされています。
これらは、変数の値を変更することにより、実行時に変更可能なオプションの設定を表現します。
また<application>psql</application>の変更可能な状態を表現しているものもあります。
これらの変数を別の目的で使用することもできますが、即座にプログラムの動作がおかしくなる可能性があるため、推奨されません。
慣習上、特別視される変数の名前はすべてASCII大文字（と数字とアンダースコア）からなります。
将来的な互換性を最大限考慮するために、自分で作成した変数にはこのような変数名を使用しないでください。
以下に特別に取り扱われる変数の一覧を示します。
   </para>

    <variablelist>
      <varlistentry>
      <term>
       <varname>AUTOCOMMIT</varname>
       <indexterm>
        <primary>autocommit</primary>
        <secondary>psql</secondary>
       </indexterm>
      </term>
        <listitem>
        <para>
<!--
        When <literal>on</> (the default), each SQL command is automatically
        committed upon successful completion.  To postpone commit in this
        mode, you must enter a <command>BEGIN</> or <command>START
        TRANSACTION</> SQL command.  When <literal>off</> or unset, SQL
        commands are not committed until you explicitly issue
        <command>COMMIT</> or <command>END</>.  The autocommit-off
        mode works by issuing an implicit <command>BEGIN</> for you, just
        before any command that is not already in a transaction block and
        is not itself a <command>BEGIN</> or other transaction-control
        command, nor a command that cannot be executed inside a transaction
        block (such as <command>VACUUM</>).
-->
この変数の値が<literal>on</>の場合（これがデフォルトです）、各SQLコマンドの実行が成功すると、自動的にコミットされます。
コミットを延期するには、<command>BEGIN</>もしくはSQLの<command>START TRANSACTION</>コマンドを入力する必要があります。
値が<literal>off</>もしくは未設定の場合、明示的に<command>COMMIT</>もしくは<command>END</>を発行するまで、SQLコマンドはコミットされません。
自動コミット無効モードでは、トランザクションブロック以外でコマンドが発行されると、そのコマンドを実行する前に、自動的に<command>BEGIN</>コマンドが発行されます（ただし、そのコマンド自体が<command>BEGIN</>コマンドやその他のトランザクション制御コマンドである場合、トランザクションブロック内で実行することができないコマンド（<command>VACUUM</>など）である場合は除きます）

        </para>

        <note>
        <para>
<!--
         In autocommit-off mode, you must explicitly abandon any failed
         transaction by entering <command>ABORT</> or <command>ROLLBACK</>.
         Also keep in mind that if you exit the session
         without committing, your work will be lost.
-->
自動コミット無効モードでは、<command>ABORT</>や<command>ROLLBACK</>を発行して、明示的に失敗したトランザクションを放棄しなければなりません。
また、コミットせずにセッションを終了した場合は、作業が失われてしまうので注意してください。
        </para>
        </note>

        <note>
        <para>
<!--
         The autocommit-on mode is <productname>PostgreSQL</>'s traditional
         behavior, but autocommit-off is closer to the SQL spec.  If you
         prefer autocommit-off, you might wish to set it in the system-wide
         <filename>psqlrc</filename> file or your
         <filename>~/.psqlrc</filename> file.
-->
<productname>PostgreSQL</>は、伝統的に自動コミット有効モードで動作していましたが、自動コミット無効モードの方がよりSQLの仕様に近いものです。
自動コミット無効モードは、システム全体に対する<filename>psqlrc</filename>ファイル、もしくは、個人用の<filename>.psqlrc</filename>ファイルで設定すれば実現できます。
        </para>
        </note>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>COMP_KEYWORD_CASE</varname></term>
        <listitem>
        <para>
<!--
        Determines which letter case to use when completing an SQL key word.
        If set to <literal>lower</literal> or <literal>upper</literal>, the
        completed word will be in lower or upper case, respectively.  If set
        to <literal>preserve-lower</literal>
        or <literal>preserve-upper</literal> (the default), the completed word
        will be in the case of the word already entered, but words being
        completed without anything entered will be in lower or upper case,
        respectively.
-->
SQLキーワードを補完する時に大文字小文字のどちらを使用するかを決定します。
<literal>lower</literal>または<literal>upper</literal>が設定された場合、補完された単語はそれぞれ小文字または大文字になります。
<literal>preserve-lower</literal>または<literal>preserve-upper</literal>（デフォルト）が設定された場合、
補完された単語は入力済みの文字の大文字小文字を引き継ぎますが、何も入力されていない場合はそれぞれ小文字または大文字に補完されます。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>DBNAME</varname></term>
        <listitem>
        <para>
<!--
        The name of the database you are currently connected to. This is
        set every time you connect to a database (including program
        start-up), but can be unset.
-->
現在接続しているデータベース名です。
この変数は（プログラム起動時も含め）データベースに接続する度に設定されますが、これを未設定にすることもできます。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>ECHO</varname></term>
        <listitem>
        <para>
<!--
        If set to <literal>all</literal>, all lines
        entered from the keyboard or from a script are written to the standard output
        before they are parsed or executed. To select this behavior on program
        start-up, use the switch <option>-a</option>. If set to
        <literal>queries</literal>,
        <application>psql</application> merely prints all queries as
        they are sent to the server. The switch for this is
        <option>-e</option>.
-->
<literal>all</literal>に設定された場合、キーボード、もしくは、スクリプトからの取得された全ての行は、解析/実行の前に標準出力に書き出されます。
この動作をプログラム起動時に設定するには、<option>-a</option>スイッチを使用してください。
<literal>queries</literal>に設定された場合、<application>psql</application>はサーバに送信された問い合わせのみを表示します。
これに対応するオプションは<option>-e</option>です。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>ECHO_HIDDEN</varname></term>
        <listitem>
        <para>
<!--
        When this variable is set and a backslash command queries the
        database, the query is first shown. This way you can study the
        <productname>PostgreSQL</productname> internals and provide
        similar functionality in your own programs. (To select this behavior
        on program start-up, use the switch <option>-E</option>.)  If you set
        the variable to the value <literal>noexec</literal>, the queries are
        just shown but are not actually sent to the server and executed.
-->
この変数が設定されている場合、バックスラッシュコマンドがデータベースに問い合わせを行う時、最初にその問い合わせが表示されます。
これにより、<productname>PostgreSQL</productname>内部動作について調べたり、自作プログラム内で同様の関数機能を用意したりすることが可能になります
（この動作をプログラム起動時に選択するには<option>-E</option>スイッチを使用してください）。
この変数を<literal>noexec</literal>という値に設定した場合、問い合わせは実際にサーバに送信、実行されずに、単に表示されるだけになります。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>ENCODING</varname></term>
        <listitem>
        <para>
<!--
        The current client character set encoding.
-->
現在のクライアント側の文字セット符号化方式です。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>FETCH_COUNT</varname></term>
        <listitem>
        <para>
<!--
        If this variable is set to an integer value &gt; 0,
        the results of <command>SELECT</command> queries are fetched
        and displayed in groups of that many rows, rather than the
        default behavior of collecting the entire result set before
        display.  Therefore only a
        limited amount of memory is used, regardless of the size of
        the result set.  Settings of 100 to 1000 are commonly used
        when enabling this feature.
        Keep in mind that when using this feature, a query might
        fail after having already displayed some rows.
-->
この変数が0より大きな整数値に設定されている場合、<command>SELECT</command>問い合わせの結果は、指定した行数の集合として取り出され、表示されます。
デフォルトの動作では、表示する前にすべての結果が取り出されます。
したがって、結果セットの大きさに関係なくメモリの使用量が限定されます。
この機能を有効とする場合に100から1000までの値がよく使用されます。
この機能を使用する際には、既に一部の行が表示されている場合、問い合わせが失敗する可能性があることに注意してください。
        </para>
        <tip>
        <para>
<!--
        Although you can use any output format with this feature,
        the default <literal>aligned</> format tends to look bad
        because each group of <varname>FETCH_COUNT</varname> rows
        will be formatted separately, leading to varying column
        widths across the row groups.  The other output formats work better.
-->
任意の出力書式でこの機能を使用することができますが、デフォルトの<literal>aligned</>書式は適していません。
<varname>FETCH_COUNT</varname>行のグループそれぞれが別々に整形されてしまい、行のグループによって列幅が異なることになるためです。
他の出力書式は適切に動作します。
        </para>
        </tip>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>HISTCONTROL</varname></term>
        <listitem>
        <para>
<!--
         If this variable is set to <literal>ignorespace</literal>,
         lines which begin with a space are not entered into the history
         list. If set to a value of <literal>ignoredups</literal>, lines
         matching the previous history line are not entered. A value of
         <literal>ignoreboth</literal> combines the two options. If
         unset, or if set to any other value than those above, all lines
         read in interactive mode are saved on the history list.
-->
この変数を<literal>ignorespace</literal>に設定した場合、空白文字から始まる行は履歴リストには入りません。
<literal>ignoredups</literal>に設定した場合、直前の履歴と同じ行は履歴リストに入りません。
<literal>ignoreboth</literal>に設定した場合は、上記の2つを組み合わせたものになります。
この変数を設定しない場合、または上記以外の値を設定する場合は、対話モードで読まれる全ての行が履歴リストに保存されます。
        </para>
        <note>
        <para>
<!--
        This feature was shamelessly plagiarized from
        <application>Bash</application>.
-->
この機能は<application>Bash</application>の機能を真似たものです。
        </para>
        </note>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>HISTFILE</varname></term>
        <listitem>
        <para>
<!--
        The file name that will be used to store the history list. The default
        value is <filename>~/.psql_history</filename>.  For example, putting:
-->
履歴を格納するために使用されるファイルの名前です。
デフォルトは<filename>~/.psql_history</filename>です。
例えば、<filename>~/.psqlrc</filename>で以下を記述すると、<application>psql</application>はデータベース毎に分けて履歴を管理します。
<programlisting>
\set HISTFILE ~/.psql_history- :DBNAME
</programlisting>
<!--
        in <filename>~/.psqlrc</filename> will cause
        <application>psql</application> to maintain a separate history for
        each database.
-->
        </para>
        <note>
        <para>
<!--
        This feature was shamelessly plagiarized from
        <application>Bash</application>.
-->
この機能は<application>Bash</application>の機能を真似たものです。
        </para>
        </note>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>HISTSIZE</varname></term>
        <listitem>
        <para>
<!--
        The number of commands to store in the command history. The
        default value is 500.
-->
コマンド履歴に保存するコマンド数です。
デフォルト値は500です。
        </para>
        <note>
        <para>
<!--
        This feature was shamelessly plagiarized from
        <application>Bash</application>.
-->
この機能は<application>Bash</application>の機能を真似たものです。
        </para>
        </note>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>HOST</varname></term>
        <listitem>
        <para>
<!--
        The database server host you are currently connected to. This is
        set every time you connect to a database (including program
        start-up), but can be unset.
-->
接続中のデータベースサーバホストです。
この変数は（プログラム起動時も含め）データベースに接続する度に設定されますが、未設定にすることもできます。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>IGNOREEOF</varname></term>
        <listitem>
        <para>
<!--
         If unset, sending an <acronym>EOF</> character (usually
         <keycombo action="simul"><keycap>Control</><keycap>D</></>)
         to an interactive session of <application>psql</application>
         will terminate the application. If set to a numeric value,
         that many <acronym>EOF</> characters are ignored before the
         application terminates.  If the variable is set but has no
         numeric value, the default is 10.
-->
この変数を未設定にすると、対話式セッションに<acronym>EOF</>文字（通常<keycombo action="simul"><keycap>Control</><keycap>D</></>）が送信された時、<application>psql</application>が終了します。
数値を設定すると、指定された数だけ、送信された<acronym>EOF</>文字を無視してから終了します。
数値以外を設定した場合は、デフォルトの10になります。
        </para>
        <note>
        <para>
<!--
        This feature was shamelessly plagiarized from
        <application>Bash</application>.
-->
この機能は<application>Bash</application>の機能を真似たものです。
        </para>
        </note>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>LASTOID</varname></term>
        <listitem>
        <para>
<!--
        The value of the last affected OID, as returned from an
        <command>INSERT</command> or <command>\lo_import</command>
        command. This variable is only guaranteed to be valid until
        after the result of the next <acronym>SQL</acronym> command has
        been displayed.
-->
<command>INSERT</command>や<command>\lo_insert</command>コマンドによって返された、最後に影響を受けたOIDの値です。
この変数は、次の<acronym>SQL</acronym>コマンドの結果が表示されるまでの間のみ保証されています。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
      <term>
       <varname>ON_ERROR_ROLLBACK</varname>
       <indexterm>
        <primary>rollback</primary>
        <secondary>psql</secondary>
       </indexterm>
      </term>
        <listitem>
        <para>
<!--
        When <literal>on</>, if a statement in a transaction block
        generates an error, the error is ignored and the transaction
        continues. When <literal>interactive</>, such errors are only
        ignored in interactive sessions, and not when reading script
        files. When <literal>off</> (the default), a statement in a
        transaction block that generates an error aborts the entire
        transaction. The on_error_rollback-on mode works by issuing an
        implicit <command>SAVEPOINT</> for you, just before each command
        that is in a transaction block, and rolls back to the savepoint
        on error.
-->
<literal>on</>の場合、トランザクションブロック内である文がエラーとなった時に、そのエラーは無視され、トランザクションは継続します。
<literal>interactive</>の場合、対話式セッション内の場合にのみエラーは無視されます。スクリプトファイルを読み込んでいる場合は無視されません。
<literal>off</>（デフォルト）の場合、トランザクションブロック内の文がエラーになると、トランザクション全体をアボートします。
ON_ERROR_ROLLBACKがonという状態は、トランザクションブロック内で各コマンドの実行直前に暗黙的な<command>SAVEPOINT</>を行い、エラーが起きた時にこのセーブポイントにロールバックすることで実現されています。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>ON_ERROR_STOP</varname></term>
        <listitem>
        <para>
<!--
        By default, command processing continues after an error.  When this
        variable is set, it will instead stop immediately.  In interactive mode,
        <application>psql</application> will return to the command prompt;
        otherwise, <application>psql</application> will exit, returning
        error code 3 to distinguish this case from fatal error
        conditions, which are reported using error code 1.  In either case,
        any currently running scripts (the top-level script, if any, and any
        other scripts which it may have in invoked) will be terminated
        immediately.  If the top-level command string contained multiple SQL
        commands, processing will stop with the current command.
-->
デフォルトではエラーの後もコマンド処理は続行されます。
この変数が設定されると、代わりに即座に停止します。
対話モードでは<application>psql</application>はコマンドプロンプトに戻ります。
これ以外では<application>psql</application>は終了し、エラーコード1を返す致命的エラー条件と区別できるように、エラーコード3を返します。
どちらの場合でも、現在実行中のスクリプト（トップレベルのスクリプト、もしあれば関連性を持つ他のスクリプトすべて）は即座に終了します。
トップレベルのコマンド文字列が複数のSQLコマンドを含む場合、その時点のコマンドで処理は終了します。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>PORT</varname></term>
        <listitem>
        <para>
<!--
        The database server port to which you are currently connected.
        This is set every time you connect to a database (including
        program start-up), but can be unset.
-->
接続中のデータベースサーバのポートです。
この変数は（プログラム起動時も含め）データベースに接続する度に設定されますが、未設定にすることもできます。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>PROMPT1</varname></term>
        <term><varname>PROMPT2</varname></term>
        <term><varname>PROMPT3</varname></term>
        <listitem>
        <para>
<!--
        These specify what the prompts <application>psql</application>
        issues should look like. See <xref
        linkend="APP-PSQL-prompting"
        endterm="APP-PSQL-prompting-title"> below.
-->
これらの変数は、<application>psql</application>が発行するプロンプトの見た目を指定します。
後述の<xref linkend="APP-PSQL-prompting" endterm="APP-PSQL-prompting-title">を参照してください。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>QUIET</varname></term>
        <listitem>
        <para>
<!--
        This variable is equivalent to the command line option
        <option>-q</option>. It is probably not too useful in
        interactive mode.
-->
この変数はコマンドラインオプション<option>-q</option>と同じ効力を持ちます。
対話式モードではあまり役立ちません。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>SINGLELINE</varname></term>
        <listitem>
        <para>
<!--
        This variable is equivalent to the command line option
        <option>-S</option>.
-->
この変数はコマンドラインオプション<option>-S</option>と同じ効力を持ちます。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>SINGLESTEP</varname></term>
        <listitem>
        <para>
<!--
        This variable is equivalent to the command line option
        <option>-s</option>.
-->
この変数はコマンドラインオプション<option>-s</option>と同じ効力を持ちます。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>USER</varname></term>
        <listitem>
        <para>
<!--
        The database user you are currently connected as. This is set
        every time you connect to a database (including program
        start-up), but can be unset.
-->
接続中のデータベースユーザです。
この変数は（プログラム起動時も含め）データベースに接続する度に設定されますが、未設定にすることもできます。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>VERBOSITY</varname></term>
        <listitem>
        <para>
<!--
        This variable can be set to the values <literal>default</>,
        <literal>verbose</>, or <literal>terse</> to control the verbosity
        of error reports.
-->
この変数を<literal>default</>、<literal>verbose</>、<literal>terse</>のいずれかに設定することで、エラー報告の冗長性を制御できます。
        </para>
        </listitem>
      </varlistentry>

    </variablelist>

   </refsect3>

   <refsect3 id="APP-PSQL-interpolation">
<!--
    <title id="APP-PSQL-interpolation-title"><acronym>SQL</acronym> Interpolation</title>
-->
    <title id="APP-PSQL-interpolation-title"><acronym>SQL</acronym>差し替え</title>

    <para>
<!--
    A key feature of <application>psql</application>
    variables is that you can substitute (<quote>interpolate</quote>)
    them into regular <acronym>SQL</acronym> statements, as well as the
    arguments of meta-commands.  Furthermore,
    <application>psql</application> provides facilities for
    ensuring that variable values used as SQL literals and identifiers are
    properly quoted.  The syntax for interpolating a value without
    any quoting is to prepend the variable name with a colon
    (<literal>:</literal>).  For example,
-->
<application>psql</application>の変数には、通常の<acronym>SQL</acronym>文やメタコマンドの引数の中で使用（<quote>差し替え：interpolate</quote>）できるという重要な機能があります。
さらに<application>psql</application>は、
SQLリテラルと識別子として使用される変数の値が適切に引用符付けされていることを保証する機能を提供します。
引用符付けをまったく行わずに差し替えるための構文は、変数名の前にコロン(<literal>:</literal>)を付けることです。
以下に例を示します。
<programlisting>
testdb=&gt; <userinput>\set foo 'my_table'</userinput>
testdb=&gt; <userinput>SELECT * FROM :foo;</userinput>
</programlisting>
<!--
    would query the table <literal>my_table</literal>. Note that this
    may be unsafe: the value of the variable is copied literally, so it can
    contain unbalanced quotes, or even backslash commands. You must make sure
    that it makes sense where you put it.
-->
この例では、問い合わせは<literal>my_table</literal>テーブルに対して行われます。
これが安全ではない場合があることに注意して下さい。
変数の値はそのままコピーされるので、対応のとれていない引用符やバックスラッシュコマンドさえも含めることができます。
挿入した場所で変数が展開された時に、確実に正しい意味になるようにしなければなりません。
    </para>

    <para>
<!--
    When a value is to be used as an SQL literal or identifier, it is
    safest to arrange for it to be quoted.  To quote the value of
    a variable as an SQL literal, write a colon followed by the variable
    name in single quotes.  To quote the value as an SQL identifier, write
    a colon followed by the variable name in double quotes.
    These constructs deal correctly with quotes and other special
    characters embedded within the variable value.
    The previous example would be more safely written this way:
-->
値がSQLリテラルや識別子内で使用される場合、それが引用符付けされるように調整することがもっとも安全です。
SQLリテラルとして変数値を引用符付けするためには、コロンの後に変数名を単一引用符で括って記述してください。
SQL識別子として値を引用符付けするためには、コロン後に変数名を二重引用符で括って記述してください。
これらの式は正しく引用符と変数値内に埋め込まれた特殊文字を扱います。
前の例は以下のように記述することでより安全になります。
<programlisting>
testdb=&gt; <userinput>\set foo 'my_table'</userinput>
testdb=&gt; <userinput>SELECT * FROM :"foo";</userinput>
</programlisting>
    </para>

    <para>
<!--
    Variable interpolation will not be performed within quoted
    <acronym>SQL</acronym> literals and identifiers.  Therefore, a
    construction such as <literal>':foo'</> doesn't work to produce a quoted
    literal from a variable's value (and it would be unsafe if it did work,
    since it wouldn't correctly handle quotes embedded in the value).
-->
変数差し替えは、引用符付けされた<acronym>SQL</acronym>リテラルと識別子の中では行われません。
したがって<literal>':foo'</>などの式は、変数の値から引用符付けしたリテラルを生成するようには動作しません。
(値の中に埋め込まれた引用符を正しく取り扱えませんので、もし動作したとしたら安全ではありません。)
    </para>

    <para>
<!--
    One example use of this mechanism is to
    copy the contents of a file into a table column.
    First load the file into a variable and then interpolate the variable's
    value as a quoted string:
-->
この機能の有効な利用方法の例は、ファイルの内容をテーブル列にコピーする場合も利用することができます。
その際は、ファイルをまず変数に読み込み、引用符付けした文字列として変数名を差し替えます。
<programlisting>
testdb=&gt; <userinput>\set content `cat my_file.txt`</userinput>
testdb=&gt; <userinput>INSERT INTO my_table VALUES (:'content');</userinput>
</programlisting>
<!--
    If you are using non-standard-conforming strings then you'll also need
    to double backslashes.  This is a bit tricky:
-->
標準非準拠の文字列を使用しているのであれば、さらにバックスラッシュを二重にしなければなりません。
以下のように多少ややこしくなります。
<programlisting>
testdb=&gt; <userinput>\set content '''' `sed -e "s/'/''/g" -e 's/\\/\\\\/g' &lt; my_file.txt` ''''</userinput>
</programlisting>
<!--
    (Note that this still won't work if <filename>my_file.txt</filename> contains NUL bytes.
    <application>psql</application> does not support embedded NUL bytes in variable values.)
-->
(<filename>my_file.txt</filename>にNULバイトが含まれている場合、これはうまく動作しないことに注意してください。
<application>psql</application>は変数値内に埋め込まれたNULバイトをサポートしません。)
    </para>

    <para>
<!--
    Since colons can legally appear in SQL commands, an apparent attempt
    at interpolation (that is, <literal>:name</literal>,
    <literal>:'name'</literal>, or <literal>:"name"</literal>) is not
    replaced unless the named variable is currently set. In any case, you
    can escape a colon with a backslash to protect it from substitution.
-->
コロン（:）もSQLコマンド内で正規に使用できますので、
指定した変数が現在設定されていない場合、差し替え時の見かけの置換(<literal>:name</literal>、<literal>:'name'</literal>、<literal>:"name"</literal>)は行われません。
コロンをバックスラッシュでエスケープすれば、常に差し替えから保護することができます。
    </para>

    <para>
<!--
    The colon syntax for variables is standard <acronym>SQL</acronym> for
    embedded query languages, such as <application>ECPG</application>.
    The colon syntaxes for array slices and type casts are
    <productname>PostgreSQL</productname> extensions, which can sometimes
    conflict with the standard usage.  The colon-quote syntax for escaping a
    variable's value as an SQL literal or identifier is a
    <application>psql</application> extension.
-->
変数用のコロン構文は、<application>ECPG</application>のような組み込みの問い合わせ言語用の標準<acronym>SQL</acronym>として規定されています。
配列の一部の切り出し、および型キャスト用のコロン構文は<productname>PostgreSQL</productname>の拡張であり、標準での使用方法と競合することがあります。
SQLリテラルまたは識別子として変数の値をエスケープさせる引用符付きコロン構文は<application>psql</application>の拡張です。
    </para>

   </refsect3>

   <refsect3 id="APP-PSQL-prompting">
<!--
    <title id="APP-PSQL-prompting-title">Prompting</title>
-->
<title id="APP-PSQL-prompting-title">プロンプト</title>

    <para>
<!--
    The prompts <application>psql</application> issues can be customized
    to your preference. The three variables <varname>PROMPT1</varname>,
    <varname>PROMPT2</varname>, and <varname>PROMPT3</varname> contain strings
    and special escape sequences that describe the appearance of the
    prompt. Prompt 1 is the normal prompt that is issued when
    <application>psql</application> requests a new command. Prompt 2 is
    issued when more input is expected during command input because the
    command was not terminated with a semicolon or a quote was not closed.
    Prompt 3 is issued when you run an <acronym>SQL</acronym>
    <command>COPY</command> command and you are expected to type in the
    row values on the terminal.
-->
<application>psql</application>が発行するプロンプトは好みに応じてカスタマイズできます。
<varname>PROMPT1</varname>、<varname>PROMPT2</varname>、<varname>PROMPT3</varname>という3つの変数はプロンプトの表示内容を示す文字列や特別なエスケープシーケンスを持ちます。
プロンプト1は<application>psql</application>が新しいコマンドを受け付ける際に発行される通常のプロンプトです。
プロンプト2はコマンドがセミコロンで終わっていない、または、引用符が閉じていないためにさらにコマンドの入力が要求されている際に発行されます。
プロンプト3は<acronym>SQL</acronym>の<command>COPY</command>コマンドを実行していて、端末上で行の値の入力が要求されている際に発行されます。
    </para>

    <para>
<!--
    The value of the selected prompt variable is printed literally,
    except where a percent sign (<literal>%</literal>) is encountered.
    Depending on the next character, certain other text is substituted
    instead. Defined substitutions are:
-->
選択されたプロンプト変数の値はそのまま文字として表示されます。
ただし、パーセント（<literal>%</literal>）が含まれる場合は例外です。
この場合は、次の文字に従って、特定のテキストに置換されます。
置換対象として定義されているのは次のものです。

    <variablelist>
      <varlistentry>
        <term><literal>%M</literal></term>
        <listitem>
         <para>
<!--
          The full host name (with domain name) of the database server,
          or <literal>[local]</literal> if the connection is over a Unix
          domain socket, or
          <literal>[local:<replaceable>/dir/name</replaceable>]</literal>,
          if the Unix domain socket is not at the compiled in default
          location.
-->
データベースサーバの（ドメイン名付きの）完全なホスト名です。その接続がUnixドメインソケットの場合は<literal>[local]</literal>となります。
ただし、Unixドメインソケットがコンパイル時に設定したデフォルトの場所に存在しない場合は、<literal>[local:<replaceable>/dir/name</replaceable>]</literal>となります。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%m</literal></term>
        <listitem>
         <para>
<!--
          The host name of the database server, truncated at the
          first dot, or <literal>[local]</literal> if the connection is
          over a Unix domain socket.
-->
最初のドット以降を省略したデータベースサーバのホスト名です。その接続がUnixドメインソケットの場合は<literal>[local]</literal>となります。
         </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%&gt;</literal></term>
<!--
        <listitem><para>The port number at which the database server is listening.</para></listitem>
-->
<listitem><para>データベースサーバが監視するポート番号です。</para></listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%n</literal></term>
        <listitem>
         <para>
<!--
          The database session user name.  (The expansion of this
          value might change during a database session as the result
          of the command <command>SET SESSION
          AUTHORIZATION</command>.)
-->
データベースセッションユーザの名前です
（この値の展開結果は、<command>SET SESSION AUTHORIZATION</command>コマンドの実行によってデータベースセッション中に変わることがあります）。
         </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%/</literal></term>
<!--
        <listitem><para>The name of the current database.</para></listitem>
-->
        <listitem><para>接続中のデータベース名です。</para></listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%~</literal></term>
<!--
        <listitem><para>Like <literal>%/</literal>, but the output is <literal>~</literal>
         (tilde) if the database is your default database.</para></listitem>
-->
        <listitem><para>デフォルトデータベースの場合に<literal>~</literal>（チルダ）が出力される点を除いて、<literal>%/</literal>と同じです。</para></listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%#</literal></term>
        <listitem>
         <para>
<!--
          If the session user is a database superuser, then a
          <literal>#</literal>, otherwise a <literal>&gt;</literal>.
          (The expansion of this value might change during a database
          session as the result of the command <command>SET SESSION
          AUTHORIZATION</command>.)
-->
セッションユーザがデータベーススーパーユーザである場合は<literal>#</literal>、それ以外の場合は<literal>&gt;</literal>となります
（この値の展開結果は、<command>SET SESSION AUTHORIZATION</command>コマンドの実行によってデータベースセッション中に変わることがあります）。

         </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%R</literal></term>
        <listitem>
        <para>
<!--
        In prompt 1 normally <literal>=</literal>, but <literal>^</literal> if
        in single-line mode, and <literal>!</literal> if the session is
        disconnected from the database (which can happen if
        <command>\connect</command> fails). In prompt 2 the sequence is
        replaced by <literal>-</literal>, <literal>*</literal>, a single quote,
        a double quote, or a dollar sign, depending on whether
        <application>psql</application> expects more input because the
        command wasn't terminated yet, because you are inside a
        <literal>/* ... */</literal> comment, or because you are inside
        a quoted or dollar-escaped string. In prompt 3 the sequence doesn't
        produce anything.
-->
プロンプト1の場合、通常は<literal>=</literal>、シングル行モードでは<literal>^</literal>、データベースとの接続が切れたセッションでは<literal>!</literal>になります（<command>\connect</command>が失敗した場合に発生します）。
プロンプト2の場合、<literal>-</literal>、<literal>*</literal>、単一引用符、二重引用符、ドル記号に置き換えられます。どの文字に置き換えられるかは、<application>psql</application>が入力を待っている理由（コマンドが終了していない、<literal>/* ... */</literal>によるコメント行の中にいる、引用符やエスケープされたドル記号の中にいる）によって決まります。
プロンプト3の場合、何も表示されません。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%x</literal></term>
        <listitem>
        <para>
<!--
        Transaction status: an empty string when not in a transaction
        block, or <literal>*</> when in a transaction block, or
        <literal>!</> when in a failed transaction block, or <literal>?</>
        when the transaction state is indeterminate (for example, because
        there is no connection).
-->
トランザクションの状態です。
トランザクションブロックの外にいる場合は空文字列に、トランザクションブロックの中にいる場合は<literal>*</>に、失敗したトランザクションブロックの中にいる場合は<literal>!</>に、（接続されていないなど）トランザクションの状態が不定の場合は<literal>?</>になります。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%</literal><replaceable class="parameter">digits</replaceable></term>
        <listitem>
        <para>
<!--
        The character with the indicated octal code is substituted.
-->
指定された8進の数値コードの文字に置換されます。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%:</literal><replaceable class="parameter">name</replaceable><literal>:</literal></term>
        <listitem>
        <para>
<!--
        The value of the <application>psql</application> variable
        <replaceable class="parameter">name</replaceable>. See the
        section <xref linkend="APP-PSQL-variables"
        endterm="APP-PSQL-variables-title"> for details.
-->
<application>psql</application>の変数<replaceable class="parameter">name</replaceable>の値です。 
詳細は<xref linkend="APP-PSQL-variables" endterm="APP-PSQL-variables-title">を参照してください。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%`</literal><replaceable class="parameter">command</replaceable><literal>`</literal></term>
        <listitem>
        <para>
<!--
        The output of <replaceable
        class="parameter">command</replaceable>, similar to ordinary
        <quote>back-tick</quote> substitution.
-->
通常の<quote>逆引用符</quote>による置き換えと同様で、<replaceable class="parameter">command</replaceable>の出力です。
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%[</literal> ... <literal>%]</literal></term>
        <listitem>
         <para>
<!--
         Prompts can contain terminal control characters which, for
         example, change the color, background, or style of the prompt
         text, or change the title of the terminal window. In order for
         the line editing features of <application>Readline</application> to work properly, these
         non-printing control characters must be designated as invisible
         by surrounding them with <literal>%[</literal> and
         <literal>%]</literal>. Multiple pairs of these can occur within
         the prompt.  For example:
-->
プロンプトには端末制御文字を含めることができます。
具体的には、色、背景、プロンプトテキストの様式の変更、端末ウィンドウのタイトルの変更などが指定できます。
<application>Readline</application>の行編集機能を適切に動作させるためには、印字されない制御文字を<literal>%[</literal>と<literal>%]</literal>で囲んで、不可視であることを明示しなければなりません。
この記号の組み合わせはプロンプト内に複数記述することができます。
以下に例を示します。
<programlisting>
testdb=&gt; \set PROMPT1 '%[%033[1;33;40m%]%n@%/%R%[%033[0m%]%# '
</programlisting>
<!--
         results in a boldfaced (<literal>1;</literal>) yellow-on-black
         (<literal>33;40</literal>) prompt on VT100-compatible, color-capable
         terminals.
-->
これにより、VT100互換のカラー端末では、太字フォントで（<literal>1;</literal>）、黒地に黄色の（<literal>33;40</literal>）プロンプトが表示されます。
        </para>
        </listitem>
      </varlistentry>

    </variablelist>

<!--
    To insert a percent sign into your prompt, write
    <literal>%%</literal>. The default prompts are
    <literal>'%/%R%# '</literal> for prompts 1 and 2, and
    <literal>'&gt;&gt; '</literal> for prompt 3.
-->
プロンプトにパーセント記号を入れる場合は、<literal>%%</literal>と記述してください。
デフォルトのプロンプトは、プロンプト1と2が<literal>'%/%R%# '</literal>、プロンプト3が<literal>'&gt;&gt; '</literal>です。
    </para>

    <note>
    <para>
<!--
    This feature was shamelessly plagiarized from
    <application>tcsh</application>.
-->
この機能は<application>tcsh</application>の機能を真似たものです。
    </para>
    </note>

   </refsect3>

   <refsect3>
<!--
    <title>Command-Line Editing</title>
-->
    <title>コマンドライン編集</title>

    <para>
<!--
    <application>psql</application> supports the <application>Readline</application>
    library for convenient line editing and retrieval. The command
    history is automatically saved when <application>psql</application>
    exits and is reloaded when
    <application>psql</application> starts up. Tab-completion is also
    supported, although the completion logic makes no claim to be an
    <acronym>SQL</acronym> parser.  The queries generated by tab-completion
    can also interfere with other SQL commands, e.g. <literal>SET
    TRANSACTION ISOLATION LEVEL</>.
    If for some reason you do not like the tab completion, you
    can turn it off by putting this in a file named
    <filename>.inputrc</filename> in your home directory:
-->
<application>psql</application>は行内編集や繰り返し入力が簡便になるように<application>Readline</application>ライブラリをサポートしています。
コマンド履歴は、<application>psql</application>の終了時に自動的に保存され、<application>psql</application>の起動時に再読み込みされます。
タブによる補完もサポートされていますが、<acronym>SQL</acronym>のパーサとしてコマンドを解釈して判断してくれるわけではありません。
タブによる補完によって生成される問い合わせは他のSQLコマンド、例えば<literal>SET TRANSACTION ISOLATION LEVEL</>と干渉することもあります。
タブによる補完を何らかの事情により使用したくなければ、ホームディレクトリ内の<filename>.inputrc</filename>というファイルに以下のように書き込むことで無効にできます。
<programlisting>
$if psql
set disable-completion on
$endif
</programlisting>
<!--
    (This is not a <application>psql</application> but a
    <application>Readline</application> feature. Read its documentation
    for further details.)
-->
（これは<application>psql</application>の機能ではなく、<application>Readline</application>の機能です。
詳細については<application>Readline</application>のドキュメントを参照してください）。
    </para>
   </refsect3>
  </refsect2>
 </refsect1>


 <refsect1 id="app-psql-environment">
<!--
  <title id="app-psql-environment-title">Environment</title>
-->
  <title id="app-psql-environment-title">環境</title>

  <variablelist>

   <varlistentry>
    <term><envar>COLUMNS</envar></term>

    <listitem>
     <para>
<!--
      If <literal>\pset columns</> is zero, controls the
      width for the <literal>wrapped</> format and width for determining
      if wide output requires the pager or should be switched to the
      vertical format in expanded auto mode.
-->
<literal>\pset columns</>がゼロの場合、<literal>wrapped</>書式の幅、および、幅の広い出力がページャを必要とするかどうかを決める幅を制御します。
また自動拡張モードでは縦書式に切り替えるべきかどうかを制御します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>PAGER</envar></term>

    <listitem>
     <para>
<!--
      If the query results do not fit on the screen, they are piped
      through this command.  Typical values are
      <literal>more</literal> or <literal>less</literal>.  The default
      is platform-dependent.  The use of the pager can be disabled by
      using the <command>\pset</command> command.
-->
問い合わせ結果が画面に入り切らない場合、このコマンドによって結果をパイプします。
一般的に指定される値は、<literal>more</literal>、または<literal>less</literal>です。
デフォルトはプラットフォームによって異なります。
ページャの使用を無効にするには<command>\pset</command>コマンドを使用します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>PGDATABASE</envar></term>
    <term><envar>PGHOST</envar></term>
    <term><envar>PGPORT</envar></term>
    <term><envar>PGUSER</envar></term>

    <listitem>
     <para>
<!--
      Default connection parameters (see <xref linkend="libpq-envars">).
-->
デフォルトの接続パラメータです（<xref linkend="libpq-envars">を参照）。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>PSQL_EDITOR</envar></term>
    <term><envar>EDITOR</envar></term>
    <term><envar>VISUAL</envar></term>

    <listitem>
     <para>
<!--
      Editor used by the <command>\e</command> and
      <command>\ef</command> commands.  The variables are examined in
      the order listed; the first that is set is used.
-->
<command>\e</command>および<command>\ef</command>コマンドで使用されるエディタです。
変数はこの順に検索されます。
つまり設定された最初のものが使用されます。
     </para>

     <para>
<!--
      The built-in default editors are <filename>vi</filename> on Unix
      systems and <filename>notepad.exe</filename> on Windows systems.
-->
組込みのデフォルトエディタは、Unixシステムでは<filename>vi</filename>、Windowsシステムでは<filename>notepad.exe</filename>です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>PSQL_EDITOR_LINENUMBER_ARG</envar></term>

    <listitem>
     <para>
<!--
      When <command>\e</command> or <command>\ef</command> is used
      with a line number argument, this variable specifies the
      command-line argument used to pass the starting line number to
      the user's editor.  For editors such as <productname>Emacs</> or
      <productname>vi</>, this is a plus sign.  Include a trailing
      space in the value of the variable if there needs to be space
      between the option name and the line number.  Examples:
-->
<command>\e</command>または<command>\ef</command>が行番号引数を付けて使用された場合、この変数は、ユーザのエディタに開始行番号を渡すために使用されるコマンドライン引数を指定します。
<productname>Emacs</>または<productname>vi</>のようなエディタでは、これはプラス(+)記号です。
オプション名と行番号の間に空白文字が必要な場合は、変数の値の最後に空白文字を含めてください。
以下に例を示します。
<programlisting>
PSQL_EDITOR_LINENUMBER_ARG='+'
PSQL_EDITOR_LINENUMBER_ARG='--line '
</programlisting>
     </para>

     <para>
<!--
      The default is <literal>+</literal> on Unix systems
      (corresponding to the default editor <filename>vi</filename>,
      and useful for many other common editors); but there is no
      default on Windows systems.
-->
Unixシステム上のデフォルトは<literal>+</literal>です。
（デフォルトのエディタ<filename>vi</filename>に対応するものですが、他のよく使われる多くのエディタでも役に立ちます。）
一方Windowsシステムではデフォルトはありません。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>PSQL_HISTORY</envar></term>

    <listitem>
     <para>
<!--
      Alternative location for the command history file. Tilde (<literal>~</literal>) expansion is performed.
-->
コマンド履歴ファイルの場所を指定します。
チルダ（<literal>~</literal>）展開が行われます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>PSQLRC</envar></term>

    <listitem>
     <para>
<!--
      Alternative location of the user's <filename>.psqlrc</filename> file. Tilde (<literal>~</literal>) expansion is performed.
-->
ユーザの<filename>.psqlrc</filename>ファイルの場所を指定します。
チルダ（<literal>~</literal>）展開が行われます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>SHELL</envar></term>

    <listitem>
     <para>
<!--
      Command executed by the <command>\!</command> command.
-->
<command>\!</command>コマンドが実行するコマンドです。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>TMPDIR</envar></term>

    <listitem>
     <para>
<!--
      Directory for storing temporary files.  The default is
      <filename>/tmp</filename>.
-->
一時ファイルを格納するディレクトリです。
デフォルトは<filename>/tmp</filename>です。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
<!--
   This utility, like most other <productname>PostgreSQL</> utilities,
   also uses the environment variables supported by <application>libpq</>
   (see <xref linkend="libpq-envars">).
-->
このユーティリティは、他のほとんどの<productname>PostgreSQL</>ユーティリティと同様、<application>libpq</>でサポートされる環境変数を使用します（<xref linkend="libpq-envars">を参照してください）。
  </para>

 </refsect1>


 <refsect1>
<!--
  <title>Files</title>
-->
<title>ファイル</title>

 <variablelist>
  <varlistentry>
   <term><filename>psqlrc</filename> and <filename>~/.psqlrc</filename></term>
   <listitem>
    <para>
<!--
     Unless it is passed an <option>-X</option> or <option>-c</option> option,
     <application>psql</application> attempts to read and execute commands
     from the system-wide startup file (<filename>psqlrc</filename>) and then
     the user's personal startup file (<filename>~/.psqlrc</filename>), after
     connecting to the database but before accepting normal commands.
     These files can be used to set up the client and/or the server to taste,
     typically with <command>\set</command> and <command>SET</command>
     commands.
-->
<option>-X</option>または<option>-c</option>オプションが渡されない場合、<application>psql</application>は、データベースに接続した後、通常のコマンドを受け付け始める前に、システム全体用の開始ファイル(<filename>psqlrc</filename>)のコマンドを、続いてユーザ用の開始ファイル(<filename>~/.psqlrc</filename>)のコマンドを読み込み、実行しようとします。
これらのファイルは、<command>\set</command>や<command>SET</command>コマンドを使用して、好みに応じたクライアントやサーバを設定するために使用することができます。
    </para>
    <para>
<!--
     The system-wide startup file is named <filename>psqlrc</filename> and is
     sought in the installation's <quote>system configuration</> directory,
     which is most reliably identified by running <literal>pg_config
     &#045;-sysconfdir</>.  By default this directory will be <filename>../etc/</>
     relative to the directory containing
     the <productname>PostgreSQL</productname> executables.  The name of this
     directory can be set explicitly via the <envar>PGSYSCONFDIR</envar>
     environment variable.
-->
システム全体の開始ファイルは<filename>psqlrc</filename>という名前で、インストレーションの<quote>システム設定</>ディレクトリの中で探されます。
このディレクトリを特定するには<literal>pg_config --sysconfdir</>を実行するのが最も確実です。
デフォルトでは、<productname>PostgreSQL</productname>の実行ファイルを含むディレクトリからの相対パスで<filename>../etc/</>になります。
このディレクトリの名前は環境変数<envar>PGSYSCONFDIR</envar>を使って明示的に設定することができます。
    </para>
    <para>
<!--
     The user's personal startup file is named <filename>.psqlrc</filename>
     and is sought in the invoking user's home directory.  On Windows, which
     lacks such a concept, the personal startup file is named
     <filename>%APPDATA%\postgresql\psqlrc.conf</filename>.
     The location of the user's startup file can be set explicitly via
     the <envar>PSQLRC</envar> environment variable.
-->
ユーザ用の開始ファイルは<filename>.psqlrc</filename>という名前で、実行しているユーザのホームディレクトリの中で探されます。
Windowsではそのような概念がないので、個人用の開始ファイルは<filename>%APPDATA%\postgresql\psqlrc.conf</filename>という名前になります。
ユーザ用の開始ファイルは環境変数<envar>PSQLRC</envar>で明示的に設定することができます。
    </para>
    <para>
<!--
     Both the system-wide startup file and the user's personal startup file
     can be made <application>psql</application>-version-specific
     by appending a dash and the <productname>PostgreSQL</productname>
     major or minor release number to the file name,
     for example <filename>~/.psqlrc-9.2</filename> or
     <filename>~/.psqlrc-9.2.5</filename>.  The most specific
     version-matching file will be read in preference to a
     non-version-specific file.
-->
システム全体用の開始ファイルとユーザ用の開始ファイルに、例えば、<filename>~/.psqlrc-9.2</filename>や<filename>~/.psqlrc-9.2.5</filename>のように、ハイフン記号と<productname>PostgreSQL</productname>のメジャーリリース番号またはマイナーリリース番号をファイル名に付加することで、特定バージョンの<application>psql</application>向けのファイルとすることができます。
マッチするバージョンのファイルはバージョン指定のないファイルよりも優先して読み込まれます。
    </para>
   </listitem>
  </varlistentry>

  <varlistentry>
   <term><filename>.psql_history</filename></term>
   <listitem>
    <para>
<!--
     The command-line history is stored in the file
     <filename>~/.psql_history</filename>, or
     <filename>%APPDATA%\postgresql\psql_history</filename> on Windows.
-->
コマンドライン履歴はファイル<filename>~/.psql_history</filename>、Windowsの場合は<filename>%APPDATA%\postgresql\psql_history</filename>に格納されます。
    </para>
    <para>
<!--
     The location of the history file can be set explicitly via
     the <envar>PSQL_HISTORY</envar> environment variable.
-->
履歴ファイルの場所は環境変数<envar>PSQL_HISTORY</envar>を介して明示的に設定することができます。
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
 </refsect1>


 <refsect1>
<!--
  <title>Notes</title>
-->
<title>注釈</title>

    <itemizedlist>
      <listitem>
      <para>
<!--
       In an earlier life <application>psql</application> allowed the
       first argument of a single-letter backslash command to start
       directly after the command, without intervening whitespace.
       As of <productname>PostgreSQL</productname> 8.4 this is no
       longer allowed.
-->
旧バージョンの<application>psql</application>では、単一文字のバックスラッシュコマンドの後に、空白を入れずに直接最初の引数を入力することができました。
<productname>PostgreSQL</productname> 8.4からこれは許されなくなりました。
      </para>
      </listitem>

      <listitem>
<!--
      <para><application>psql</application> works best with servers of the same
       or an older major version.  Backslash commands are particularly likely
       to fail if the server is of a newer version than <application>psql</>
       itself.  However, backslash commands of the <literal>\d</> family should
       work with servers of versions back to 7.4, though not necessarily with
       servers newer than <application>psql</> itself.  The general
       functionality of running SQL commands and displaying query results
       should also work with servers of a newer major version, but this cannot
       be guaranteed in all cases.
-->
<para>
<application>psql</application>は、同じまたはより古いメジャーバージョンのサーバと稼働させることが最善です。
特にバックスラッシュコマンドは、サーバが<application>psql</>自身のバージョンより新しいと失敗しやすくなります。
<literal>\d</>系列のバックスラッシュコマンドは7.4までさかのぼるバージョンのサーバで動作するはずですが、<application>psql</>自身よりもサーバが新しい場合は、必ずしもそうではありません。
SQLコマンドの実行ならびに問い合わせ結果の表示といった一般的な機能はより新しいメジャーバージョンのサーバとでも動作するはずですが、すべての場合において保証することはできません。
      </para>
      <para>
<!--
       If you want to use <application>psql</application> to connect to several
       servers of different major versions, it is recommended that you use the
       newest version of <application>psql</application>.  Alternatively, you
       can keep a copy of <application>psql</application> from each major
       version around and be sure to use the version that matches the
       respective server.  But in practice, this additional complication should
       not be necessary.
-->
複数のメジャーバージョンが異なるサーバとの接続のために<application>psql</application>を使用したいのであれば、<application>psql</application>の最新版を使用することを勧めます。
他の方法として、各メジャーバージョンの<application>psql</application>のコピーを保持し、確実にそれぞれのサーバに対応するバージョンを使用することができます。
しかし実際には、この複雑さを追加することは必要ではないはずです。
      </para>
      </listitem>

    </itemizedlist>
 </refsect1>


 <refsect1>
<!--
  <title>Notes for Windows Users</title>
-->
  <title>Windowsユーザ向けの注意</title>

 <para>
<!--
  <application>psql</application> is built as a <quote>console
  application</>.  Since the Windows console windows use a different
  encoding than the rest of the system, you must take special care
  when using 8-bit characters within <application>psql</application>.
  If <application>psql</application> detects a problematic
  console code page, it will warn you at startup. To change the
  console code page, two things are necessary:
-->
<application>psql</application>は<quote>コンソールアプリケーション</>としてコンパイルされます。
Windowsのコンソールウィンドウは、システムの他の部分とは異なる符号化方式を使用しているので、<application>psql</application>で8ビット文字を使用する時には特別な配慮が必要です。
<application>psql</application>は、コンソール用コードページとして問題があることを検出すると、起動時に警告を発します。
コンソール用コードページを変更するためには、以下の2つが必要です。

   <itemizedlist>
    <listitem>
     <para>
<!--
      Set the code page by entering <userinput>cmd.exe /c chcp
      1252</userinput>. (1252 is a code page that is appropriate for
      German; replace it with your value.) If you are using Cygwin,
      you can put this command in <filename>/etc/profile</filename>.
-->
<userinput>cmd.exe /c chcp 1252</userinput>と入力して、コードページを設定します
（1252はドイツ圏における適切なコードページです。システムに合わせて変更してください）。
Cygwinを使用しているのであれば、このコマンドを<filename>/etc/profile</filename>に追加してください。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Set the console font to <literal>Lucida Console</>, because the
      raster font does not work with the ANSI code page.
-->
コンソール用フォントを<literal>Lucida Console</>に設定してください。
ラスタフォントは、ANSIコードページでは正しく動作しないためです。
     </para>
    </listitem>
   </itemizedlist></para>

 </refsect1>


 <refsect1 id="APP-PSQL-examples">
<!--
  <title id="APP-PSQL-examples-title">Examples</title>
-->
<title id="APP-PSQL-examples-title">例</title>

  <para>
<!--
  The first example shows how to spread a command over several lines of
  input. Notice the changing prompt:
-->
最初に、複数行にわたるコマンドの入力例を示します。
プロンプトの変化に注意してください。
<programlisting>
testdb=&gt; <userinput>CREATE TABLE my_table (</userinput>
testdb(&gt; <userinput> first integer not null default 0,</userinput>
testdb(&gt; <userinput> second text)</userinput>
testdb-&gt; <userinput>;</userinput>
CREATE TABLE
</programlisting>
<!--
  Now look at the table definition again:
-->
さて、ここでテーブル定義を再度確認してみます。
<programlisting>
testdb=&gt; <userinput>\d my_table</userinput>
             Table "my_table"
 Attribute |  Type   |      Modifier
-----------+---------+--------------------
 first     | integer | not null default 0
 second    | text    |

</programlisting>
<!--
  Now we change the prompt to something more interesting:
-->
次に、プロンプトをもっと面白いものに変更してみます。
<programlisting>
testdb=&gt; <userinput>\set PROMPT1 '%n@%m %~%R%# '</userinput>
peter@localhost testdb=&gt;
</programlisting>
<!--
  Let's assume you have filled the table with data and want to take a
  look at it:
-->
テーブルにデータを入力したものと考えてください。データを見る場合は次のようにします。
<programlisting>
peter@localhost testdb=&gt; SELECT * FROM my_table;
 first | second
-------+--------
     1 | one
     2 | two
     3 | three
     4 | four
(4 rows)

</programlisting>
<!--
  You can display tables in different ways by using the
  <command>\pset</command> command:
-->
<command>\pset</command>コマンドを使って、このテーブルの表示を違うタイプに変更することができます。
<programlisting>
peter@localhost testdb=&gt; <userinput>\pset border 2</userinput>
Border style is 2.
peter@localhost testdb=&gt; <userinput>SELECT * FROM my_table;</userinput>
+-------+--------+
| first | second |
+-------+--------+
|     1 | one    |
|     2 | two    |
|     3 | three  |
|     4 | four   |
+-------+--------+
(4 rows)

peter@localhost testdb=&gt; <userinput>\pset border 0</userinput>
Border style is 0.
peter@localhost testdb=&gt; <userinput>SELECT * FROM my_table;</userinput>
first second
----- ------
    1 one
    2 two
    3 three
    4 four
(4 rows)

peter@localhost testdb=&gt; <userinput>\pset border 1</userinput>
Border style is 1.
peter@localhost testdb=&gt; <userinput>\pset format unaligned</userinput>
Output format is unaligned.
peter@localhost testdb=&gt; <userinput>\pset fieldsep ","</userinput>
Field separator is ",".
peter@localhost testdb=&gt; <userinput>\pset tuples_only</userinput>
Showing only tuples.
peter@localhost testdb=&gt; <userinput>SELECT second, first FROM my_table;</userinput>
one,1
two,2
three,3
four,4
</programlisting>
<!--
  Alternatively, use the short commands:
-->
その他の方法として、短縮されたコマンドを使用してみます。
<programlisting>
peter@localhost testdb=&gt; <userinput>\a \t \x</userinput>
Output format is aligned.
Tuples only is off.
Expanded display is on.
peter@localhost testdb=&gt; <userinput>SELECT * FROM my_table;</userinput>
-[ RECORD 1 ]-
first  | 1
second | one
-[ RECORD 2 ]-
first  | 2
second | two
-[ RECORD 3 ]-
first  | 3
second | three
-[ RECORD 4 ]-
first  | 4
second | four
</programlisting></para>

 </refsect1>

</refentry>
