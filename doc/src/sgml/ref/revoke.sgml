<!--
doc/src/sgml/ref/revoke.sgml
PostgreSQL documentation
-->

<refentry id="SQL-REVOKE">
 <indexterm zone="sql-revoke">
  <primary>REVOKE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>REVOKE</refentrytitle>
  <manvolnum>7</manvolnum>
<!--
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 言語</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>REVOKE</refname>
<!--
  <refpurpose>remove access privileges</refpurpose>
-->
<refpurpose>アクセス権限を取り消す</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
REVOKE [ GRANT OPTION FOR ]
    { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }
    [, ...] | ALL [ PRIVILEGES ] }
    ON { [ TABLE ] <replaceable class="PARAMETER">table_name</replaceable> [, ...]
         | ALL TABLES IN SCHEMA <replaceable>schema_name</replaceable> [, ...] }
    FROM { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { SELECT | INSERT | UPDATE | REFERENCES } ( <replaceable class="PARAMETER">column_name</replaceable> [, ...] )
    [, ...] | ALL [ PRIVILEGES ] ( <replaceable class="PARAMETER">column_name</replaceable> [, ...] ) }
    ON [ TABLE ] <replaceable class="PARAMETER">table_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { USAGE | SELECT | UPDATE }
    [, ...] | ALL [ PRIVILEGES ] }
    ON { SEQUENCE <replaceable class="PARAMETER">sequence_name</replaceable> [, ...]
         | ALL SEQUENCES IN SCHEMA <replaceable>schema_name</replaceable> [, ...] }
    FROM { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { CREATE | CONNECT | TEMPORARY | TEMP } [, ...] | ALL [ PRIVILEGES ] }
    ON DATABASE <replaceable>database_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON DOMAIN <replaceable>domain_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON FOREIGN DATA WRAPPER <replaceable>fdw_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON FOREIGN SERVER <replaceable>server_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { EXECUTE | ALL [ PRIVILEGES ] }
    ON { FUNCTION <replaceable>function_name</replaceable> ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">arg_name</replaceable> ] <replaceable class="parameter">arg_type</replaceable> [, ...] ] ) [, ...]
         | ALL FUNCTIONS IN SCHEMA <replaceable>schema_name</replaceable> [, ...] }
    FROM { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON LANGUAGE <replaceable>lang_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { SELECT | UPDATE } [, ...] | ALL [ PRIVILEGES ] }
    ON LARGE OBJECT <replaceable class="PARAMETER">loid</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { CREATE | USAGE } [, ...] | ALL [ PRIVILEGES ] }
    ON SCHEMA <replaceable>schema_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { CREATE | ALL [ PRIVILEGES ] }
    ON TABLESPACE <replaceable>tablespace_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON TYPE <replaceable>type_name</replaceable> [, ...]
    FROM { [ GROUP ] <replaceable class="PARAMETER">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ ADMIN OPTION FOR ]
    <replaceable class="PARAMETER">role_name</replaceable> [, ...] FROM <replaceable class="PARAMETER">role_name</replaceable> [, ...]
    [ CASCADE | RESTRICT ]
</synopsis>
 </refsynopsisdiv>

 <refsect1 id="SQL-REVOKE-description">
<!--
  <title>Description</title>
-->
  <title>説明</title>

  <para>
<!--
   The <command>REVOKE</command> command revokes previously granted
   privileges from one or more roles.  The key word
   <literal>PUBLIC</literal> refers to the implicitly defined group of
   all roles.
-->
<command>REVOKE</command>コマンドは、1つ以上のロールに対して、以前に与えた権限を取り消します。
<literal>PUBLIC</literal>キーワードは暗黙的に定義された全ロールからなるグループです。
  </para>

  <para>
<!--
   See the description of the <xref linkend="sql-grant"> command for
   the meaning of the privilege types.
-->
権限の種類の意味については<xref linkend="sql-grant">コマンドの説明を参照してください。
  </para>

  <para>
<!--
   Note that any particular role will have the sum
   of privileges granted directly to it, privileges granted to any role it
   is presently a member of, and privileges granted to
   <literal>PUBLIC</literal>.  Thus, for example, revoking <literal>SELECT</> privilege
   from <literal>PUBLIC</literal> does not necessarily mean that all roles
   have lost <literal>SELECT</> privilege on the object: those who have it granted
   directly or via another role will still have it.  Similarly, revoking
   <literal>SELECT</> from a user might not prevent that user from using
   <literal>SELECT</> if <literal>PUBLIC</literal> or another membership
   role still has <literal>SELECT</> rights.
-->
全てのロールは、そのロールに直接許可された権限、現在属しているロールに許可された権限、<literal>PUBLIC</literal>に許可された権限という3つの権限を合わせた権限を持っていることに注意してください。
したがって、例えば、<literal>PUBLIC</literal>から<literal>SELECT</>権限を取り消すことは、必ずしも全てのロールがそのオブジェクトに対する<literal>SELECT</>権限を失うことを意味しません。
権限が直接許可されているロール、あるいは、別ロール経由で許可されているロールは、<literal>SELECT</>権限を持ち続けます。
同様にユーザから<literal>SELECT</>を取り消しても、<literal>PUBLIC</literal>またはメンバとして属する他のロールが<literal>SELECT</>権限を持つ場合、<literal>SELECT</>の使用を拒否できません。
  </para>

  <para>
<!--
   If <literal>GRANT OPTION FOR</literal> is specified, only the grant
   option for the privilege is revoked, not the privilege itself.
   Otherwise, both the privilege and the grant option are revoked.
-->
<literal>GRANT OPTION FOR</literal>が指定された場合、権限自体ではなく、その権限のグラントオプションのみが取り消されます。
指定されていなければ、権限とグラントオプションの両方が取り消されます。
  </para>

  <para>
<!--
   If a user holds a privilege with grant option and has granted it to
   other users then the privileges held by those other users are
   called dependent privileges. If the privilege or the grant option
   held by the first user is being revoked and dependent privileges
   exist, those dependent privileges are also revoked if
   <literal>CASCADE</literal> is specified; if it is not, the revoke action
   will fail.  This recursive revocation only affects privileges that
   were granted through a chain of users that is traceable to the user
   that is the subject of this <literal>REVOKE</literal> command.
   Thus, the affected users might effectively keep the privilege if it
   was also granted through other users.
-->
グラントオプション付きの権限を保持しているユーザが、その権限を他ユーザに与えていた場合、与えられたユーザが保持する権限は依存権限と呼ばれます。
権限を与えたユーザ自身の権限やグラントオプションが取り消され、その権限に依存権限が存在する場合、<literal>CASCADE</literal>が指定されていると依存権限も取り消されます。指定されていなければ、権限の取り消しが失敗します。
この再帰的な権限の取り消しは、ユーザ権限の連鎖を通じて与えられた権限の中でも、<literal>REVOKE</literal>を実行されたユーザから追跡可能な範囲にのみ影響します。
したがって、依存権限を持つユーザが他のユーザからも同じ権限を与えられている場合は、<literal>REVOKE</literal>が実行された後もその権限を保持している可能性があります。
  </para>

  <para>
<!--
   When revoking privileges on a table, the corresponding column privileges
   (if any) are automatically revoked on each column of the table, as well.
   On the other hand, if a role has been granted privileges on a table, then
   revoking the same privileges from individual columns will have no effect.
-->
テーブルの権限を取り消す場合、対応する列の権限（もしあれば）も自動的に、そのテーブルの各列から取り消されます。
一方、ロールがテーブルに対する権限を持つ場合、個々の列から同じ権限を取り消しても影響ありません。

  </para>

  <para>
<!--
   When revoking membership in a role, <literal>GRANT OPTION</> is instead
   called <literal>ADMIN OPTION</>, but the behavior is similar.
   Note also that this form of the command does not
   allow the noise word <literal>GROUP</>.
-->
ロールのメンバ資格を取り消す場合、同様に振舞いますが、<literal>GRANT OPTION</>は<literal>ADMIN OPTION</>と呼ばれます。
また、このコマンド構文では無意味な<literal>GROUP</>という単語を受け付けないことに注意してください。
  </para>
 </refsect1>

 <refsect1 id="SQL-REVOKE-notes">
<!--
  <title>Notes</title>
-->
  <title>注釈</title>

  <para>
<!--
   Use <xref linkend="app-psql">'s <command>\dp</command> command to
   display the privileges granted on existing tables and columns.  See <xref
   linkend="sql-grant"> for information about the
   format.  For non-table objects there are other <command>\d</> commands
   that can display their privileges.
-->
既存のテーブルや列に付与された権限を表示するためには<xref linkend="app-psql">の<command>\dp</command>コマンドを使用してください。
この書式については<xref linkend="sql-grant">を参照してください。
テーブル以外のオブジェクトについて、その権限を表示することができる他の<command>\d</>コマンドが存在します。
  </para>

  <para>
<!--
   A user can only revoke privileges that were granted directly by
   that user.  If, for example, user A has granted a privilege with
   grant option to user B, and user B has in turned granted it to user
   C, then user A cannot revoke the privilege directly from C.
   Instead, user A could revoke the grant option from user B and use
   the <literal>CASCADE</literal> option so that the privilege is
   in turn revoked from user C.  For another example, if both A and B
   have granted the same privilege to C, A can revoke his own grant
   but not B's grant, so C will still effectively have the privilege.
-->
取り消すことができるのは、ユーザが直接付与した権限のみです。
例えば、もし、ユーザAがグラントオプションを付けてユーザBに権限を与え、その後、ユーザBがユーザCにその権限を与えたとすると、ユーザAはユーザCの権限を直接取り消すことはできません。
その代わり、ユーザAがユーザBのグラントオプションを<literal>CASCADE</literal>オプション付きで取り消すことで、ユーザCに与えられた権限を取り消すことができます。
別の状況を考えてみます。AとBの両方が同じ権限をCに与えた場合、AはAの与えた権限を取り消すことはできますが、Bの与えた権限を取り消すことはできません。
したがって、Cは実質的にその権限を持ち続けることになります。
  </para>

   <para>
<!--
    When a non-owner of an object attempts to <command>REVOKE</> privileges
    on the object, the command will fail outright if the user has no
    privileges whatsoever on the object.  As long as some privilege is
    available, the command will proceed, but it will revoke only those
    privileges for which the user has grant options.  The <command>REVOKE ALL
    PRIVILEGES</> forms will issue a warning message if no grant options are
    held, while the other forms will issue a warning if grant options for
    any of the privileges specifically named in the command are not held.
    (In principle these statements apply to the object owner as well, but
    since the owner is always treated as holding all grant options, the
    cases can never occur.)
-->
オブジェクトの所有者以外がそのオブジェクト上の権限に対して<command>REVOKE</>を実行した場合、ユーザがオブジェクトに対して何の権限も持っていなければ、即座にコマンドが失敗します。
何らかの権限があればコマンド処理が続行されますが、取り消すことができるのはそのユーザがグラントオプションを持つ権限のみです。
<command>REVOKE ALL PRIVILEGES</>構文をまったく権限を持たない状態で実行すると、警告が出力されます。
他の構文の場合は、そのコマンドで指定した権限に対するグラントオプションを持たない状態で実行すると、警告が出力されます
（原理上、上記の説明はオブジェクト所有者にも適用されますが、所有者は常に全てのグラントオプションを保持しているので、こうした問題が発生することはありません）。
   </para>

   <para>
<!--
    If a superuser chooses to issue a <command>GRANT</> or <command>REVOKE</>
    command, the command is performed as though it were issued by the
    owner of the affected object.  Since all privileges ultimately come
    from the object owner (possibly indirectly via chains of grant options),
    it is possible for a superuser to revoke all privileges, but this might
    require use of <literal>CASCADE</literal> as stated above.
-->
スーパーユーザが<command>GRANT</>や<command>REVOKE</>コマンドを発行した場合、そのコマンドは、対象のオブジェクトの所有者によって発行されたものであるかのように動作します。
根本的には全ての権限はオブジェクトの所有者から渡されるものなので（ただし、グラントオプションの連鎖により間接的に渡される場合もありますが）、スーパーユーザは、全ての権限を取り消すことができます。
ただし、この場合は上述の<literal>CASCADE</literal>を使用する必要があります。
   </para>

   <para>
<!--
    <command>REVOKE</> can also be done by a role
    that is not the owner of the affected object, but is a member of the role
    that owns the object, or is a member of a role that holds privileges
    <literal>WITH GRANT OPTION</literal> on the object.  In this case the
    command is performed as though it were issued by the containing role that
    actually owns the object or holds the privileges
    <literal>WITH GRANT OPTION</literal>.  For example, if table
    <literal>t1</> is owned by role <literal>g1</>, of which role
    <literal>u1</> is a member, then <literal>u1</> can revoke privileges
    on <literal>t1</> that are recorded as being granted by <literal>g1</>.
    This would include grants made by <literal>u1</> as well as by other
    members of role <literal>g1</>.
-->
<command>REVOKE</>は、対象のオブジェクトの所有者以外のロールによって実行することもできますが、
オブジェクトを所有するロールのメンバであるか、そのオブジェクトに対し<literal>WITH GRANT OPTION</literal>権限を持つロールのメンバでなければなりません。
この場合、
そのオブジェクトの実際の所有者ロールまたは<literal>WITH GRANT OPTION</literal>権限を持つロールによって発行されたかのように、このコマンドは実行されます。
例えば、<literal>t1</>テーブルが<literal>g1</>ロールによって所有され、<literal>u1</>が<literal>g1</>ロールのメンバであるとします。
この場合、<literal>u1</>は<literal>g1</>で付与されたものと記録されている権限を取り消すことができます。
これには、<literal>u1</>が付与した権限と<literal>g1</>ロールの他のメンバによって付与された権限が含まれます。
   </para>

   <para>
<!--
    If the role executing <command>REVOKE</> holds privileges
    indirectly via more than one role membership path, it is unspecified
    which containing role will be used to perform the command.  In such cases
    it is best practice to use <command>SET ROLE</> to become the specific
    role you want to do the <command>REVOKE</> as.  Failure to do so might
    lead to revoking privileges other than the ones you intended, or not
    revoking anything at all.
-->
<command>REVOKE</>を実行したロールが、ロールの持つ複数メンバ資格の経路を通して間接的に必要な権限を持つ場合、このコマンドがどのロールで実行されたかについては指定されません。
こうした場合、<command>SET ROLE</>を使用して、<command>REVOKE</>を行わせたい特定のロールになることを推奨します。
こうしないと、意図しない権限を取り消すことになったり、取り消し自体が失敗することになったりします。
   </para>
 </refsect1>

 <refsect1 id="SQL-REVOKE-examples">
<!--
  <title>Examples</title>
-->
  <title>例</title>

  <para>
<!--
   Revoke insert privilege for the public on table
   <literal>films</literal>:
-->
テーブル<literal>films</literal>に対するpublicに与えた挿入権限を取り消します。

<programlisting>
REVOKE INSERT ON films FROM PUBLIC;
</programlisting>
  </para>

  <para>
<!--
   Revoke all privileges from user <literal>manuel</literal> on view
   <literal>kinds</literal>:
-->
ビュー<literal>kinds</literal>から、ユーザ<literal>manuel</literal>に与えた全ての権限を取り消します。

<programlisting>
REVOKE ALL PRIVILEGES ON kinds FROM manuel;
</programlisting>

<!--
   Note that this actually means <quote>revoke all privileges that I
   granted</>.
-->
これは実際には<quote>自分が与えた全ての権限を取り消す</>ことを意味します。

  </para>

  <para>
<!--
   Revoke membership in role <literal>admins</> from user <literal>joe</>:
-->
ユーザ<literal>joe</>からロール<literal>admins</>内のメンバ資格を取り消します。

<programlisting>
REVOKE admins FROM joe;
</programlisting></para>
 </refsect1>

 <refsect1 id="SQL-REVOKE-compatibility">
<!--
  <title>Compatibility</title>
-->
  <title>互換性</title>

   <para>
<!--
    The compatibility notes of the <xref linkend="sql-grant"> command
    apply analogously to <command>REVOKE</command>.
    The keyword <literal>RESTRICT</literal> or <literal>CASCADE</literal>
    is required according to the standard, but <productname>PostgreSQL</>
    assumes <literal>RESTRICT</literal> by default.
-->
<xref linkend="sql-grant">コマンドの互換性についての注釈は<command>REVOKE</command>にも同様に当てはまります。
標準では、キーワード<literal>RESTRICT</literal>か<literal>CASCADE</literal>のどちらかが必須です。
しかし、<productname>PostgreSQL</>ではデフォルトで<literal>RESTRICT</literal>とみなされます。
   </para>
 </refsect1>

 <refsect1>
<!--
  <title>See Also</title>
-->
  <title>関連項目</title>

  <simpara>
   <xref linkend="sql-grant">
  </simpara>
 </refsect1>

</refentry>
