<!--
doc/src/sgml/ref/create_role.sgml
PostgreSQL documentation
-->

<refentry id="SQL-CREATEROLE">
 <indexterm zone="sql-createrole">
  <primary>CREATE ROLE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE ROLE</refentrytitle>
  <manvolnum>7</manvolnum>
<!--
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
  <refmiscinfo>SQL - 言語</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE ROLE</refname>
<!--
  <refpurpose>define a new database role</refpurpose>
-->
  <refpurpose>新しいデータベースロールを定義する</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
CREATE ROLE <replaceable class="PARAMETER">name</replaceable> [ [ WITH ] <replaceable class="PARAMETER">option</replaceable> [ ... ] ]

<!--
<phrase>where <replaceable class="PARAMETER">option</replaceable> can be:</phrase>
-->
<phrase>ここで<replaceable class="PARAMETER">option</replaceable>は以下の通りです。</phrase>

      SUPERUSER | NOSUPERUSER
    | CREATEDB | NOCREATEDB
    | CREATEROLE | NOCREATEROLE
    | CREATEUSER | NOCREATEUSER
    | INHERIT | NOINHERIT
    | LOGIN | NOLOGIN
    | REPLICATION | NOREPLICATION
    | BYPASSRLS | NOBYPASSRLS
    | CONNECTION LIMIT <replaceable class="PARAMETER">connlimit</replaceable>
    | [ ENCRYPTED | UNENCRYPTED ] PASSWORD '<replaceable class="PARAMETER">password</replaceable>'
    | VALID UNTIL '<replaceable class="PARAMETER">timestamp</replaceable>'
    | IN ROLE <replaceable class="PARAMETER">role_name</replaceable> [, ...]
    | IN GROUP <replaceable class="PARAMETER">role_name</replaceable> [, ...]
    | ROLE <replaceable class="PARAMETER">role_name</replaceable> [, ...]
    | ADMIN <replaceable class="PARAMETER">role_name</replaceable> [, ...]
    | USER <replaceable class="PARAMETER">role_name</replaceable> [, ...]
    | SYSID <replaceable class="PARAMETER">uid</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
  <title>Description</title>
-->
  <title>説明</title>

  <para>
<!--
   <command>CREATE ROLE</command> adds a new role to a
   <productname>PostgreSQL</productname> database cluster.  A role is
   an entity that can own database objects and have database privileges;
   a role can be considered a <quote>user</>, a <quote>group</>, or both
   depending on how it is used.  Refer to
   <xref linkend="user-manag"> and <xref
   linkend="client-authentication"> for information about managing
   users and authentication.  You must have <literal>CREATEROLE</>
   privilege or be a database superuser to use this command.
-->
<command>CREATE ROLE</command>は、<productname>PostgreSQL</productname>データベースクラスタに新しいロールを加えます。
ロールとは、データベースオブジェクトを所有することができ、データベース権限を持つことができる実体のことです。
ロールは、使用状況に応じて<quote>ユーザ</>、<quote>グループ</>、もしくは、その両方であるとみなすことができます。
ユーザの管理と認証に関する情報については、<xref linkend="user-manag">と<xref linkend="client-authentication">を参照してください。
このコマンドを使用するには、<literal>CREATEROLE</>権限を持つか、データベースのスーパーユーザでなければなりません。

  </para>

  <para>
<!--
   Note that roles are defined at the database cluster
   level, and so are valid in all databases in the cluster.
-->
ロールはデータベースクラスタのレベルで定義されるため、クラスタ内のすべてのデータベースで有効となることに注意してください。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Parameters</title>
-->
  <title>パラメータ</title>

    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">name</replaceable></term>
      <listitem>
       <para>
<!--
        The name of the new role.
-->
新しいロールの名前です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>SUPERUSER</literal></term>
      <term><literal>NOSUPERUSER</literal></term>
      <listitem>
       <para>
<!--
        These clauses determine whether the new role is a <quote>superuser</>,
        who can override all access restrictions within the database.
        Superuser status is dangerous and should be used only when really
        needed.  You must yourself be a superuser to create a new superuser.
        If not specified,
        <literal>NOSUPERUSER</literal> is the default.
-->
これらの句によって、新しいロールが<quote>スーパーユーザ</>となるかどうかが決まります。
<quote>スーパーユーザ</>はデータベース内のすべてのアクセス制限より優先します。
スーパーユーザという状態は危険ですので、本当に必要な場合にのみ使用しなければなりません。
新しくスーパーユーザを作成するには、スーパーユーザでなければなりません。
指定されなかった場合のデフォルトは<literal>NOSUPERUSER</literal>です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>CREATEDB</></term>
      <term><literal>NOCREATEDB</></term>
      <listitem>
       <para>
<!--
        These clauses define a role's ability to create databases.  If
        <literal>CREATEDB</literal> is specified, the role being
        defined will be allowed to create new databases. Specifying
        <literal>NOCREATEDB</literal> will deny a role the ability to
        create databases. If not specified,
        <literal>NOCREATEDB</literal> is the default.
-->
これらの句はロールのデータベースの作成に関する権限を定義します。
<literal>CREATEDB</literal>が指定された場合、定義されたロールは新しくデータベースを作成することができます。
<literal>NOCREATEDB</literal>を使用した場合、そのロールにはデータベースを作成する権限が与えられません。
指定されなかった場合のデフォルトは<literal>NOCREATEDB</literal>です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>CREATEROLE</literal></term>
      <term><literal>NOCREATEROLE</literal></term>
      <listitem>
       <para>
<!--
        These clauses determine whether a role will be permitted to
        create new roles (that is, execute <command>CREATE ROLE</command>).
        A role with <literal>CREATEROLE</literal> privilege can also alter
        and drop other roles.
        If not specified,
        <literal>NOCREATEROLE</literal> is the default.
-->
これらの句は、ロールが新しいロールを作成（つまり<command>CREATE ROLE</command>を実行）できるかどうかを決定します。
<literal>CREATEROLE</literal>権限を持つロールはロールを変更することも削除することもできます。
指定されなかった場合のデフォルトは<literal>NOCREATEROLE</literal>です。

       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>CREATEUSER</literal></term>
      <term><literal>NOCREATEUSER</literal></term>
      <listitem>
       <para>
<!--
        These clauses are an obsolete, but still accepted, spelling of
        <literal>SUPERUSER</literal> and <literal>NOSUPERUSER</literal>.
        Note that they are <emphasis>not</> equivalent to
        <literal>CREATEROLE</literal> as one might naively expect!
-->
これらの句は廃止予定ですが、<literal>SUPERUSER</literal>と<literal>NOSUPERUSER</literal>の別名として、まだ受け付けられます。
単純に<literal>CREATEROLE</literal>と同じであると考えるかもしれませんが、実際には<emphasis>異なる</>ことに注意してください。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>INHERIT</literal></term>
      <term><literal>NOINHERIT</literal></term>
      <listitem>
       <para>
<!--
        These clauses determine whether a role <quote>inherits</> the
        privileges of roles it is a member of.
        A role with the <literal>INHERIT</literal> attribute can automatically
        use whatever database privileges have been granted to all roles
        it is directly or indirectly a member of.
        Without <literal>INHERIT</literal>, membership in another role
        only grants the ability to <command>SET ROLE</> to that other role;
        the privileges of the other role are only available after having
        done so.
        If not specified,
        <literal>INHERIT</literal> is the default.
-->
これらの句は、ロールがそのロールが属するロールの権限を<quote>継承</>するかどうかを決定します。
<literal>INHERIT</literal>属性を持つロールは自動的に、直接的にまたは間接的にメンバとして割り当てられたすべてのデータベース権限を使用します。
<literal>INHERIT</literal>がないと、他のロール内のメンバ資格により得られる能力はそのロールへの<command>SET ROLE</>だけです。
他のロールの持つ権限は、<command>SET ROLE</>を行った後にのみ利用可能です。
指定されなかった場合のデフォルトは<literal>INHERIT</literal>です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>LOGIN</literal></term>
      <term><literal>NOLOGIN</literal></term>
      <listitem>
       <para>
<!--
        These clauses determine whether a role is allowed to log in;
        that is, whether the role can be given as the initial session
        authorization name during client connection.  A role having
        the <literal>LOGIN</literal> attribute can be thought of as a user.
        Roles without this attribute are useful for managing database
        privileges, but are not users in the usual sense of the word.
        If not specified,
        <literal>NOLOGIN</literal> is the default, except when
        <command>CREATE ROLE</> is invoked through its alternative spelling
        <xref linkend="sql-createuser">.
-->
これらの句により、ロールがログイン可能かどうか、つまり、そのロールをクライアント接続時にセッションを認証するための名前として使用することができるかどうかが決まります。
<literal>LOGIN</literal>属性を持つロールはユーザとみなすことができます。
この属性を持たないロールは、データベース権限を管理する際に有用ですが、普通の意味ではユーザとはいえません。
指定されなかった場合のデフォルトは<literal>NOLOGIN</literal>ですが、<command>CREATE ROLE</>がその別名である<xref linkend="sql-createuser">で呼び出された場合は例外です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>REPLICATION</literal></term>
      <term><literal>NOREPLICATION</literal></term>
      <listitem>
       <para>
<!--
        These clauses determine whether a role is allowed to initiate
        streaming replication or put the system in and out of backup mode.
        A role having the <literal>REPLICATION</> attribute is a very
        highly privileged role, and should only be used on roles actually
        used for replication. If not specified,
        <literal>NOREPLICATION</literal> is the default.
-->
これらの句は、ロールがストリーミングレプリケーションを開始でき、またシステムのバックアップモードとの遷移が可能かどうかを決定します。
<literal>REPLICATION</>属性を持つロールは、非常に高度な権限を持つものです。
このため実際にレプリケーションで使用するロールでのみ使用しなければなりません。
指定されない場合のデフォルトは<literal>NOREPLICATION</literal>です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>BYPASSRLS</literal></term>
      <term><literal>NOBYPASSRLS</literal></term>
      <listitem>
       <para>
<!--
        These clauses determine whether a role bypasses every row-level
        security (RLS) policy.  <literal>NOBYPASSRLS</literal> is the default.
        Note that pg_dump will set <literal>row_security</literal> to
        <literal>OFF</literal> by default, to ensure all contents of a table are
        dumped out.  If the user running pg_dump does not have appropriate
        permissions, an error will be returned.  The superuser and owner of the
        table being dumped always bypass RLS.
-->
これらの構文は、ロールがすべての行レベルセキュリティ(RLS)ポリシーを無視するかどうかを決定します。
<literal>NOBYPASSRLS</literal>がデフォルトです。
pg_dumpはテーブルのすべての内容が確実にダンプされるようにするため、<literal>row_security</literal>をデフォルトで<literal>OFF</literal>に設定することに注意してください。
pg_dumpを実行するユーザが適切な権限を持っていなければ、エラーが返されます。
スーパーユーザおよびテーブルの所有者は、常にRLSを無視します。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>CONNECTION LIMIT</literal> <replaceable class="parameter">connlimit</replaceable></term>
      <listitem>
       <para>
<!--
        If role can log in, this specifies how many concurrent connections
        the role can make.  -1 (the default) means no limit.
-->
ロールがログイン可能である場合、これは、ロールが確立できる最大同時接続数を指定します。
-1（デフォルト）は無制限を意味します。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>PASSWORD</> <replaceable class="parameter">password</replaceable></term>
      <listitem>
       <para>
<!--
        Sets the role's password.  (A password is only of use for
        roles having the <literal>LOGIN</literal> attribute, but you
        can nonetheless define one for roles without it.)  If you do
        not plan to use password authentication you can omit this
        option.  If no password is specified, the password will be set
        to null and password authentication will always fail for that
        user.  A null password can optionally be written explicitly as
        <literal>PASSWORD NULL</literal>.
-->
ロールのパスワードを設定します。
（パスワードは<literal>LOGIN</literal>属性を持つロールでのみ使用されますが、この属性を持たないロールにも定義することができます。）
パスワード認証を行う予定がなければ、このオプションを省略することができます。
パスワードの指定がなければ、パスワードがNULLに設定され、そのアカウントでのパスワード認証は常に失敗します。
NULLというパスワードを明示的に<literal>PASSWORD NULL</literal>と記述することもできます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>ENCRYPTED</></term>
      <term><literal>UNENCRYPTED</></term>
      <listitem>
       <para>
<!--
        These key words control whether the password is stored
        encrypted in the system catalogs.  (If neither is specified,
        the default behavior is determined by the configuration
        parameter <xref linkend="guc-password-encryption">.)  If the
        presented password string is already in MD5-encrypted format,
        then it is stored encrypted as-is, regardless of whether
        <literal>ENCRYPTED</> or <literal>UNENCRYPTED</> is specified
        (since the system cannot decrypt the specified encrypted
        password string).  This allows reloading of encrypted
        passwords during dump/restore.
-->
これらのキーワードを使用すると、パスワードを暗号化してシステムカタログに格納するかどうかを制御できます
（指定されていない場合のデフォルトの動作は、設定パラメータ<xref linkend="guc-password-encryption">によって決まります）。
指定された文字列が既にMD5暗号化書式である場合は、<literal>ENCRYPTED</>、<literal>UNENCRYPTED</>のどちらが指定されているかに関係なく、そのまま保存されます
（システムでは、暗号化されたパスワードを復号できないからです）。
これにより、ダンプ/リストア時に暗号化パスワードを再読み込みすることができます。
       </para>

       <para>
<!-- 
        Note that older clients might lack support for the MD5
        authentication mechanism that is needed to work with passwords
        that are stored encrypted.
-->
古いクライアントでは、暗号化して保存されたパスワードを使用するために必要なMD5認証機構をサポートしていない場合があることに注意してください。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>VALID UNTIL</literal> '<replaceable class="parameter">timestamp</replaceable>'</term>
      <listitem>
       <para>
<!--
        The <literal>VALID UNTIL</literal> clause sets a date and
        time after which the role's password is no longer valid.  If
        this clause is omitted the password will be valid for all time.
-->
<literal>VALID UNTIL</literal>句は、ロールのパスワードが無効になる日時を設定します。
この句が省略された場合、パスワードは永遠に有効になります。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>IN ROLE</> <replaceable class="parameter">role_name</replaceable></term>
      <listitem>
       <para>
<!--
        The <literal>IN ROLE</literal> clause lists one or more existing
        roles to which the new role will be immediately added as a new
        member.  (Note that there is no option to add the new role as an
        administrator; use a separate <command>GRANT</> command to do that.)
-->
<literal>IN ROLE</literal>句には、新しく作成するロールを新規にメンバとして追加する既存の1つ以上のロールを列挙します。
（新しく作成するロールを管理者として追加するオプションがないことに注意してください。このためには別途<command>GRANT</>コマンドを使用してください。）
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>IN GROUP</> <replaceable class="parameter">role_name</replaceable></term>
      <listitem>
<!--
       <para><literal>IN GROUP</literal> is an obsolete spelling of
        <literal>IN ROLE</>.
-->
<para><literal>IN GROUP</literal>は<literal>IN ROLE</>の別名で、廃止予定です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>ROLE</> <replaceable class="parameter">role_name</replaceable></term>
      <listitem>
       <para>
<!--
        The <literal>ROLE</literal> clause lists one or more existing
        roles which are automatically added as members of the new role.
        (This in effect makes the new role a <quote>group</>.)
-->
<literal>ROLE</literal>には、新しく作成するロールのメンバとして自動的に追加する既存の1つ以上のロールを列挙します。
（これは実質的に新しく作成したロールを<quote>グループ</>とします。）
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>ADMIN</> <replaceable class="parameter">role_name</replaceable></term>
      <listitem>
       <para>
<!--
        The <literal>ADMIN</literal> clause is like <literal>ROLE</literal>,
        but the named roles are added to the new role <literal>WITH ADMIN
        OPTION</>, giving them the right to grant membership in this role
        to others.
-->
<literal>ADMIN</literal>句は<literal>ROLE</literal>と似ていますが、新しく作成されるロールに指定されたロールが<literal>WITH ADMIN OPTION</>として追加される点が異なります。
つまり、新しく作成されるロールのメンバ資格を他者に与えることができる権利を、指定されたロールに与えます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>USER</> <replaceable class="parameter">role_name</replaceable></term>
      <listitem>
       <para>
<!--
        The <literal>USER</literal> clause is an obsolete spelling of
        the <literal>ROLE</> clause.
-->
<literal>USER</literal>句は<literal>ROLE</>句の別名で廃止予定です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>SYSID</> <replaceable class="parameter">uid</replaceable></term>
      <listitem>
       <para>
<!--
        The <literal>SYSID</literal> clause is ignored, but is accepted
        for backwards compatibility.
-->
<literal>SYSID</literal>句は無視されますが、後方互換性を維持するために受け付けられます。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
 </refsect1>

 <refsect1>
<!--
  <title>Notes</title>
-->
  <title>注釈</title>

  <para>
<!--
   Use <xref linkend="SQL-ALTERROLE"> to
   change the attributes of a role, and <xref linkend="SQL-DROPROLE">
   to remove a role.  All the attributes
   specified by <command>CREATE ROLE</> can be modified by later
   <command>ALTER ROLE</> commands.
-->
ロールの属性を変更するには<xref linkend="SQL-ALTERROLE">を、ロールを削除するには<xref linkend="SQL-DROPROLE">を使用してください。
<command>CREATE ROLE</>で指定したすべての属性は、後で<command>ALTER ROLE</>コマンドで変更可能です。
  </para>

  <para>
<!--
   The preferred way to add and remove members of roles that are being
   used as groups is to use
   <xref linkend="SQL-GRANT"> and
   <xref linkend="SQL-REVOKE">.
-->
グループとして使用しているロールのメンバの追加、および、削除についての推奨方法は、<xref linkend="SQL-GRANT">と<xref linkend="SQL-REVOKE">を使用することです。
  </para>

  <para>
<!--
   The <literal>VALID UNTIL</> clause defines an expiration time for a
   password only, not for the role <foreignphrase>per se</>.  In
   particular, the expiration time is not enforced when logging in using
   a non-password-based authentication method.
-->
<literal>VALID UNTIL</>句は、パスワードの有効期限を定義するだけで、ロール自体の有効期限ではありません。
特に、パスワードを使わない認証方式でログインを行う場合には、この有効期限は強制されません。
  </para>

  <para>
<!--
   The <literal>INHERIT</> attribute governs inheritance of grantable
   privileges (that is, access privileges for database objects and role
   memberships).  It does not apply to the special role attributes set by
   <command>CREATE ROLE</> and <command>ALTER ROLE</>.  For example, being
   a member of a role with <literal>CREATEDB</> privilege does not immediately
   grant the ability to create databases, even if <literal>INHERIT</> is set;
   it would be necessary to become that role via
   <xref linkend="SQL-SET-ROLE"> before
   creating a database.
-->
<literal>INHERIT</>属性は、許可可能な権限（つまり、データベースオブジェクトに対するアクセス権限とロールのメンバ資格）の継承を管理します。
これは、<command>CREATE ROLE</>や<command>ALTER ROLE</>で設定される特別なロール属性には適用されません。
<literal>INHERIT</>が設定されていたとしても、例えば、<literal>CREATEDB</>権限を持つロールのメンバであっても、データベース作成権限は即座に付与されません。
データベースを作成する前に<xref linkend="SQL-SET-ROLE">を使用してそのロールにならなければなりません。
  </para>

  <para>
<!--
   The <literal>INHERIT</> attribute is the default for reasons of backwards
   compatibility: in prior releases of <productname>PostgreSQL</productname>,
   users always had access to all privileges of groups they were members of.
   However, <literal>NOINHERIT</> provides a closer match to the semantics
   specified in the SQL standard.
-->
後方互換性を維持するため、<literal>INHERIT</>属性はデフォルトです。
以前のリリースの<productname>PostgreSQL</productname>では、ユーザは常にメンバとなっているすべてのグループの権限でアクセスできました。
しかし、<literal>NOINHERIT</>の方が標準SQLの規定の意味により合ったものを提供します。
  </para>

  <para>
<!--
   Be careful with the <literal>CREATEROLE</> privilege. There is no concept of
   inheritance for the privileges of a <literal>CREATEROLE</>-role. That
   means that even if a role does not have a certain privilege but is allowed
   to create other roles, it can easily create another role with different
   privileges than its own (except for creating roles with superuser
   privileges). For example, if the role <quote>user</> has the
   <literal>CREATEROLE</> privilege but not the <literal>CREATEDB</> privilege,
   nonetheless it can create a new role with the <literal>CREATEDB</>
   privilege. Therefore, regard roles that have the <literal>CREATEROLE</>
   privilege as almost-superuser-roles.
-->
<literal>CREATEROLE</>権限には注意が必要です。
<literal>CREATEROLE</> ロールという権限には継承という概念がありません。
あるロールが特定の権限を持っていなくても、別のロールを作成できることを意味します。つまり、簡単に自身の持つ権限と異なる権限（スーパーユーザ権限を持つロールは除きます）を持つ別のロールを作成できてしまいます。
たとえば、<literal>CREATEROLE</>権限を持ち、<literal>CREATEDB</>権限を持たない<quote>user</>というロールが、<literal>CREATEDB</>権限を持つロールを新規に作成することができます。
したがって、<literal>CREATEROLE</>権限を持つロールは、ほとんどスーパーユーザ権限を持つロールと同じであるものと考えてください。
  </para>

  <para>
<!--
   <productname>PostgreSQL</productname> includes a program <xref
   linkend="APP-CREATEUSER"> that has
   the same functionality as <command>CREATE ROLE</command> (in fact,
   it calls this command) but can be run from the command shell.
-->
<productname>PostgreSQL</productname>には、<command>CREATE ROLE</command>と同じ機能を持つプログラム（実際にこのコマンドを呼び出しています）<xref linkend="APP-CREATEUSER">があり、コマンドシェルから実行することができます。
  </para>

  <para>
<!--
   The <literal>CONNECTION LIMIT</> option is only enforced approximately;
   if two new sessions start at about the same time when just one
   connection <quote>slot</> remains for the role, it is possible that
   both will fail.  Also, the limit is never enforced for superusers.
-->
<literal>CONNECTION LIMIT</>オプションが加える制限は厳密ではありません。
もしそのロールに1つだけ接続<quote>スロット</>が残っていた時に、ほぼ同時に2つのセッションが新しく始まった場合、両方とも失敗する可能性があります。
また、この制限はスーパーユーザには適用されません。
  </para>

  <para>
<!--
   Caution must be exercised when specifying an unencrypted password
   with this command.  The password will be transmitted to the server
   in cleartext, and it might also be logged in the client's command
   history or the server log.  The command <xref
   linkend="APP-CREATEUSER">, however, transmits
   the password encrypted.  Also, <xref linkend="app-psql">
   contains a command
   <command>\password</command> that can be used to safely change the
   password later.
-->
このコマンドで暗号化しないパスワードを指定するときには注意しなければなりません。
パスワードはサーバに平文で送信されます。
クライアントのコマンド履歴やサーバのログにこれが残ってしまうかもしれません。
しかし、<xref linkend="APP-CREATEUSER">コマンドはパスワードを暗号化して送信します。
また、<xref linkend="app-psql">には<command>\password</command>コマンドがあり、これを使用して後でパスワードを安全に変更することができます。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Examples</title>
-->
  <title>例</title>

  <para>
<!--
   Create a role that can log in, but don't give it a password:
-->
ログイン可能なロールを作成します。ただし、パスワードはありません。
<programlisting>
CREATE ROLE jonathan LOGIN;
</programlisting>
  </para>

  <para>
<!--
   Create a role with a password:
-->
パスワード付きのロールを作成します。
<programlisting>
CREATE USER davide WITH PASSWORD 'jw8s0F4';
</programlisting>
<!--
   (<command>CREATE USER</> is the same as <command>CREATE ROLE</> except
   that it implies <literal>LOGIN</>.)
-->
<command>CREATE USER</>は<literal>LOGIN</>を意味する点を除き、<command>CREATE ROLE</>と同一です。
  </para>

  <para>
<!--
   Create a role with a password that is valid until the end of 2004.
   After one second has ticked in 2005, the password is no longer
   valid.
-->
2004年まで有効なパスワードを持つロールを作成します。
2005年に1秒でも入った時点でパスワードは無効になります。

<programlisting>
CREATE ROLE miriam WITH LOGIN PASSWORD 'jw8s0F4' VALID UNTIL '2005-01-01';
</programlisting>
  </para>

  <para>
<!--
   Create a role that can create databases and manage roles:
-->
データベースを作成でき、かつ、ロールを管理できるロールを作成します。
<programlisting>
CREATE ROLE admin WITH CREATEDB CREATEROLE;
</programlisting></para>
 </refsect1>

 <refsect1>
<!--
  <title>Compatibility</title>
-->
  <title>互換性</title>

  <para>
<!--
   The <command>CREATE ROLE</command> statement is in the SQL standard,
   but the standard only requires the syntax
-->
<command>CREATE ROLE</command>文は標準SQLで規定されています。
しかしSQLでは以下の構文のみを要求しています。
<synopsis>
CREATE ROLE <replaceable class="PARAMETER">name</> [ WITH ADMIN <replaceable class="PARAMETER">role_name</> ]
</synopsis>
<!--
   Multiple initial administrators, and all the other options of
   <command>CREATE ROLE</command>, are
   <productname>PostgreSQL</productname> extensions.
-->
複数の初期管理者やそのほかの<command>CREATE ROLE</command>のオプションは<productname>PostgreSQL</productname>の拡張です。
  </para>

  <para>
<!--
   The SQL standard defines the concepts of users and roles, but it
   regards them as distinct concepts and leaves all commands defining
   users to be specified by each database implementation.  In
   <productname>PostgreSQL</productname> we have chosen to unify
   users and roles into a single kind of entity.  Roles therefore
   have many more optional attributes than they do in the standard.
-->
標準SQLでは、ユーザとロールという概念を定義し、それらを別の概念としてみなしています。
また、ユーザを定義するコマンドはすべて、各データベース実装で規定するものとしています。
<productname>PostgreSQL</productname>では、ユーザとロールを単一の実体に統一することを選択しています。
したがって、ロールは標準よりも非常に多くのオプションの属性を持っています。
  </para>

  <para>
<!--
   The behavior specified by the SQL standard is most closely approximated
   by giving users the <literal>NOINHERIT</> attribute, while roles are
   given the <literal>INHERIT</> attribute.
-->
ユーザは<literal>NOINHERIT</>属性を与えること、ロールは<literal>INHERIT</>属性を与えることで、標準SQLで規定された振舞いに最も近くなります。

  </para>
 </refsect1>

 <refsect1>
<!--
  <title>See Also</title>
-->
  <title>関連項目</title>

  <simplelist type="inline">
   <member><xref linkend="sql-set-role"></member>
   <member><xref linkend="sql-alterrole"></member>
   <member><xref linkend="sql-droprole"></member>
   <member><xref linkend="sql-grant"></member>
   <member><xref linkend="sql-revoke"></member>
   <member><xref linkend="app-createuser"></member>
  </simplelist>
 </refsect1>
</refentry>
