<!--
doc/src/sgml/ref/alter_sequence.sgml
PostgreSQL documentation
-->

<refentry id="SQL-ALTERSEQUENCE">
 <indexterm zone="sql-altersequence">
  <primary>ALTER SEQUENCE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER SEQUENCE</refentrytitle>
  <manvolnum>7</manvolnum>
<!--
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 言語</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ALTER SEQUENCE</refname>
  <refpurpose>
<!--
   change the definition of a sequence generator
-->
   シーケンスジェネレータの定義を変更する
  </refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">name</replaceable> [ INCREMENT [ BY ] <replaceable class="parameter">increment</replaceable> ]
    [ MINVALUE <replaceable class="parameter">minvalue</replaceable> | NO MINVALUE ] [ MAXVALUE <replaceable class="parameter">maxvalue</replaceable> | NO MAXVALUE ]
    [ START [ WITH ] <replaceable class="parameter">start</replaceable> ]
    [ RESTART [ [ WITH ] <replaceable class="parameter">restart</replaceable> ] ]
    [ CACHE <replaceable class="parameter">cache</replaceable> ] [ [ NO ] CYCLE ]
    [ OWNED BY { <replaceable class="parameter">table_name</replaceable>.<replaceable class="parameter">column_name</replaceable> | NONE } ]
ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">name</replaceable> OWNER TO <replaceable class="PARAMETER">new_owner</replaceable>
ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">name</replaceable> RENAME TO <replaceable class="parameter">new_name</replaceable>
ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">name</replaceable> SET SCHEMA <replaceable class="parameter">new_schema</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
  <title>Description</title>
-->
  <title>説明</title>

  <para>
<!--
   <command>ALTER SEQUENCE</command> changes the parameters of an existing
   sequence generator.  Any parameters not specifically set in the
   <command>ALTER SEQUENCE</command> command retain their prior settings.
-->
<command>ALTER SEQUENCE</command>は、既存のシーケンスジェネレータのパラメータを変更します。
<command>ALTER SEQUENCE</command>で指定されなかったパラメータについては、以前の設定が保持されます。
  </para>

  <para>
<!--
   You must own the sequence to use <command>ALTER SEQUENCE</>.
   To change a sequence's schema, you must also have <literal>CREATE</>
   privilege on the new schema.
   To alter the owner, you must also be a direct or indirect member of the new
   owning role, and that role must have <literal>CREATE</literal> privilege on
   the sequence's schema.  (These restrictions enforce that altering the owner
   doesn't do anything you couldn't do by dropping and recreating the sequence.
   However, a superuser can alter ownership of any sequence anyway.)
-->
<command>ALTER SEQUENCE</>を使用するには、シーケンスの所有者でなければなりません。
シーケンスのスキーマを変更するには、新しいスキーマにおける<literal>CREATE</>権限も持たなければなりません。
所有者を変更するには、新しく所有者となるロールの直接または間接的なメンバでなければなりません。
またそのロールはシーケンスのスキーマ上に<literal>CREATE</literal>権限を持たなければなりません。
（これらの制限は、シーケンスの削除および再作成によりユーザが実行できないことを、所有者の変更により実行されないようにするためのものです。
しかし、スーパーユーザはすべてのシーケンスの所有者を変更することができます。）
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Parameters</title>
-->
  <title>パラメータ</title>

   <para>
    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">name</replaceable></term>
      <listitem>
       <para>
<!--
        The name (optionally schema-qualified) of a sequence to be altered.
-->
変更するシーケンスの名前です（スキーマ修飾名も可）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>IF EXISTS</literal></term>
      <listitem>
       <para>
<!--
        Do not throw an error if the sequence does not exist. A notice is issued
        in this case.
-->
シーケンスが存在しない場合にエラーとしません。
この場合、注意メッセージが発生します。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">increment</replaceable></term>
      <listitem>
       <para>
<!--
        The clause <literal>INCREMENT BY <replaceable
        class="parameter">increment</replaceable></literal> is
        optional. A positive value will make an ascending sequence, a
        negative one a descending sequence.  If unspecified, the old
        increment value will be maintained.
-->
<literal>INCREMENT BY <replaceable class="parameter">increment</replaceable></literal>句は省略可能です。
正の値が指定された時は昇順のシーケンス、負の値が指定された時は降順のシーケンスにします。
指定がない場合、以前の増分値が保持されます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">minvalue</replaceable></term>
      <term><literal>NO MINVALUE</literal></term>
      <listitem>
       <para>
<!--
        The optional clause <literal>MINVALUE <replaceable
        class="parameter">minvalue</replaceable></literal> determines
        the minimum value a sequence can generate. If <literal>NO
        MINVALUE</literal> is specified, the defaults of 1 and
        -2<superscript>63</>-1 for ascending and descending sequences,
        respectively, will be used.  If neither option is specified,
        the current minimum value will be maintained.
-->
<literal>MINVALUE <replaceable class="parameter">minvalue</replaceable></literal>句はシーケンスジェネレータが生成する最小値を決定します。
<literal>NO MINVALUE</literal>が指定された場合、昇順の時は1、降順の時は-(2<superscript>63</>-1)がデフォルトになります。
どちらのオプションも指定されていなければ、現在の最小値が保持されます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">maxvalue</replaceable></term>
      <term><literal>NO MAXVALUE</literal></term>
      <listitem>
       <para>
<!--
        The optional clause <literal>MAXVALUE <replaceable
        class="parameter">maxvalue</replaceable></literal> determines
        the maximum value for the sequence. If <literal>NO
        MAXVALUE</literal> is specified, the defaults are
        2<superscript>63</>-1 and -1 for ascending and descending
        sequences, respectively, will be used.  If neither option is
        specified, the current maximum value will be maintained.
-->
<literal>MAXVALUE <replaceable class="parameter">maxvalue</replaceable></literal>句はシーケンスが生成する最大値を決定します。
<literal>NO MAXVALUE</literal>が指定された場合、昇順の時は2<superscript>63</>-1、降順の時は-1がデフォルトになります。
どちらのオプションも指定されていなければ、現在の最大値が保持されます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">start</replaceable></term>
      <listitem>
       <para>
<!--
        The optional clause <literal>START WITH <replaceable
        class="parameter">start</replaceable></literal> changes the
        recorded start value of the sequence.  This has no effect on the
        <emphasis>current</> sequence value; it simply sets the value
        that future <command>ALTER SEQUENCE RESTART</> commands will use.
-->
<literal>START WITH <replaceable class="parameter">start</replaceable></literal>句(省略可能)は、記録されているシーケンスの開始値を変更します。
これは<emphasis>現在の</>シーケンス値に影響しません。
単に将来実行される<command>ALTER SEQUENCE RESTART</>コマンドが使用する値を設定するだけです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">restart</replaceable></term>
      <listitem>
       <para>
<!--
        The optional clause <literal>RESTART [ WITH <replaceable
        class="parameter">restart</replaceable> ]</literal> changes the
        current value of the sequence.  This is equivalent to calling the
        <function>setval</> function with <literal>is_called</literal> =
        <literal>false</>: the specified value will be returned by the
        <emphasis>next</> call of <function>nextval</>.
        Writing <literal>RESTART</> with no <replaceable
        class="parameter">restart</> value is equivalent to supplying
        the start value that was recorded by <command>CREATE SEQUENCE</>
        or last set by <command>ALTER SEQUENCE START WITH</>.
-->
<literal>RESTART WITH <replaceable class="parameter">restart</replaceable></literal>句(省略可能)は、シーケンスの現在値を変更します。
これは<literal>is_called</literal> = <literal>false</>として<function>setval</>関数を呼び出すことと同じです。
指定した値は<emphasis>次の</><function>nextval</>呼出時に返されます。
<replaceable class="parameter">restart</>を付けずに<literal>RESTART</>と記述することは、<command>CREATE SEQUENCE</>で記録、または前回<command>ALTER SEQUENCE START WITH</>で設定された開始値を指定することと同じです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">cache</replaceable></term>
      <listitem>
       <para>
<!--
        The clause <literal>CACHE <replaceable
        class="parameter">cache</replaceable></literal> enables
        sequence numbers to be preallocated and stored in memory for
        faster access. The minimum value is 1 (only one value can be
        generated at a time, i.e., no cache).  If unspecified, the old
        cache value will be maintained.
-->
<literal>CACHE <replaceable class="parameter">cache</replaceable></literal>句を使用すると、アクセスを高速化するために、シーケンス番号を事前に割り当て、メモリに保存しておくことができます。
最小値は1です（一度に生成する値が1つだけなので、キャッシュがない状態になります）。
指定がなければ、以前のキャッシュ値が保持されます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>CYCLE</literal></term>
      <listitem>
       <para>
<!--
        The optional <literal>CYCLE</literal> key word can be used to enable
        the sequence to wrap around when the
        <replaceable class="parameter">maxvalue</replaceable> or
        <replaceable class="parameter">minvalue</replaceable> has been
        reached by
        an ascending or descending sequence respectively. If the limit is
        reached, the next number generated will be the
        <replaceable class="parameter">minvalue</replaceable> or
        <replaceable class="parameter">maxvalue</replaceable>,
        respectively.
-->
<literal>CYCLE</literal>キーワードを使用すると、シーケンスが限界値（昇順の場合は<replaceable class="parameter">maxvalue</replaceable>、降順の場合は<replaceable class="parameter">minvalue</replaceable>）に達した時、そのシーケンスを周回させることができます。
限界値に達した時、次に生成される番号は、昇順の場合は<replaceable class="parameter">minvalue</replaceable>、降順の場合は<replaceable class="parameter">maxvalue</replaceable>になります。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>NO CYCLE</literal></term>
      <listitem>
       <para>
<!--
        If the optional <literal>NO CYCLE</literal> key word is
        specified, any calls to <function>nextval</function> after the
        sequence has reached its maximum value will return an error.
        If neither <literal>CYCLE</literal> or <literal>NO
        CYCLE</literal> are specified, the old cycle behavior will be
        maintained.
-->
<literal>NO CYCLE</literal>キーワードが指定されると、シーケンスの限界値に達した後の<function>nextval</function>呼び出しは全てエラーとなります。
<literal>CYCLE</literal>も<literal>NO CYCLE</literal>も指定されていない場合は、以前の周回動作が保持されます。
       </para>
      </listitem>
     </varlistentry>

   <varlistentry>
    <term><literal>OWNED BY</literal> <replaceable class="parameter">table_name</replaceable>.<replaceable class="parameter">column_name</replaceable></term>
    <term><literal>OWNED BY NONE</literal></term>
    <listitem>
     <para>
<!--
      The <literal>OWNED BY</literal> option causes the sequence to be
      associated with a specific table column, such that if that column
      (or its whole table) is dropped, the sequence will be automatically
      dropped as well.  If specified, this association replaces any
      previously specified association for the sequence.  The specified
      table must have the same owner and be in the same schema as the
      sequence.
      Specifying <literal>OWNED BY NONE</literal> removes any existing
      association, making the sequence <quote>free-standing</>.
-->
<literal>OWNED BY</literal>オプションにより、シーケンスは指定されたテーブル列に関連付けられ、その列（やテーブル全体）が削除されると、自動的にシーケンスも一緒に削除されるようになります。
指定があると、以前に指定されたシーケンスの関連は、指定された関連に置き換えられます。
指定するテーブルは、シーケンスと同一所有者でなければならず、また、同一のスキーマ内に存在しなければなりません。
<literal>OWNED BY NONE</literal>を指定することで、既存の関連は削除され、シーケンスは<quote>独立</>したものになります。

     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">new_owner</replaceable></term>
    <listitem>
     <para>
<!--
      The user name of the new owner of the sequence.
-->
シーケンスの新しい所有者のユーザ名です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_name</replaceable></term>
    <listitem>
     <para>
<!--
      The new name for the sequence.
-->
シーケンスの新しい名称です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_schema</replaceable></term>
    <listitem>
     <para>
<!--
      The new schema for the sequence.
-->
シーケンスの新しいスキーマです。
     </para>
    </listitem>
   </varlistentry>

    </variablelist>
   </para>
  </refsect1>

 <refsect1>
<!--
  <title>Notes</title>
-->
  <title>注釈</title>

  <para>
<!--
   To avoid blocking of concurrent transactions that obtain numbers from the
   same sequence, <command>ALTER SEQUENCE</command>'s effects on the sequence
   generation parameters are never rolled back; those changes take effect
   immediately and are not reversible.  However, the <literal>OWNED BY</>,
   <literal>OWNER TO</>, <literal>RENAME TO</>, and <literal>SET SCHEMA</>
   clauses cause ordinary catalog updates that can be rolled back.
-->
同じシーケンスから番号を取得するトランザクションの同時実行がブロックされるのを防ぐために、シーケンス生成パラメータに関する<command>ALTER SEQUENCE</command>の操作はロールバックされません。
すなわち、シーケンス生成パラメータの変更は即座に反映され、元に戻すことはできません。
しかし、<literal>OWNED BY</>、<literal>OWNER TO</>、<literal>RENAME TO</>および<literal>SET SCHEMA</>句は通常のカタログ更新となり、ロールバックすることができます。
  </para>

  <para>
<!--
   <command>ALTER SEQUENCE</command> will not immediately affect
   <function>nextval</> results in backends,
   other than the current one, that have preallocated (cached) sequence
   values. They will use up all cached values prior to noticing the changed
   sequence generation parameters.  The current backend will be affected
   immediately.
-->
<command>ALTER SEQUENCE</command>は、コマンドを実行したバックエンド以外のバックエンドにおける<function>nextval</>に対しては、すぐには効力を発揮しません。
これらのバックエンドに事前に割り当てられた（キャッシュされた）シーケンス値がある場合、この値を全て使い果たした後に、変更されたシーケンス生成パラメータを検知します。
コマンドを実行したバックエンドには、即座に変更が反映されます。

  </para>

  <para>
<!--
   <command>ALTER SEQUENCE</command> does not affect the <function>currval</>
   status for the sequence.  (Before <productname>PostgreSQL</productname>
   8.3, it sometimes did.)
-->
<command>ALTER SEQUENCE</command>はシーケンスの<function>currval</>状態には影響しません。
（8.3より前の<productname>PostgreSQL</productname>では影響を与える場合がありました。）
  </para>

  <para>
<!--
   For historical reasons, <command>ALTER TABLE</command> can be used with
   sequences too; but the only variants of <command>ALTER TABLE</command>
   that are allowed with sequences are equivalent to the forms shown above.
-->
歴史的な理由により<command>ALTER TABLE</command>はシーケンスにも使用することができます。
しかし、シーケンスに対して許される<command>ALTER TABLE</command>の構文は、上で示した構文と等価なものだけです。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Examples</title>
-->
  <title>例</title>

  <para>
<!--
   Restart a sequence called <literal>serial</literal>, at 105:
-->
<literal>serial</literal>というシーケンスを105から再開します。
<programlisting>
ALTER SEQUENCE serial RESTART WITH 105;
</programlisting></para>
 </refsect1>

 <refsect1>
<!--
  <title>Compatibility</title>
-->
  <title>互換性</title>

  <para>
<!--
   <command>ALTER SEQUENCE</command> conforms to the <acronym>SQL</acronym>
   standard, except for the <literal>START WITH</>,
   <literal>OWNED BY</>, <literal>OWNER TO</>, <literal>RENAME TO</>, and
   <literal>SET SCHEMA</literal> clauses, which are
   <productname>PostgreSQL</productname> extensions.
-->
<command>ALTER SEQUENCE</command>は、<productname>PostgreSQL</productname>の拡張である<literal>START WITH</>、<literal>OWNED BY</>、<literal>OWNER TO</>、<literal>RENAME TO</>、<literal>SET SCHEMA</literal>構文を除いて、標準<acronym>SQL</acronym>に従っています。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>See Also</title>
-->
  <title>関連項目</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createsequence"></member>
   <member><xref linkend="sql-dropsequence"></member>
  </simplelist>
 </refsect1>

</refentry>
