<!--
doc/src/sgml/ref/create_extension.sgml
PostgreSQL documentation
-->

<refentry id="sql-createextension">
 <indexterm zone="sql-createextension">
  <primary>CREATE EXTENSION</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE EXTENSION</refentrytitle>
  <manvolnum>7</manvolnum>
<!--
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
  <refmiscinfo>SQL - 言語</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE EXTENSION</refname>
<!--
  <refpurpose>install an extension</refpurpose>
-->
  <refpurpose>拡張をインストールする</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
CREATE EXTENSION [ IF NOT EXISTS ] <replaceable class="parameter">extension_name</replaceable>
    [ WITH ] [ SCHEMA <replaceable class="parameter">schema_name</replaceable> ]
             [ VERSION <replaceable class="parameter">version</replaceable> ]
             [ CASCADE ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
  <title>Description</title>
-->
  <title>説明</title>

  <para>
<!--
   <command>CREATE EXTENSION</command> loads a new extension into the current
   database.  There must not be an extension of the same name already loaded.
-->
<command>CREATE EXTENSION</command>は現在のデータベース内に新しい拡張を読み込みます。
読み込み済みの拡張と同じ名前の拡張を読み込むことはできません。
  </para>

  <para>
<!--
   Loading an extension essentially amounts to running the extension's script
   file.  The script will typically create new <acronym>SQL</acronym> objects such as
   functions, data types, operators and index support methods.
   <command>CREATE EXTENSION</command> additionally records the identities
   of all the created objects, so that they can be dropped again if
   <command>DROP EXTENSION</command> is issued.
-->
拡張の読み込みは基本的に拡張のスクリプトファイルを実行することと同じです。
スクリプトは通常、関数、データ型、演算子、インデックスサポートメソッドなどの<acronym>SQL</acronym>オブジェクトを新しく作成するものです。
<command>CREATE EXTENSION</command>はさらに作成したすべてのオブジェクト識別子を記録して、<command>DROP EXTENSION</command>が発行された時に削除できるようにします。
  </para>

  <para>
<!--
   The user who runs <command>CREATE EXTENSION</command> becomes the
   owner of the extension for purposes of later privilege checks, and
   normally also becomes the owner of any objects created by the
   extension's script.
-->
<command>CREATE EXTENSION</command>を実行するユーザは、後で実施される権限検査のためにその拡張の所有者となります。また通常このユーザは拡張のスクリプトにより作成されたすべてのオブジェクトの所有者となります。
  </para>

  <para>
<!--
   Loading an extension ordinarily requires the same privileges that would
   be required to create its component objects.  For many extensions this
   means superuser privileges are needed.
   However, if the extension is marked <firstterm>trusted</firstterm> in
   its control file, then it can be installed by any user who has
   <literal>CREATE</literal> privilege on the current database.
   In this case the extension object itself will be owned by the calling
   user, but the contained objects will be owned by the bootstrap superuser
   (unless the extension's script explicitly assigns them to the calling
   user).  This configuration gives the calling user the right to drop the
   extension, but not to modify individual objects within it.
-->
拡張の読み込みでは、通常その要素オブジェクトを作成するために必要となるいくつかの権限が必要です。
多くの拡張では、これはスーパーユーザの権限が必要であることを意味します。
しかしながら、制御ファイルで<firstterm>trusted</firstterm>と印付けされた拡張は、現在のデータベースに対して<literal>CREATE</literal>権限を持つユーザであれば誰でもインストールできます。
この場合拡張オブジェクト自身は呼び出したユーザが所有しますが、そこに含まれるオブジェクトは(拡張スクリプトが明示的に呼び出したユーザに対して割り当てない限り)ブートストラップスーパーユーザが所有します。
この設定は呼び出したユーザに拡張を削除する権限を与えますが、その中の個々のオブジェクトを修正する権限は与えません。
  </para>

 </refsect1>

 <refsect1>
<!--
  <title>Parameters</title>
-->
  <title>パラメータ</title>

    <variablelist>
     <varlistentry>
      <term><literal>IF NOT EXISTS</literal></term>
      <listitem>
       <para>
<!--
        Do not throw an error if an extension with the same name already
        exists.  A notice is issued in this case.  Note that there is no
        guarantee that the existing extension is anything like the one that
        would have been created from the currently-available script file.
-->
同じ名前の拡張がすでに存在していてもエラーにしません。
この場合注意が発せられます。
既存の拡張が、現在利用可能なスクリプトファイルより作成されるものと何かしら似たものであることは保証されません。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">extension_name</replaceable></term>
      <listitem>
       <para>
<!--
        The name of the extension to be
        installed. <productname>PostgreSQL</productname> will create the
        extension using details from the file <filename><replaceable
        class="parameter">extension_name</replaceable>.control</filename>,
        found via the server's extension control path (set by <xref
        linkend="guc-extension-control-path"/>.)
-->
インストールする拡張の名前です。
<productname>PostgreSQL</productname>は、（<xref linkend="guc-extension-control-path"/>で設定される）サーバの拡張制御パス経由で見つけたファイル<filename><replaceable class="parameter">extension_name</replaceable>.control</filename>から詳細を読み取り、拡張を作成します。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">schema_name</replaceable></term>
      <listitem>
       <para>
<!--
        The name of the schema in which to install the extension's
        objects, given that the extension allows its contents to be
        relocated.  The named schema must already exist.
        If not specified, and the extension's control file does not specify a
        schema either, the current default object creation schema is used.
-->
拡張の内容を再配置させることができる場合に、拡張のオブジェクトをインストールするスキーマの名前です。
指定されたスキーマは事前に存在していなければなりません。
指定がなく、拡張の制御ファイルでもスキーマを指定していない場合、現在のデフォルトのオブジェクト生成用スキーマが使用されます。
       </para>

       <para>
<!--
        If the extension specifies a <literal>schema</literal> parameter in its
        control file, then that schema cannot be overridden with
        a <literal>SCHEMA</literal> clause.  Normally, an error will be raised if
        a <literal>SCHEMA</literal> clause is given and it conflicts with the
        extension's <literal>schema</literal> parameter.  However, if
        the <literal>CASCADE</literal> clause is also given,
        then <replaceable class="parameter">schema_name</replaceable> is
        ignored when it conflicts.  The
        given <replaceable class="parameter">schema_name</replaceable> will be
        used for installation of any needed extensions that do not
        specify <literal>schema</literal> in their control files.
-->
拡張がその制御ファイルで<literal>schema</literal>パラメータを指定している場合、そのスキーマを<literal>SCHEMA</literal>句で上書きすることはできません。
<literal>SCHEMA</literal>句が指定され、それが拡張の<literal>schema</literal>パラメータと相容れない場合、通常はエラーが発生します。
しかし、<literal>CASCADE</literal>句も指定されている場合は、<replaceable class="parameter">schema_name</replaceable>が相容れなければ、それを無視します。
必要なすべての拡張のインストールにおいて、それぞれの制御ファイルで<literal>schema</literal>が指定されていなければ、指定された<replaceable class="parameter">schema_name</replaceable>が使用されます。
       </para>

       <para>
<!--
        Remember that the extension itself is not considered to be within any
        schema: extensions have unqualified names that must be unique
        database-wide.  But objects belonging to the extension can be within
        schemas.
-->
拡張自体が任意のスキーマの中にあるとみなされていないことを思い出してください。
拡張は修飾がない名前を持ちますので、データベース全体で一意でなければなりません。
しかし拡張に属するオブジェクトはスキーマの中に置くことができます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">version</replaceable></term>
      <listitem>
       <para>
<!--
        The version of the extension to install.  This can be written as
        either an identifier or a string literal.  The default version is
        whatever is specified in the extension's control file.
-->
インストールする拡張のバージョンです。
これは識別子あるいは文字列リテラルのいずれかとして記述できます。
デフォルトのバージョンは拡張の制御ファイル内で規定したものになります。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>CASCADE</literal></term>
      <listitem>
       <para>
<!--
        Automatically install any extensions that this extension depends on
        that are not already installed.  Their dependencies are likewise
        automatically installed, recursively.  The <literal>SCHEMA</literal> clause,
        if given, applies to all extensions that get installed this way.
        Other options of the statement are not applied to
        automatically-installed extensions; in particular, their default
        versions are always selected.
-->
この拡張が依存し、まだインストールされていないすべての拡張を自動的にインストールします。
それらが依存するものも同様に再帰的にインストールされます。
<literal>SCHEMA</literal>句が指定されている場合は、これによってインストールされるすべての拡張に適用されます。
この文の他のオプションは自動的にインストールされる拡張には適用されません。
特に、そのデフォルトバージョンは常に選択されます。
       </para>
      </listitem>
     </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!--
  <title>Notes</title>
-->
  <title>注釈</title>

  <para>
<!--
   Before you can use <command>CREATE EXTENSION</command> to load an extension
   into a database, the extension's supporting files must be installed.
   Information about installing the extensions supplied with
   <productname>PostgreSQL</productname> can be found in
   <link linkend="contrib">Additional Supplied Modules</link>.
-->
拡張をデータベースにロードするために<command>CREATE EXTENSION</command>を使用できるようになる前に、拡張のサポートファイルがインストールされていなければなりません。
<productname>PostgreSQL</productname>が提供する拡張のインストールに関する情報は、<link linkend="contrib">追加で提供されるモジュール</link>で説明します。
  </para>

  <para>
<!--
   The extensions currently available for loading can be identified from the
   <link linkend="view-pg-available-extensions"><structname>pg_available_extensions</structname></link>
   or
   <link linkend="view-pg-available-extension-versions"><structname>pg_available_extension_versions</structname></link>
   system views.
-->
現在ロード可能な拡張は<link linkend="view-pg-available-extensions"><structname>pg_available_extensions</structname></link>または<link linkend="view-pg-available-extension-versions"><structname>pg_available_extension_versions</structname></link>システムビューで識別できます。
  </para>

  <caution>
   <para>
<!--
    Installing an extension as superuser requires trusting that the
    extension's author wrote the extension installation script in a secure
    fashion.  It is not terribly difficult for a malicious user to create
    trojan-horse objects that will compromise later execution of a
    carelessly-written extension script, allowing that user to acquire
    superuser privileges.  However, trojan-horse objects are only hazardous
    if they are in the <varname>search_path</varname> during script
    execution, meaning that they are in the extension's installation target
    schema or in the schema of some extension it depends on.  Therefore, a
    good rule of thumb when dealing with extensions whose scripts have not
    been carefully vetted is to install them only into schemas for which
    CREATE privilege has not been and will not be granted to any untrusted
    users.  Likewise for any extensions they depend on.
-->
スーパーユーザとして拡張をインストールするには、拡張の作者が安全な方法で拡張のインストールスクリプトを書いたと信用することが必要です。
悪意のあるユーザが、不注意に書かれた拡張スクリプトの以降の実行を危険に晒すトロイの木馬オブジェクトを作り、そのユーザがスーパーユーザの権限を得るようにするのは、それほど難しいことではありません。
しかしながら、トロイの木馬オブジェクトはスクリプト実行時に<varname>search_path</varname>にある場合にのみ危険です。これは拡張のインストール対象スキーマや依存する拡張のスキーマにあるということを意味します。
そのため、スクリプトが注意深く検査されていない拡張を扱う優れた経験則は、信頼できないユーザにCREATE権限を許可していないし、今後も許可することのないスキーマにのみ、その拡張をインストールすることです。
その拡張が依存する拡張についても同様です。
   </para>

   <para>
<!--
    The extensions supplied with <productname>PostgreSQL</productname> are
    believed to be secure against installation-time attacks of this sort,
    except for a few that depend on other extensions.  As stated in the
    documentation for those extensions, they should be installed into secure
    schemas, or installed into the same schemas as the extensions they
    depend on, or both.
-->
<productname>PostgreSQL</productname>が提供する拡張は、他の拡張に依存する少数のものを除いて、この種のインストール時の攻撃に対して安全であると信じられています。
各拡張の文書で述べているように、拡張は安全なスキーマにインストールするか、依存する拡張と同じスキーマにインストールするか、あるいはその両方であるスキーマにインストールすべきです。
   </para>
  </caution>

  <para>
<!--
   For information about writing new extensions, see
   <xref linkend="extend-extensions"/>.
-->
新しい拡張の作成に関しては<xref linkend="extend-extensions"/>を参照してください。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Examples</title>
-->
  <title>例</title>

  <para>
<!--
   Install the <link linkend="hstore">hstore</link> extension into the
   current database, placing its objects in schema <literal>addons</literal>:
-->
そのオブジェクトを<literal>addons</literal>スキーマに配置して、現在のデータベースに<link linkend="hstore">hstore</link>拡張をインストールします。
<programlisting>
CREATE EXTENSION hstore SCHEMA addons;
</programlisting>
<!--
   Another way to accomplish the same thing:
-->
以下は同様のことを行なう別の方法です。
<programlisting>
SET search_path = addons;
CREATE EXTENSION hstore;
</programlisting></para>
 </refsect1>

 <refsect1>
<!--
  <title>Compatibility</title>
-->
  <title>互換性</title>

  <para>
<!--
   <command>CREATE EXTENSION</command> is a <productname>PostgreSQL</productname>
   extension.
-->
<command>CREATE EXTENSION</command>は<productname>PostgreSQL</productname>の拡張です。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>See Also</title>
-->
  <title>関連項目</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterextension"/></member>
   <member><xref linkend="sql-dropextension"/></member>
  </simplelist>
 </refsect1>

</refentry>
