<!-- doc/src/sgml/charset.sgml -->

<chapter id="charset">
<!--
 <title>Localization</title>
-->
<title>多言語対応</title>

 <para>
<!--
  This chapter describes the available localization features from the
  point of view of the administrator.
  <productname>PostgreSQL</productname> supports two localization
  facilities:
-->
本章では、管理者の立場から見た、利用可能な多言語対応機能について説明します。
<productname>PostgreSQL</productname>では、2つの手法で多言語対応をサポートします。

   <itemizedlist>
    <listitem>
     <para>
<!--
      Using the locale features of the operating system to provide
      locale-specific collation order, number formatting, translated
      messages, and other aspects.
      This is covered in <xref linkend="locale"> and
      <xref linkend="collation">.
-->
ロケール固有の照合順序、数字の書式、翻訳されたメッセージなどを提供するためオペレーティングシステムのロケールの機能を使います。
これは<xref linkend="locale">と<xref linkend="collation">内で解説されています。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Providing a number of different character sets to support storing text
      in all kinds of languages, and providing character set translation
      between client and server.
      This is covered in <xref linkend="multibyte">.
-->
全ての種類の言語によるテキストの格納のサポート、およびクライアントサーバ間の文字セット翻訳の提供を行うため、多くの文字セットを提供します。
これは<xref linkend="multibyte">内で解説されています。
     </para>
    </listitem>
   </itemizedlist>
  </para>


 <sect1 id="locale">
<!--
  <title>Locale Support</title>
-->
<title>ロケールのサポート</title>

<!--
  <indexterm zone="locale"><primary>locale</></>
-->
  <indexterm zone="locale"><primary>ロケール</></>

  <para>
<!--
   <firstterm>Locale</> support refers to an application respecting
   cultural preferences regarding alphabets, sorting, number
   formatting, etc.  <productname>PostgreSQL</> uses the standard ISO
   C and <acronym>POSIX</acronym> locale facilities provided by the server operating
   system.  For additional information refer to the documentation of your
   system.
-->
<firstterm>ロケール</>のサポートはアルファベット、並び換え、数字の書式など文化的嗜好を配慮したアプリケーションを対象にします。
<productname>PostgreSQL</>は、サーバのオペレーティングシステムが提供する、標準ISO Cと<acronym>POSIX</acronym>のロケール機能を使用します。
これ以上の情報についてはお使いのシステムのドキュメントを参照ください。
  </para>

  <sect2>
<!--
   <title>Overview</title>
-->
<title>概要</title>

   <para>
<!--
    Locale support is automatically initialized when a database
    cluster is created using <command>initdb</command>.
    <command>initdb</command> will initialize the database cluster
    with the locale setting of its execution environment by default,
    so if your system is already set to use the locale that you want
    in your database cluster then there is nothing else you need to
    do.  If you want to use a different locale (or you are not sure
    which locale your system is set to), you can instruct
    <command>initdb</command> exactly which locale to use by
    specifying the <option>&#045;&#045;locale</option> option. For example:
-->
ロケールのサポートは、<command>initdb</command>を使用してデータベースクラスタを作成する時自動的に初期化されます。 
<command>initdb</command>は、デフォルトでその実行環境のロケール設定に従ってデータベースクラスタを初期化します。
そのため、システムがデータベースクラスタで使用したいロケールを使用するように既に設定してある場合は何も行う必要はありません。  
違うロケールを使用したい場合（またはシステムのロケール設定が不明な場合）は、<command>initdb</command>の<option>--locale</option>オプションで希望のロケールを指定することができます。
以下に例を示します。
<screen>
initdb --locale=sv_SE
</screen>
   </para>

   <para>
<!--
    This example for Unix systems sets the locale to Swedish
    (<literal>sv</>) as spoken
    in Sweden (<literal>SE</>).  Other possibilities might include
    <literal>en_US</> (U.S. English) and <literal>fr_CA</> (French
    Canadian).  If more than one character set can be used for a
    locale then the specifications can take the form
    <replaceable>language_territory.codeset</>.  For example,
    <literal>fr_BE.UTF-8</> represents the French language (fr) as
    spoken in Belgium (BE), with a <acronym>UTF-8</> character set
    encoding.
-->
Unixシステム用のこの例の設定はロケールをスウェーデン（<literal>SE</>）で使用されているスウェーデン語（<literal>sv</>）に合わせています。
他にも<literal>en_US</>（米国英語）や<literal>fr_CA</>（カナダのフランス語）などの設定もできます。  
ロケールに複数の文字セットが使用可能であれば、<replaceable>language_territory.codeset</>のように記述することができます。
例えば、<literal>fr_BE.UTF-8</>はベルギー（BE）で使用されているフランス語（fr）で<acronym>UTF-8</>の文字セットを表します。
   </para>

   <para>
<!--
    What locales are available on your
    system under what names depends on what was provided by the operating
    system vendor and what was installed.  On most Unix systems, the command
    <literal>locale -a</> will provide a list of available locales.
    Windows uses more verbose locale names, such as <literal>German_Germany</>
    or <literal>Swedish_Sweden.1252</>, but the principles are the same.
-->
お使いのシステムでどのロケールがどういう名前で使えるかはオペレーティングシステムのベンダがどのようなものを提供しているかと、何がインストールされているかに依存します。
ほとんどのUnixシステムでは、<literal>locale -a</>というコマンドで利用可能なロケールの一覧を入手することができます。
Windowsは、<literal>German_Germany</>や<literal>Swedish_Sweden.1252</>のようなもっと冗長なロケール名を使用しますが、原理は同じです。
   </para>

   <para>
<!--
    Occasionally it is useful to mix rules from several locales, e.g.,
    use English collation rules but Spanish messages.  To support that, a
    set of locale subcategories exist that control only certain
    aspects of the localization rules:
-->
英語の照合規則でスペイン語のメッセージを使用する時など、時として複数のロケールの規則を併用すると便利です。
これをサポートするために、ロケールには以下のような多言語対応規則の特定の箇所だけを管理する一連のサブカテゴリがあります。

    <informaltable>
     <tgroup cols="2">
      <tbody>
       <row>
        <entry><envar>LC_COLLATE</></>
<!--
        <entry>String sort order</>
-->
<entry>文字列の並び換え順</>
       </row>
       <row>
        <entry><envar>LC_CTYPE</></>
<!--
        <entry>Character classification (What is a letter? Its upper-case equivalent?)</>
-->
<entry>文字の分類（文字とはどんなもの？大文字小文字を区別しない？）</>
       </row>
       <row>
        <entry><envar>LC_MESSAGES</></>
<!--
        <entry>Language of messages</>
-->
<entry>メッセージの言語</>
       </row>
       <row>
        <entry><envar>LC_MONETARY</></>
<!--
        <entry>Formatting of currency amounts</>
-->
<entry>通貨書式</>
       </row>
       <row>
        <entry><envar>LC_NUMERIC</></>
<!--
        <entry>Formatting of numbers</>
-->
<entry>数字の書式</>
       </row>
       <row>
        <entry><envar>LC_TIME</></>
<!--
        <entry>Formatting of dates and times</>
-->
<entry>日付と時刻の書式</>
       </row>
      </tbody>
     </tgroup>
    </informaltable>

<!--
    The category names translate into names of
    <command>initdb</command> options to override the locale choice
    for a specific category.  For instance, to set the locale to
    French Canadian, but use U.S. rules for formatting currency, use
    <literal>initdb &#045;&#045;locale=fr_CA &#045;&#045;lc-monetary=en_US</literal>.
-->
これらのカテゴリの名前は、特定のカテゴリについてのロケールの選択を上書きするための<command>initdb</command>オプションの名前としてそのまま使用できます。
例えば、ロケールをカナダのフランス語に設定しながら通貨書式については米国の規則を使用するには、<literal>initdb --locale=fr_CA --lc-monetary=en_US</literal>とします。
   </para>

   <para>
<!--
    If you want the system to behave as if it had no locale support,
    use the special locale name <literal>C</>, or equivalently
    <literal>POSIX</>.
-->
システムがロケールをサポートしていないように動作させたい場合は、特別なロケールの<literal>C</>、もしくは同等な<literal>POSIX</>を使用してください。
   </para>

   <para>
<!--
    Some locale categories must have their values
    fixed when the database is created.  You can use different settings
    for different databases, but once a database is created, you cannot
    change them for that database anymore. <literal>LC_COLLATE</literal>
    and <literal>LC_CTYPE</literal> are these categories.  They affect
    the sort order of indexes, so they must be kept fixed, or indexes on
    text columns would become corrupt.
    (But you can alleviate this restriction using collations, as discussed
    in <xref linkend="collation">.)
    The default values for these
    categories are determined when <command>initdb</command> is run, and
    those values are used when new databases are created, unless
    specified otherwise in the <command>CREATE DATABASE</command> command.
-->
一部のロケールカテゴリでは、その値がデータベース生成時に固定されていなければならないものがあります。
他のデータベースで他の設定を使用することができますが、一度データベースが生成されると、そのデータベースでは変更することができません。
<literal>LC_COLLATE</literal>と<literal>LC_CTYPE</literal>がこれらのカテゴリにあてはまります。
これらはインデックスのソート順に影響を及ぼすため、固定されていなければなりません。
さもないと、テキスト型の列上のインデックスは破壊されるでしょう。
(しかし<xref linkend="collation">内で述べられているように、照合を使用することで、この制限を緩和することができます)
<command>initdb</command>が実行された時に、これらのカテゴリのデフォルト値は決定され、<command>CREATE DATABASE</command>コマンドで他を指定しない限り、新しいデータベースが作成されるときにこの値が使用されます。
   </para>

   <para>
<!--
    The other locale categories can be changed whenever desired
    by setting the server configuration parameters
    that have the same name as the locale categories (see <xref
    linkend="runtime-config-client-format"> for details).  The values
    that are chosen by <command>initdb</command> are actually only written
    into the configuration file <filename>postgresql.conf</filename> to
    serve as defaults when the server is started.  If you remove these
    assignments from <filename>postgresql.conf</filename> then the
    server will inherit the settings from its execution environment.
-->
その他のロケールカテゴリは、いつでも、ロケールカテゴリと同じ名前の実行時パラメータを設定することで、希望値に変更することができます
（詳細は<xref linkend="runtime-config">を参照してください）。
<command>initdb</command>で選択された値は、実際のところ、サーバの起動時にデフォルトとして動作するように<filename>postgresql.conf</filename>設定ファイルに書き込まれるだけです。
この代入文を<filename>postgresql.conf</filename>から削除すると、サーバは実行環境の設定をそのまま使用します。
   </para>

   <para>
<!--
    Note that the locale behavior of the server is determined by the
    environment variables seen by the server, not by the environment
    of any client.  Therefore, be careful to configure the correct locale settings
    before starting the server.  A consequence of this is that if
    client and server are set up in different locales, messages might
    appear in different languages depending on where they originated.
-->
サーバのロケールの動作はどのクライアントの環境にも依存せず、サーバが参照できる環境変数で決まります。
ですからサーバを稼動させる前に正しいロケール設定を行うように注意してください。
結果としてサーバとクライアントで異なるロケールが設定されていると、メッセージはそれらがどこから生じたかによって、異なる言語で表示されます。
   </para>

   <note>
    <para>
<!--
     When we speak of inheriting the locale from the execution
     environment, this means the following on most operating systems:
     For a given locale category, say the collation, the following
     environment variables are consulted in this order until one is
     found to be set: <envar>LC_ALL</envar>, <envar>LC_COLLATE</envar>
     (or the variable corresponding to the respective category),
     <envar>LANG</envar>.  If none of these environment variables are
     set then the locale defaults to <literal>C</literal>.
-->
実行環境のロケールをそのまま使用するということは、ほとんどのオペレーティングシステムでは次のような意味を持ちます。
指定されたロケールカテゴリ（例えば照合）について、設定するものが見つかるまで、以下の環境変数がこの順番で調べられます。<envar>LC_ALL</envar>、<envar>LC_COLLATE</envar>（またはそれぞれのカテゴリに対応する変数）、<envar>LANG</envar>。
これらのいずれの環境変数も設定されない場合に、ロケールはデフォルトで<literal>C</literal>に設定されます。
    </para>

    <para>
<!--
     Some message localization libraries also look at the environment
     variable <envar>LANGUAGE</envar> which overrides all other locale
     settings for the purpose of setting the language of messages.  If
     in doubt, please refer to the documentation of your operating
     system, in particular the documentation about
     <application>gettext</>.
-->
メッセージの言語を設定する目的で、メッセージ多言語化ライブラリの中には全てのロケール設定を上書きする環境変数<envar>LANGUAGE</envar>を検索するものがあります。
お使いのシステムでの挙動が不明ならばより詳細な情報を得るためお使いのオペレーティングシステムの文書、特に<application>gettext</>の文書を参照してください。
    </para>
   </note>

   <para>
<!--
    To enable messages to be translated to the user's preferred language,
    <acronym>NLS</acronym> must have been selected at build time
    (<literal>configure &#045;-enable-nls</>).  All other locale support is
    built in automatically.
-->
ユーザの選択した言語にメッセージを翻訳できるようにするためには<acronym>NLS</acronym>を構築時に有効にする（<literal>configure --enable-nls</>）必要があります。
他のロケールサポートはすべて自動的に構築されます。
   </para>
  </sect2>

  <sect2>
<!--
   <title>Behavior</title>
-->
<title>動作</title>

   <para>
<!--
    The locale settings influence the following SQL features:
-->
ロケールの設定は以下のSQL機能に影響を与えます。

    <itemizedlist>
     <listitem>
      <para>
<!--
       Sort order in queries using <literal>ORDER BY</> or the standard
       comparison operators on textual data
       <indexterm><primary>ORDER BY</><secondary>and locales</></indexterm>
-->
文字列データに対する<literal>ORDER BY</>または標準の比較演算子を使用した問い合わせにおける並び替え順
<indexterm><primary>ORDER BY</><secondary>とロケール</></indexterm>
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       The <function>upper</>, <function>lower</>, and <function>initcap</>
       functions
       <indexterm><primary>upper</><secondary>and locales</></indexterm>
       <indexterm><primary>lower</><secondary>and locales</></indexterm>
-->
<function>upper</>、<function>lower</>、<function>initcap</>関数
<indexterm><primary>upper</><secondary>とロケール</></indexterm>
<indexterm><primary>lower</><secondary>とロケール</></indexterm>
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Pattern matching operators (<literal>LIKE</>, <literal>SIMILAR TO</>,
       and POSIX-style regular expressions); locales affect both case
       insensitive matching and the classification of characters by
       character-class regular expressions
       <indexterm><primary>LIKE</><secondary>and locales</></indexterm>
       <indexterm><primary>regular expressions</><secondary>and locales</></indexterm>
-->
(<literal>LIKE</>、<literal>SIMILAR TO</>やPOSIX形式の正規表現といった)パターンマッチング演算子では
ロケールは大文字、小文字を区別せず正規表現の文字クラスによる文字の区別に影響を及ぼします。
<indexterm><primary>LIKE</><secondary>とロケール</></indexterm>
<indexterm><primary>正規表現</><secondary>とロケール</></indexterm>
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       The <function>to_char</> family of functions
       <indexterm><primary>to_char</><secondary>and locales</></indexterm>
-->
一群の<function>to_char</>関数
<indexterm><primary>to_char</><secondary>とロケール</></indexterm>
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       The ability to use indexes with <literal>LIKE</> clauses
-->
<literal>LIKE</>節が付いたインデックスを使用する性能
      </para>
     </listitem>
    </itemizedlist>
   </para>

   <para>
<!--
    The drawback of using locales other than <literal>C</> or
    <literal>POSIX</> in <productname>PostgreSQL</> is its performance
    impact. It slows character handling and prevents ordinary indexes
    from being used by <literal>LIKE</>. For this reason use locales
    only if you actually need them.
-->
<literal>C</>や<literal>POSIX</>以外で、<productname>PostgreSQL</>でロケールを使用する際の欠点は実行速度です。
ロケールは文字の扱いを遅くし、さらに<literal>LIKE</>で通常のインデックスが使用されなくなります。この理由から、本当に必要な時のみロケールを使用してください。
   </para>

   <para>
<!--
    As a workaround to allow <productname>PostgreSQL</> to use indexes
    with <literal>LIKE</> clauses under a non-C locale, several custom
    operator classes exist. These allow the creation of an index that
    performs a strict character-by-character comparison, ignoring
    locale comparison rules. Refer to <xref linkend="indexes-opclass">
    for more information.  Another approach is to create indexes using
    the <literal>C</> collation, as discussed in
    <xref linkend="collation">.
-->
C以外のロケールにおいて、<productname>PostgreSQL</>が<literal>LIKE</>句を持つインデックスを使用できるようにする回避方法として、いくつかのカスタム演算子クラスがあります。
これらを用いると、文字と文字を厳密に比較するようなインデックスや、ロケールの比較規則を無視するようなインデックスを作成できます。
詳細は<xref linkend="indexes-opclass">を参照してください。
もうひとつの方法は、<xref linkend="collation">内で解説されているような<literal>C</>照合を使用してインデックスを作成することです。
   </para>
  </sect2>

  <sect2>
<!--
   <title>Problems</title>
-->
<title>問題点</title>

   <para>
<!--
    If locale support doesn't work according to the explanation above,
    check that the locale support in your operating system is
    correctly configured.  To check what locales are installed on your
    system, you can use the command <literal>locale -a</literal> if
    your operating system provides it.
-->
上記の説明に従ってロケールのサポートが正常に動作しない場合、オペレーティングシステムのロケールサポートが正確に設定されているか確認してください。
指定されたロケールがインストールされているかどうか確認するために、オペレーティングシステムが提供していれば、<literal>locale -a</literal>コマンドを使用することができます。
   </para>

   <para>
<!--
    Check that <productname>PostgreSQL</> is actually using the locale
    that you think it is.  The <envar>LC_COLLATE</> and <envar>LC_CTYPE</>
    settings are determined when a database is created, and cannot be
    changed except by creating a new database.  Other locale
    settings including <envar>LC_MESSAGES</> and <envar>LC_MONETARY</>
    are initially determined by the environment the server is started
    in, but can be changed on-the-fly.  You can check the active locale
    settings using the <command>SHOW</> command.
-->
<productname>PostgreSQL</>が想定しているロケールを実際に使用しているかどうかを確認してください。
<envar>LC_COLLATE</>と<envar>LC_CTYPE</>の設定はデータベース作成時に決定され、新しいデータベースを作成する方法以外に変更することはできません。
<envar>LC_MESSAGES</>や<envar>LC_MONETARY</>など他のロケール設定はサーバ起動時の環境変数によって初めに決定されますが、その場で変更することができます。
<command>SHOW</>コマンドを使用して、使用中のロケール設定を確認することができます。
   </para>

   <para>
<!--
    The directory <filename>src/test/locale</> in the source
    distribution contains a test suite for
    <productname>PostgreSQL</>'s locale support.
-->
ソース配布物の<filename>src/test/locale</>ディレクトリには、<productname>PostgreSQL</>のロケールサポート用の試験一式があります。
   </para>

   <para>
<!--
    Client applications that handle server-side errors by parsing the
    text of the error message will obviously have problems when the
    server's messages are in a different language.  Authors of such
    applications are advised to make use of the error code scheme
    instead.
-->
エラーメッセージ内のテキストを解析してサーバ側のエラーを扱っているクライアントアプリケーションでは、サーバのメッセージが異なる言語で記載されると、明らかに問題になります。
こうしたアプリケーションの作者には、エラーコードスキーマで代替させることを推奨します。
   </para>

   <para>
<!--
    Maintaining catalogs of message translations requires the on-going
    efforts of many volunteers that want to see
    <productname>PostgreSQL</> speak their preferred language well.
    If messages in your language are currently not available or not fully
    translated, your assistance would be appreciated.  If you want to
    help, refer to <xref linkend="nls"> or write to the developers'
    mailing list.
-->
メッセージ翻訳のカタログのメンテナンスには<productname>PostgreSQL</>に選択した言語を話させてみたいという数多くのボランティアのたゆみのない努力を必要としています。
もしあなたの言語が現在使えなかったり完全に翻訳されてない場合、助力をよろしくお願いします。
もし助力頂けるのであれば、<xref linkend="nls">を参照するか開発グループのメーリングリストに投稿してください。
   </para>
  </sect2>
 </sect1>


 <sect1 id="collation">
<!--
  <title>Collation Support</title>
-->
  <title>照合サポート</title>

  <indexterm zone="collation"><primary>collation</></>

  <para>
<!--
   The collation feature allows specifying the sort order and character
   classification behavior of data per-column, or even per-operation.
   This alleviates the restriction that the
   <symbol>LC_COLLATE</symbol> and <symbol>LC_CTYPE</symbol> settings
   of a database cannot be changed after its creation.
-->
照合機能は、ソート順番と列ごともしくは操作ごとのデータの文字区別の振る舞いを指定することを許可します。
これは、作成後のデータベースの<symbol>LC_COLLATE</symbol>と<symbol>LC_CTYPE</symbol>の設定が変更できない制限を緩和します。
  </para>

  <sect2>
<!--
   <title>Concepts</title>
-->
   <title>概念</title>

   <para>
<!--
    Conceptually, every expression of a collatable data type has a
    collation.  (The built-in collatable data types are
    <type>text</type>, <type>varchar</type>, and <type>char</type>.
    User-defined base types can also be marked collatable, and of course
    a domain over a collatable data type is collatable.)  If the
    expression is a column reference, the collation of the expression is the
    defined collation of the column.  If the expression is a constant, the
    collation is the default collation of the data type of the
    constant.  The collation of a more complex expression is derived
    from the collations of its inputs, as described below.
-->
概念的に照合可能なデータ型のそれぞれの式は、照合を保持しています
(ビルトインされている照合可能なデータ型は<type>text</type>、<type>varchar</type>、 <type>char</type>です。
ユーザ定義の基本型は照合可能とマーキングできます。もちろん照合可能なデータ型上のドメインは照合可能となります)。
もし、式が列参照である場合は、式の照合は列の定義された照合となります。
もし、式が定数である場合は、照合は定数のデータ型のデフォルトの照合となります。
より複雑な式の照合は、下記に示すように、その入力の照合から引き出されます。
   </para>

   <para>
<!--
    The collation of an expression can be the <quote>default</quote>
    collation, which means the locale settings defined for the
    database.  It is also possible for an expression's collation to be
    indeterminate.  In such cases, ordering operations and other
    operations that need to know the collation will fail.
-->
式の照合は、<quote>default</quote>照合となります。これはデータベースに対して定義されたロケール設定を意味しています。
式の照合は非決定となることもあります。そのような場合に、照合が必要となるような順序操作や他の操作は失敗するでしょう。
   </para>

   <para>
<!--
    When the database system has to perform an ordering or a character
    classification, it uses the collation of the input expression.  This
    happens, for example, with <literal>ORDER BY</literal> clauses
    and function or operator calls such as <literal>&lt;</literal>.
    The collation to apply for an <literal>ORDER BY</literal> clause
    is simply the collation of the sort key.  The collation to apply for a
    function or operator call is derived from the arguments, as described
    below.  In addition to comparison operators, collations are taken into
    account by functions that convert between lower and upper case
    letters, such as <function>lower</>, <function>upper</>, and
    <function>initcap</>; by pattern matching operators; and by
    <function>to_char</> and related functions.
-->
データベースシステムが並び変えや文字区別を行う場合、データベースは入力の照合を使用します。
これは、たとえば<literal>ORDER BY</literal>句や<literal>&lt;</literal>演算子や関数を使用する際に発生します。
<literal>ORDER BY</literal>句に適用する照合は、単純にソートキーの照合です。
関数や演算子の呼び出しに対して適用される照合は、以下に述べるように引数により決まります。
比較演算子に加えて、照合は<function>lower</>、<function>upper</>、<function>initcap</>といった小文字と大文字を変換する関数やパターンマッチングの演算子、<function>to_char</>関連の関数で考慮されています。
   </para>

   <para>
<!--
    For a function or operator call, the collation that is derived by
    examining the argument collations is used at run time for performing
    the specified operation.  If the result of the function or operator
    call is of a collatable data type, the collation is also used at parse
    time as the defined collation of the function or operator expression,
    in case there is a surrounding expression that requires knowledge of
    its collation.
-->
関数や演算子の呼び出しに対して、引数の照合検査により得られた照合は実行時に特定の操作を行うために使用されます。
もし関数や演算子の呼び出しの結果が照合可能なデータ型であった場合、照合は関数もしくは演算子式の定義済みの照合として
解析時にも試用されます。このとき照合の知識が必要となるような囲み式があります。
   </para>

   <para>
<!--
    The <firstterm>collation derivation</firstterm> of an expression can be
    implicit or explicit.  This distinction affects how collations are
    combined when multiple different collations appear in an
    expression.  An explicit collation derivation occurs when a
    <literal>COLLATE</literal> clause is used; all other collation
    derivations are implicit.  When multiple collations need to be
    combined, for example in a function call, the following rules are
    used:
-->
式の<firstterm>照合の導出</firstterm>は暗黙でも明示的にでも可能です。
この区別は、複数の異なる照合が式中に現れるときに照合がどのように組み合わされるか、に影響を与えます。
明示的な照合の導出は、<literal>COLLATE</literal>句が使用されたときに発生します。
他の全ての照合は暗黙となります。例えば関数呼び出しの中では、次の規則が用いられます。

    <orderedlist>
     <listitem>
      <para>
<!--
       If any input expression has an explicit collation derivation, then
       all explicitly derived collations among the input expressions must be
       the same, otherwise an error is raised.  If any explicitly
       derived collation is present, that is the result of the
       collation combination.
-->
入力式に明示的な照合の導出がある場合、入力式の中の明示的に導出された全ての照合は同一でなくてはなりません。
そうでない場合はエラーが発生します。もし明示的に導出された照合がある場合は、それは照合の組み合わせの結果となります。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Otherwise, all input expressions must have the same implicit
       collation derivation or the default collation.  If any non-default
       collation is present, that is the result of the collation combination.
       Otherwise, the result is the default collation.
-->
そうでない場合は、全ての入力式は同一の暗黙の照合の導出またはデフォルトの照合を持たなくてはなりません。
もしデフォルトではない照合がある場合は、それは照合の組み合わせの結果となります。
もしそうでない場合は、結果はデフォルトの照合となります。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       If there are conflicting non-default implicit collations among the
       input expressions, then the combination is deemed to have indeterminate
       collation.  This is not an error condition unless the particular
       function being invoked requires knowledge of the collation it should
       apply.  If it does, an error will be raised at run-time.
-->
入力式内でデフォルトではない暗黙の照合が衝突している場合、決定不能な照合であるとみなされます。
これは、もし呼び出された特定の関数が適用するべき照合を知っておく必要がないかぎりエラーの条件ではありません。
もし知っておく必要がある場合は、実行時にエラーとなります。
      </para>
     </listitem>
    </orderedlist>

<!--
    For example, consider this table definition:
-->
例えば、このテーブル定義を考えてみます。
<programlisting>
CREATE TABLE test1 (
    a text COLLATE "de_DE",
    b text COLLATE "es_ES",
    ...
);
</programlisting>

<!--
    Then in
-->
このとき
<programlisting>
SELECT a &lt; 'foo' FROM test1;
</programlisting>
<!--
    the <literal>&lt;</literal> comparison is performed according to
    <literal>de_DE</literal> rules, because the expression combines an
    implicitly derived collation with the default collation.  But in
-->
<literal>&lt;</literal>の比較は<literal>de_DE</literal>の規則により実行されます。
というのも式は暗黙的に導出されたデフォルトの照合と組み合わせます。しかし、

<programlisting>
SELECT a &lt; ('foo' COLLATE "fr_FR") FROM test1;
</programlisting>
<!--
    the comparison is performed using <literal>fr_FR</literal> rules,
    because the explicit collation derivation overrides the implicit one.
    Furthermore, given
-->
このとき比較は、明示的な照合の導出は暗黙の照合をオーバライドするため<literal>fr_FR</literal>規則が用いられます。
さらに、次の例では
<programlisting>
SELECT a &lt; b FROM test1;
</programlisting>
<!--
    the parser cannot determine which collation to apply, since the
    <structfield>a</> and <structfield>b</> columns have conflicting
    implicit collations.  Since the <literal>&lt;</literal> operator
    does need to know which collation to use, this will result in an
    error.  The error can be resolved by attaching an explicit collation
    specifier to either input expression, thus:
-->
パーサはどの照合を適用するか決定できません。というのも<structfield>a</>と<structfield>b</>列は暗黙の衝突する照合を持つためです。
<literal>&lt;</literal>演算子がどちらの照合を使用するか知る必要があるため、これはエラーとなります。

<programlisting>
SELECT a &lt; b COLLATE "de_DE" FROM test1;
</programlisting>
<!--
    or equivalently
-->
もしくは同じく
<programlisting>
SELECT a COLLATE "de_DE" &lt; b FROM test1;
</programlisting>
<!--
    On the other hand, the structurally similar case
-->
一方で、以下のように構造的に似たケースとして
<programlisting>
SELECT a || b FROM test1;
</programlisting>
<!--
    does not result in an error, because the <literal>||</> operator
    does not care about collations: its result is the same regardless
    of the collation.
-->
これはエラーとなりません。というのも<literal>||</>演算子は、照合には関係がないためです。
この結果は照合とは関係なく同じになります。
   </para>

   <para>
<!--
    The collation assigned to a function or operator's combined input
    expressions is also considered to apply to the function or operator's
    result, if the function or operator delivers a result of a collatable
    data type.  So, in
-->
もし関数や演算子が照合可能なデータ型の結果を出力する場合は、関数に割り当てられた照合、もしくは演算子の組み合わされた入力式は、関数もしくは演算子の結果に対しても
適用されると考えられます。よって、以下の例では
<programlisting>
SELECT * FROM test1 ORDER BY a || 'foo';
</programlisting>
<!-- 
    the ordering will be done according to <literal>de_DE</literal> rules.
    But this query:
--> 
順序は<literal>de_DE</literal>規則に基づき実行されますが、以下のクエリでは
<programlisting>
SELECT * FROM test1 ORDER BY a || b;
</programlisting>
<!--
    results in an error, because even though the <literal>||</> operator
    doesn't need to know a collation, the <literal>ORDER BY</> clause does.
    As before, the conflict can be resolved with an explicit collation
    specifier:
-->
エラーとなります。というのも<literal>||</>演算子が照合を知る必要がなかったとしても
<literal>ORDER BY</>句が照合を知る必要があるためです。
以前と同様、この衝突は明示的に照合を指定することにより解決できます。

<programlisting>
SELECT * FROM test1 ORDER BY a || b COLLATE "fr_FR";
</programlisting>
   </para>
  </sect2>

  <sect2>
<!--
   <title>Managing Collations</title>
-->
   <title>照合の管理</title>

   <para>
<!--
    A collation is an SQL schema object that maps an SQL name to
    operating system locales.  In particular, it maps to a combination
    of <symbol>LC_COLLATE</symbol> and <symbol>LC_CTYPE</symbol>.  (As
    the name would suggest, the main purpose of a collation is to set
    <symbol>LC_COLLATE</symbol>, which controls the sort order.  But
    it is rarely necessary in practice to have an
    <symbol>LC_CTYPE</symbol> setting that is different from
    <symbol>LC_COLLATE</symbol>, so it is more convenient to collect
    these under one concept than to create another infrastructure for
    setting <symbol>LC_CTYPE</symbol> per expression.)  Also, a collation
    is tied to a character set encoding (see <xref linkend="multibyte">).
    The same collation name may exist for different encodings.
-->
照合は、SQL名称とオペレーティングシステムのロケールをマッピングするSQLスキーマオブジェクトです。
特に照合は<symbol>LC_COLLATE</symbol>と<symbol>LC_CTYPE</symbol>の組み合わせにマッピングします。
(名称から推測されるように、照合の主な目的はソート順番を制御する<symbol>LC_COLLATE</symbol>を設定することです。
しかし実際には<symbol>LC_CTYPE</symbol>の設定を<symbol>LC_COLLATE</symbol>と異なるようにする必要はほとんどありません。
そのため、式ごとに<symbol>LC_CTYPE</symbol>を設定するような別の機構を作成するより、これらの設定を収集する方が、より便利です。)
また、照合は文字エンコーディングと結びついています(<xref linkend="multibyte">を参照下さい)。
同一の照合名称は異なるエンコーディングに対して存在しています。

   </para>

   <para>
<!--
    On all platforms, the collations named <literal>default</>,
    <literal>C</>, and <literal>POSIX</> are available.  Additional
    collations may be available depending on operating system support.
    The <literal>default</> collation selects the <symbol>LC_COLLATE</symbol>
    and <symbol>LC_CTYPE</symbol> values specified at database creation time.
    The <literal>C</> and <literal>POSIX</> collations both specify
    <quote>traditional C</> behavior, in which only the ASCII letters
    <quote><literal>A</></quote> through <quote><literal>Z</></quote>
    are treated as letters, and sorting is done strictly by character
    code byte values.
-->
すべてのプラットフォーム上で<literal>default</>、<literal>C</>そして<literal>POSIX</>という名称の照合が
利用できます。追加の照合はオペレーティングシステムにより利用可能となります。
<literal>default</>照合は、データベース作成時に<symbol>LC_COLLATE</symbol>値と<symbol>LC_CTYPE</symbol>値を
選択します。<literal>C</>と<literal>POSIX</>照合は共に<quote>traditional C</>の動作を指定します。
これはASCII文字の<quote><literal>A</></quote>から<quote><literal>Z</></quote>を文字として扱い、文字コードのバイト値により
厳密にソートします。
   </para>

   <para>
<!--
    If the operating system provides support for using multiple locales
    within a single program (<function>newlocale</> and related functions),
    then when a database cluster is initialized, <command>initdb</command>
    populates the system catalog <literal>pg_collation</literal> with
    collations based on all the locales it finds on the operating
    system at the time.  For example, the operating system might
    provide a locale named <literal>de_DE.utf8</literal>.
    <command>initdb</command> would then create a collation named
    <literal>de_DE.utf8</literal> for encoding <literal>UTF8</literal>
    that has both <symbol>LC_COLLATE</symbol> and
    <symbol>LC_CTYPE</symbol> set to <literal>de_DE.utf8</literal>.
    It will also create a collation with the <literal>.utf8</literal>
    tag stripped off the name.  So you could also use the collation
    under the name <literal>de_DE</literal>, which is less cumbersome
    to write and makes the name less encoding-dependent.  Note that,
    nevertheless, the initial set of collation names is
    platform-dependent.
-->
もし、オペレーティングシステムが単一のプログラム内(<function>newlocale</>や関連する関数)で複数のロケールを使用することをサポートしている場合、
データベースクラスタが初期化されると<command>initdb</command>は、オペレーティングシステム上で見つけた全てのロケールに基づく照合を
システムカタログの<literal>pg_collation</literal>に書き込みます。
例えば、オペレーティングシステムが<literal>de_DE.utf8</literal>の名称のロケールを提供した場合、
<command>initdb</command>は、<literal>de_DE.utf8</literal>に設定された<symbol>LC_COLLATE</symbol>と<symbol>LC_CTYPE</symbol>の両方を持つ<literal>UTF8</literal>エンコーディングの<literal>de_DE.utf8</literal>という名称の照合を作成します。
同時に照合の名称から<literal>.utf8</literal>を削除した照合も作成します。これは手間を省き、名称がエンコーディングに依存しないようになります。
いうまでもなく、照合名称の初期値はプラットフォーム依存となることに気をつけてください。
   </para>

   <para>
<!--
    In case a collation is needed that has different values for
    <symbol>LC_COLLATE</symbol> and <symbol>LC_CTYPE</symbol>, a new
    collation may be created using
    the <xref linkend="sql-createcollation"> command.  That command
    can also be used to create a new collation from an existing
    collation, which can be useful to be able to use
    operating-system-independent collation names in applications.
-->
<symbol>LC_COLLATE</symbol>と<symbol>LC_CTYPE</symbol>に対して異なる値が必要な照合の場合のために、
新規の照合が<xref linkend="sql-createcollation">コマンドにより作成されます。
このコマンドは、既存の照合から新規の照合を作成するためにも使用されます。これはアプリケーションにおいて
オペレーティングシステムに依存しない照合名を使用でき、便利です。
   </para>

   <para>
<!--
    Within any particular database, only collations that use that
    database's encoding are of interest.  Other entries in
    <literal>pg_collation</literal> are ignored.  Thus, a stripped collation
    name such as <literal>de_DE</literal> can be considered unique
    within a given database even though it would not be unique globally.
    Use of the stripped collation names is recommended, since it will
    make one less thing you need to change if you decide to change to
    another database encoding.  Note however that the <literal>default</>,
    <literal>C</>, and <literal>POSIX</> collations can be used
    regardless of the database encoding.
-->
特定のデータベース内でデータベースのエンコーディングを使用している照合のみが興味の対象となります。
<literal>pg_collation</literal>内の他のエントリは無視されます。
よって<literal>de_DE</literal>といったようなエンコーディング名が省かれた照合は、包括的に一意でなくてもデータベース内で一意であるとみなされます。
データベースのエンコーディングを変更するときに、変更すべきものを１つ減らすことになるため、エンコーディング名が省かれた照合を使用するようにしてください。
<literal>default</>、<literal>C</>そして<literal>POSIX</>照合は、データベースのエンコーディングに関係なく使用可能です。
   </para>

   <para>
<!--
    <productname>PostgreSQL</productname> considers distinct collation
    objects to be incompatible even when they have identical properties.
    Thus for example,
-->
<productname>PostgreSQL</productname>は、異なる照合オブジェクトは、それらが同じプロパティを持っていても
互換性がないものとみなします。例えば、

<programlisting>
SELECT a COLLATE "C" &lt; b COLLATE "POSIX" FROM test1;
</programlisting>
<!--
    will draw an error even though the <literal>C</> and <literal>POSIX</>
    collations have identical behaviors.  Mixing stripped and non-stripped
    collation names is therefore not recommended.
-->
は、<literal>C</>と<literal>POSIX</>照合が同じ動作であってもエラーとなります。
よってエンコーディング名が省かれた照合を混ぜて使用することは推奨されません。
   </para>
  </sect2>
 </sect1>

 <sect1 id="multibyte">
<!--
  <title>Character Set Support</title>
-->

  <title>文字セットサポート</title>
<!--
  <indexterm zone="multibyte"><primary>character set</></>
-->
  <indexterm zone="multibyte"><primary>文字セット</></>

  <para>
<!--
   The character set support in <productname>PostgreSQL</productname>
   allows you to store text in a variety of character sets (also called
   encodings), including
   single-byte character sets such as the ISO 8859 series and
   multiple-byte character sets such as <acronym>EUC</> (Extended Unix
   Code), UTF-8, and Mule internal code.  All supported character sets
   can be used transparently by clients, but a few are not supported
   for use within the server (that is, as a server-side encoding).
   The default character set is selected while
   initializing your <productname>PostgreSQL</productname> database
   cluster using <command>initdb</>.  It can be overridden when you
   create a database, so you can have multiple
   databases each with a different character set.
-->
<productname>PostgreSQL</productname>の文字セット（エンコーディングとも呼ばれます）サポートにより、ISO 8859シリーズなどのシングルバイト文字や<acronym>EUC</>（拡張Unixコード）、UTF-8、Mule内部コードなどのマルチバイト文字を含む、各種文字セットでテキストを保存することができます。
全ての文字セットはクライアントにより透過的に使用することができますが、いくつかは、サーバ内での（つまりサーバサイドエンコーディングとして）使用はサポートされていません。デフォルトの文字セットは、<command>initdb</>を使用した<productname>PostgreSQL</productname>データベースクラスタの初期化時に決定されます。
これは、データベースを作成する時に上書きすることができるので、異なる文字セットを使用した複数のデータベースを持つことができます。
  </para>

  <para>
<!--
   An important restriction, however, is that each database's character set
   must be compatible with the database's <envar>LC_CTYPE</> (character
   classification) and <envar>LC_COLLATE</> (string sort order) locale
   settings. For <literal>C</> or
   <literal>POSIX</> locale, any character set is allowed, but for other
   locales there is only one character set that will work correctly.
   (On Windows, however, UTF-8 encoding can be used with any locale.)
-->
しかし重要な制限は、それぞれのデータベースの文字セットがサーバの<envar>LC_CTYPE</>（文字分類）および<envar>LC_COLLATE</>（文字列並び替え順序）ロケール設定と互換性がなくてはいけません。
<literal>C</>もしくは<literal>POSIX</>ロケール設定の場合、どのような文字セットも許可されています。
しかし、他のロケール設定の場合、正しく動作する文字セットはひとつだけとなります。
（しかしWindowsではUTF-8符号化方式をどのロケールでも使用できます。）
  </para>

   <sect2 id="multibyte-charset-supported">
<!--
    <title>Supported Character Sets</title>
-->
<title>サポートされる文字セット</title>

    <para>
<!--
     <xref linkend="charset-table"> shows the character sets available
     for use in <productname>PostgreSQL</productname>.
-->
<productname>PostgreSQL</productname>で使用できる文字セットを<xref linkend="charset-table">に示します。
    </para>

     <table id="charset-table">
<!--
      <title><productname>PostgreSQL</productname> Character Sets</title>
-->
      <title><productname>PostgreSQL</productname>文字セット</title>
      <tgroup cols="6">
       <thead>
        <row>
<!--
         <entry>Name</entry>
         <entry>Description</entry>
         <entry>Language</entry>
         <entry>Server?</entry>
-->
         <entry>名前</entry>
         <entry>説明</entry>
         <entry>言語</entry>
         <entry>サーバ？</entry>
         <!--
          The Bytes/Char field is populated by looking at the values returned
          by pg_wchar_table.mblen function for each encoding.
         -->
<!--
バイト数/文字列は、それぞれの符号化方式に対するpg_wchar_table.mblen関数の戻り値を見ることにより登録されます。
-->

<!--
         <entry>Bytes/Char</entry>
         <entry>Aliases</entry>
-->
         <entry>バイト数/文字</entry>
         <entry>別名</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><literal>BIG5</literal></entry>
         <entry>Big Five</entry>
<!--
         <entry>Traditional Chinese</entry>
-->
         <entry>繁体字</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
         <entry>1-2</entry>
<!--
         <entry><literal>WIN950</>, <literal>Windows950</></entry>
-->
         <entry><literal>WIN950</>、<literal>Windows950</></entry>
        </row>
        <row>
         <entry><literal>EUC_CN</literal></entry>
         <entry>Extended UNIX Code-CN</entry>
<!--
         <entry>Simplified Chinese</entry>
-->
         <entry>簡体字</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1-3</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>EUC_JP</literal></entry>
         <entry>Extended UNIX Code-JP</entry>
<!--
         <entry>Japanese</entry>
-->
         <entry>日本語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1-3</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>EUC_JIS_2004</literal></entry>
         <entry>Extended UNIX Code-JP, JIS X 0213</entry>
<!--
         <entry>Japanese</entry>
-->
         <entry>日本語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1-3</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>EUC_KR</literal></entry>
         <entry>Extended UNIX Code-KR</entry>
<!--
         <entry>Korean</entry>
-->
         <entry>韓国語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1-3</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>EUC_TW</literal></entry>
         <entry>Extended UNIX Code-TW</entry>
<!--
         <entry>Traditional Chinese, Taiwanese</entry>
-->
         <entry>繁体字、台湾語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1-3</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>GB18030</literal></entry>
         <entry>National Standard</entry>
<!--
         <entry>Chinese</entry>
-->
         <entry>中国語</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
         <entry>1-2</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>GBK</literal></entry>
         <entry>Extended National Standard</entry>
<!--
         <entry>Simplified Chinese</entry>
-->
         <entry>簡体字</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
         <entry>1-2</entry>
<!--
         <entry><literal>WIN936</>, <literal>Windows936</></entry>
-->
         <entry><literal>WIN936</>、<literal>Windows936</></entry>
        </row>
        <row>
         <entry><literal>ISO_8859_5</literal></entry>
<!--
         <entry>ISO 8859-5, <acronym>ECMA</> 113</entry>
-->
         <entry>ISO 8859-5、<acronym>ECMA</> 113</entry>
<!--
         <entry>Latin/Cyrillic</entry>
-->
         <entry>ラテン/キリル</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>ISO_8859_6</literal></entry>
<!--
         <entry>ISO 8859-6, <acronym>ECMA</> 114</entry>
-->
         <entry>ISO 8859-6、<acronym>ECMA</> 114</entry>
<!--
         <entry>Latin/Arabic</entry>
-->
         <entry>ラテン/アラビア語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>ISO_8859_7</literal></entry>
<!--
         <entry>ISO 8859-7, <acronym>ECMA</> 118</entry>
-->
         <entry>ISO 8859-7、<acronym>ECMA</> 118</entry>
<!--
         <entry>Latin/Greek</entry>
-->
         <entry>ラテン/ギリシャ語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>ISO_8859_8</literal></entry>
<!--
         <entry>ISO 8859-8, <acronym>ECMA</> 121</entry>
-->
         <entry>ISO 8859-8、<acronym>ECMA</> 121</entry>
<!--
         <entry>Latin/Hebrew</entry>
-->
         <entry>ラテン/ヘブライ語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>JOHAB</literal></entry>
         <entry><acronym>JOHAB</></entry>
<!--
         <entry>Korean (Hangul)</entry>
-->
         <entry>韓国語（ハングル）</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
         <entry>1-3</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>KOI8R</literal></entry>
         <entry><acronym>KOI</acronym>8-R</entry>
<!--
         <entry>Cyrillic (Russian)</entry>
-->
         <entry>キリル文字（ロシア）</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>KOI8</></entry>
        </row>
        <row>
         <entry><literal>KOI8U</literal></entry>
         <entry><acronym>KOI</acronym>8-U</entry>
<!--
         <entry>Cyrillic (Ukrainian)</entry>
         <entry>Yes</entry>
-->
         <entry>キリル文字（ウクライナ）</entry>
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>LATIN1</literal></entry>
<!--
         <entry>ISO 8859-1, <acronym>ECMA</> 94</entry>
-->
         <entry>ISO 8859-1、<acronym>ECMA</> 94</entry>
<!--
         <entry>Western European</entry>
-->
         <entry>西ヨーロッパ</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO88591</></entry>
        </row>
        <row>
         <entry><literal>LATIN2</literal></entry>
<!--
         <entry>ISO 8859-2, <acronym>ECMA</> 94</entry>
-->
         <entry>ISO 8859-2、<acronym>ECMA</> 94</entry>
<!--
         <entry>Central European</entry>
-->
         <entry>中央ヨーロッパ</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO88592</></entry>
        </row>
        <row>
         <entry><literal>LATIN3</literal></entry>
<!--
         <entry>ISO 8859-3, <acronym>ECMA</> 94</entry>
-->
         <entry>ISO 8859-3、<acronym>ECMA</> 94</entry>
<!--
         <entry>South European</entry>
-->
         <entry>南ヨーロッパ</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO88593</></entry>
        </row>
        <row>
         <entry><literal>LATIN4</literal></entry>
<!--
         <entry>ISO 8859-4, <acronym>ECMA</> 94</entry>
-->
         <entry>ISO 8859-4、<acronym>ECMA</> 94</entry>
<!--
         <entry>North European</entry>
-->
         <entry>北ヨーロッパ</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO88594</></entry>
        </row>
        <row>
         <entry><literal>LATIN5</literal></entry>
<!--
         <entry>ISO 8859-9, <acronym>ECMA</> 128</entry>
-->
         <entry>ISO 8859-9、<acronym>ECMA</> 128</entry>
<!--
         <entry>Turkish</entry>
-->
         <entry>トルコ</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO88599</></entry>
        </row>
        <row>
         <entry><literal>LATIN6</literal></entry>
<!--
         <entry>ISO 8859-10, <acronym>ECMA</> 144</entry>
-->
         <entry>ISO 8859-10、<acronym>ECMA</> 144</entry>
<!--
         <entry>Nordic</entry>
-->
         <entry>北欧</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO885910</></entry>
        </row>
        <row>
         <entry><literal>LATIN7</literal></entry>
         <entry>ISO 8859-13</entry>
<!--
         <entry>Baltic</entry>
-->
         <entry>バルト語派</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO885913</></entry>
        </row>
        <row>
         <entry><literal>LATIN8</literal></entry>
         <entry>ISO 8859-14</entry>
<!--
         <entry>Celtic</entry>
-->
         <entry>ケルト</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO885914</></entry>
        </row>
        <row>
         <entry><literal>LATIN9</literal></entry>
         <entry>ISO 8859-15</entry>
<!--
         <entry>LATIN1 with Euro and accents</entry>
-->
         <entry>LATIN1でヨーロッパと訛りを含む</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO885915</></entry>
        </row>
        <row>
         <entry><literal>LATIN10</literal></entry>
<!--
         <entry>ISO 8859-16, <acronym>ASRO</> SR 14111</entry>
-->
         <entry>ISO 8859-16、<acronym>ASRO</> SR 14111</entry>
<!--
         <entry>Romanian</entry>
-->
         <entry>ルーマニア</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO885916</></entry>
        </row>
        <row>
         <entry><literal>MULE_INTERNAL</literal></entry>
<!--
         <entry>Mule internal code</entry>
-->
	     <entry>Mule内部コード</entry>
<!--
         <entry>Multilingual Emacs</entry>
-->
         <entry>多言語Emacs</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1-4</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>SJIS</literal></entry>
         <entry>Shift JIS</entry>
<!--
         <entry>Japanese</entry>
-->
         <entry>日本語</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
         <entry>1-2</entry>
<!--
         <entry><literal>Mskanji</>, <literal>ShiftJIS</>, <literal>WIN932</>, <literal>Windows932</></entry>
-->
         <entry><literal>Mskanji</>、<literal>ShiftJIS</>、<literal>WIN932</>、<literal>Windows932</></entry>
        </row>
        <row>
         <entry><literal>SHIFT_JIS_2004</literal></entry>
         <entry>Shift JIS, JIS X 0213</entry>
<!--
         <entry>Japanese</entry>
         <entry>No</entry>
-->
         <entry>日本語</entry>
         <entry>いいえ</entry>
         <entry>1-2</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>SQL_ASCII</literal></entry>
<!--
         <entry>unspecified (see text)</entry>
         <entry><emphasis>any</></entry>
-->
         <entry>未指定（テキストを参照）</entry>
         <entry><emphasis>何でも</></entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>UHC</literal></entry>
<!--
         <entry>Unified Hangul Code</entry>
         <entry>Korean</entry>
-->
         <entry>統合ハングルコード</entry>
         <entry>韓国語</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
         <entry>1-2</entry>
<!--
         <entry><literal>WIN949</>, <literal>Windows949</></entry>
-->
         <entry><literal>WIN949</>、<literal>Windows949</></entry>
        </row>
        <row>
         <entry><literal>UTF8</literal></entry>
<!--
         <entry>Unicode, 8-bit</entry>
         <entry><emphasis>all</></entry>
-->
         <entry>Unicode、8ビット</entry>
         <entry><emphasis>すべて</></entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1-4</entry>
         <entry><literal>Unicode</></entry>
        </row>
        <row>
         <entry><literal>WIN866</literal></entry>
         <entry>Windows CP866</entry>
<!--
         <entry>Cyrillic</entry>
-->
         <entry>キリル文字</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ALT</></entry>
        </row>
        <row>
         <entry><literal>WIN874</literal></entry>
         <entry>Windows CP874</entry>
<!--
         <entry>Thai</entry>
-->
         <entry>タイ語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1250</literal></entry>
         <entry>Windows CP1250</entry>
<!--
         <entry>Central European</entry>
-->
         <entry>中央ヨーロッパ</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1251</literal></entry>
         <entry>Windows CP1251</entry>
<!--
         <entry>Cyrillic</entry>
-->
         <entry>キリル文字</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>WIN</></entry>
        </row>
        <row>
         <entry><literal>WIN1252</literal></entry>
         <entry>Windows CP1252</entry>
<!--
         <entry>Western European</entry>
-->
         <entry>西ヨーロッパ</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1253</literal></entry>
         <entry>Windows CP1253</entry>
<!--
         <entry>Greek</entry>
         <entry>Yes</entry>
-->
         <entry>ギリシャ</entry>
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1254</literal></entry>
         <entry>Windows CP1254</entry>
<!--
         <entry>Turkish</entry>
         <entry>Yes</entry>
-->
         <entry>トルコ</entry>
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1255</literal></entry>
         <entry>Windows CP1255</entry>
<!--
         <entry>Hebrew</entry>
         <entry>Yes</entry>
-->
         <entry>ヘブライ</entry>
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1256</literal></entry>
         <entry>Windows CP1256</entry>
<!--
         <entry>Arabic</entry>
-->
         <entry>アラビア語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1257</literal></entry>
         <entry>Windows CP1257</entry>
<!--
         <entry>Baltic</entry>
         <entry>Yes</entry>
-->
         <entry>バルト語派</entry>
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1258</literal></entry>
         <entry>Windows CP1258</entry>
<!--
         <entry>Vietnamese</entry>
-->
         <entry>ベトナム語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
<!--
         <entry><literal>ABC</>, <literal>TCVN</>, <literal>TCVN5712</>, <literal>VSCII</></entry>
-->
         <entry><literal>ABC</>、<literal>TCVN</>、<literal>TCVN5712</>、<literal>VSCII</></entry>
        </row>
       </tbody>
      </tgroup>
     </table>

     <para>
<!--
      Not all client <acronym>API</>s support all the listed character sets. For example, the
      <productname>PostgreSQL</>
      JDBC driver does not support <literal>MULE_INTERNAL</>, <literal>LATIN6</>,
      <literal>LATIN8</>, and <literal>LATIN10</>.
-->
全てのクライアントの<acronym>API</>が上の一覧表に示した文字セットをサポートしているわけではありません。
例えば<productname>PostgreSQL</> JDBCドライバは<literal>MULE_INTERNAL</>、<literal>LATIN6</>、<literal>LATIN8</>、そして<literal>LATIN10</>をサポートしません。
     </para>

     <para>
<!--
      The <literal>SQL_ASCII</> setting behaves considerably differently
      from the other settings.  When the server character set is
      <literal>SQL_ASCII</>, the server interprets byte values 0-127
      according to the ASCII standard, while byte values 128-255 are taken
      as uninterpreted characters.  No encoding conversion will be done when
      the setting is <literal>SQL_ASCII</>.  Thus, this setting is not so
      much a declaration that a specific encoding is in use, as a declaration
      of ignorance about the encoding.  In most cases, if you are
      working with any non-ASCII data, it is unwise to use the
      <literal>SQL_ASCII</> setting because
      <productname>PostgreSQL</productname> will be unable to help you by
      converting or validating non-ASCII characters.
-->
<literal>SQL_ASCII</>の設定は、他の設定とかなり異なります。サーバのキャラクタセットが<literal>SQL_ASCII</>のとき、サーバは0から127のバイト値をASCIIに変換します。一方、128から255までは変換されません。
設定が<literal>SQL_ASCII</>の場合は、符号化は実行されません。よって、この設定は特定の符号化を使用している場合には、その符号化を無視するようになってしまいます。
多くの場合、ASCIIではない環境で作業する場合は<literal>SQL_ASCII</>の設定を使用するのは、賢いことではありません。なぜなら<productname>PostgreSQL</productname>はASCIIではない文字を変換したり検査したりすることは出来ないからです。
     </para>
    </sect2>

   <sect2>
<!--
    <title>Setting the Character Set</title>
-->
    <title>文字セットの設定</title>

    <para>
<!--
     <command>initdb</> defines the default character set (encoding)
     for a <productname>PostgreSQL</productname> cluster. For example,
-->
<command>initdb</>で<productname>PostgreSQL</productname>クラスタのデフォルト文字セット(エンコーディング)を定義します。
以下に例を示します。

<screen>
initdb -E EUC_JP
</screen>

<!--
     sets the default character set to
     <literal>EUC_JP</literal> (Extended Unix Code for Japanese).  You
     can use <option>&#045;&#045;encoding</option> instead of
     <option>-E</option> if you prefer longer option strings.
     If no <option>-E</> or <option>&#045;&#045;encoding</option> option is
     given, <command>initdb</> attempts to determine the appropriate
     encoding to use based on the specified or default locale.
-->
これはデフォルトの文字セットを<literal>EUC_JP</literal>（日本語拡張Unixコード）に設定します。
より長いオプションの文字列がお好みなら<option>-E</option>の代わりに<option>&#045;&#045;encoding</option>と書くこともできます。
<option>-E</>オプションも<option>&#045;&#045;encoding</option>オプションも与えられない場合、<command>initdb</>は、指定もしくはデフォルトのロケールに基づいて適当な符号化方式を決定しようとします。
    </para>

    <para>
<!--
     You can specify a non-default encoding at database creation time,
     provided that the encoding is compatible with the selected locale:
-->
データベース作成時に選択したロケールと互換性を持つ符号化方式を提供することで、デフォルト以外の符号化方式を指定することができます。

<screen>
createdb -E EUC_KR -T template0 --lc-collate=ko_KR.euckr --lc-ctype=ko_KR.euckr korean
</screen>

<!--
     This will create a database named <literal>korean</literal> that
     uses the character set <literal>EUC_KR</literal>, and locale <literal>ko_KR</literal>.
     Another way to accomplish this is to use this SQL command:
-->
これは<literal>EUC_KR</literal>文字セットと<literal>ko_KR</literal>ロケールを使用する<database>korean</database>という名前のデータベースを作成します。
SQLコマンドで同じことを行うには次のようにします。

<programlisting>
CREATE DATABASE korean WITH ENCODING 'EUC_KR' LC_COLLATE='ko_KR.euckr' LC_CTYPE='ko_KR.euckr' TEMPLATE=template0;
</programlisting>

<!--
     Notice that the above commands specify copying the <literal>template0</>
     database.  When copying any other database, the encoding and locale
     settings cannot be changed from those of the source database, because
     that might result in corrupt data.  For more information see
     <xref linkend="manage-ag-templatedbs">.
-->
上のコマンドにて<literal>template0</>データベースのコピーが指定されていることに注目してください。
他のデータベースからコピーする場合、データが破損する結果となる可能性がありますので、符号化方式とロケール設定を元のデータベースの設定から変更することはできません。
詳細については<xref linkend="manage-ag-templatedbs">を参照してください。
    </para>

    <para>
<!--
     The encoding for a database is stored in the system catalog
     <literal>pg_database</literal>.  You can see it by using the
     <command>psql</command> <option>-l</option> option or the
     <command>\l</command> command.
-->
データベースの符号化方式は<literal>pg_database</literal>システムカタログに格納されます。
<command>psql</command>の<option>-l</option>オプションか<command>\l</command>コマンドで符号化方式を確認することができます。

<screen>
$ <userinput>psql -l</userinput>
                                         List of databases
   Name    |  Owner   | Encoding  |  Collation  |    Ctype    |          Access Privileges          
-----------+----------+-----------+-------------+-------------+-------------------------------------
 clocaledb | hlinnaka | SQL_ASCII | C           | C           | 
 englishdb | hlinnaka | UTF8      | en_GB.UTF8  | en_GB.UTF8  | 
 japanese  | hlinnaka | UTF8      | ja_JP.UTF8  | ja_JP.UTF8  | 
 korean    | hlinnaka | EUC_KR    | ko_KR.euckr | ko_KR.euckr | 
 postgres  | hlinnaka | UTF8      | fi_FI.UTF8  | fi_FI.UTF8  | 
 template0 | hlinnaka | UTF8      | fi_FI.UTF8  | fi_FI.UTF8  | {=c/hlinnaka,hlinnaka=CTc/hlinnaka}
 template1 | hlinnaka | UTF8      | fi_FI.UTF8  | fi_FI.UTF8  | {=c/hlinnaka,hlinnaka=CTc/hlinnaka}
(7 rows)
</screen>
    </para>

    <important>
<!--
     <para>
      On most modern operating systems, <productname>PostgreSQL</productname>
      can determine which character set is implied by the <envar>LC_CTYPE</>
      setting, and it will enforce that only the matching database encoding is
      used.  On older systems it is your responsibility to ensure that you use
      the encoding expected by the locale you have selected.  A mistake in
      this area is likely to lead to strange behavior of locale-dependent
      operations such as sorting.
     </para>
-->
     <para>
最近のオペレーティングシステムでは、<productname>PostgreSQL</productname>は、<envar>LC_CTYPE</>の設定によりどの文字セットが指定されているか決定できます。
そして、一致するデータベース符号化方式のみを強制的に使用します。
古いオペレーティングシステムでは、自分で選択したロケールが想定している符号化方式を確実に使用することは各自の責任になります。
ここでの間違いは、ソート処理などのロケールに依存する操作が、奇妙な動作するといったことにつながります。
     </para>

     <para>
<!--
      <productname>PostgreSQL</productname> will allow superusers to create
      databases with <literal>SQL_ASCII</> encoding even when
      <envar>LC_CTYPE</> is not <literal>C</> or <literal>POSIX</>.  As noted
      above, <literal>SQL_ASCII</> does not enforce that the data stored in
      the database has any particular encoding, and so this choice poses risks
      of locale-dependent misbehavior.  Using this combination of settings is
      deprecated and may someday be forbidden altogether.
-->
      <productname>PostgreSQL</productname>は、<envar>LC_CTYPE</>が<literal>C</>もしくは<literal>POSIX</>でもない場合にも、スーパユーザが<literal>SQL_ASCII</>エンコーディングでデータベースを作成することを許可します。上記のように、<literal>SQL_ASCII</>は、データベースに保存されているデータが特定のエンコーディングを持つことを強制しません。さらに、この選択はロケールに依存したおかしな動作を引き起こすリスクを高めます。この設定の組み合わせを使用することは、お勧めできませんし、いつの日か完全に禁止されるかもしれません。
     </para>
    </important>
   </sect2>

   <sect2>
<!--
    <title>Automatic Character Set Conversion Between Server and Client</title>
-->
<title>サーバ・クライアント間の自動文字セット変換</title>

    <para>
<!--
     <productname>PostgreSQL</productname> supports automatic
     character set conversion between server and client for certain
     character set combinations. The conversion information is stored in the
     <literal>pg_conversion</> system catalog.  <productname>PostgreSQL</>
     comes with some predefined conversions, as shown in <xref
     linkend="multibyte-translation-table">. You can create a new
     conversion using the SQL command <command>CREATE CONVERSION</command>.
-->
<productname>PostgreSQL</productname>は、ある文字セットの組み合わせに対してサーバとクライアントの間で自動的に文字セットを変換する機能を提供しています。
変換情報は<literal>pg_conversion</>システムカタログに格納されています。<productname>PostgreSQL</>には、<xref
     linkend="multibyte-translation-table">で示されているように、事前に定義された変換が付属します。
新しい変換を作成するにはSQLコマンドの<command>CREATE CONVERSION</command>を使用します。

    </para>

     <table id="multibyte-translation-table">
<!--
      <title>Client/Server Character Set Conversions</title>
-->
      <title>クライアント・サーバ文字セット変換</title>
      <tgroup cols="2">
       <thead>
        <row>
<!--
         <entry>Server Character Set</entry>
         <entry>Available Client Character Sets</entry>
-->
	 <entry>サーバ文字セット</entry>
	 <entry>利用可能なクライアント文字セット</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><literal>BIG5</literal></entry>
<!--
         <entry><emphasis>not supported as a server encoding</emphasis>
-->
         <entry><emphasis>サーバの符号化方式としてはサポートしていません。</emphasis>
         </entry>
        </row>
        <row>
         <entry><literal>EUC_CN</literal></entry>
<!--
         <entry><emphasis>EUC_CN</emphasis>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>EUC_CN</emphasis>、
         <literal>MULE_INTERNAL</literal>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
<!--
         <entry><literal>EUC_JP</literal></entry>
         <entry><emphasis>EUC_JP</emphasis>,
         <literal>MULE_INTERNAL</literal>,
         <literal>SJIS</literal>,
         <literal>UTF8</literal>
-->
         <entry><literal>EUC_JP</literal></entry>
         <entry><emphasis>EUC_JP</emphasis>、
         <literal>MULE_INTERNAL</literal>、
         <literal>SJIS</literal>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>EUC_KR</literal></entry>
<!--
         <entry><emphasis>EUC_KR</emphasis>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>EUC_KR</emphasis>、
         <literal>MULE_INTERNAL</literal>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>EUC_TW</literal></entry>
<!--
         <entry><emphasis>EUC_TW</emphasis>,
         <literal>BIG5</literal>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>EUC_TW</emphasis>、
         <literal>BIG5</literal>、
         <literal>MULE_INTERNAL</literal>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>GB18030</literal></entry>
<!--
         <entry><emphasis>not supported as a server encoding</emphasis>
-->
         <entry><emphasis>サーバの符号化方式としてはサポートしていません。</emphasis>
         </entry>
        </row>
        <row>
         <entry><literal>GBK</literal></entry>
<!--
         <entry><emphasis>not supported as a server encoding</emphasis>
-->
         <entry><emphasis>サーバの符号化方式としてはサポートしていません。</emphasis>
         </entry>
        </row>
        <row>
         <entry><literal>ISO_8859_5</literal></entry>
<!--
         <entry><emphasis>ISO_8859_5</emphasis>,
         <literal>KOI8R</literal>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>,
         <literal>WIN866</literal>,
         <literal>WIN1251</literal>
-->
         <entry><emphasis>ISO_8859_5</emphasis>、
         <literal>KOI8</literal>、
         <literal>MULE_INTERNAL</literal>、
         <literal>UTF8</literal>、
         <literal>WIN866</literal>、
         <literal>WIN1251</literal>
         </entry>
        </row>
        <row>
         <entry><literal>ISO_8859_6</literal></entry>
         <entry><emphasis>ISO_8859_6</emphasis>、
         <literal>UTF8</literal>
<!--
         <entry><emphasis>ISO_8859_6</emphasis>,
         <literal>UTF8</literal>
-->
         </entry>
        </row>
        <row>
         <entry><literal>ISO_8859_7</literal></entry>
<!--
         <entry><emphasis>ISO_8859_7</emphasis>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>ISO_8859_7</emphasis>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>ISO_8859_8</literal></entry>
<!--
         <entry><emphasis>ISO_8859_8</emphasis>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>ISO_8859_8</emphasis>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>JOHAB</literal></entry>
<!--
         <entry><emphasis>JOHAB</emphasis>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>JOHAB</emphasis>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>KOI8R</literal></entry>
<!--
         <entry><emphasis>KOI8R</emphasis>,
         <literal>ISO_8859_5</literal>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>,
         <literal>WIN866</literal>,
         <literal>WIN1251</literal>
-->
         <entry><emphasis>KOI8R</emphasis>、
         <literal>ISO_8859_5</literal>、
         <literal>MULE_INTERNAL</literal>、
         <literal>UTF8</literal>、
         <literal>WIN866</literal>、
         <literal>WIN1251</literal>
         </entry>
        </row>
        <row>
         <entry><literal>KOI8U</literal></entry>
<!--
         <entry><emphasis>KOI8U</emphasis>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>KOI8U</emphasis>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>LATIN1</literal></entry>
<!--
         <entry><emphasis>LATIN1</emphasis>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>LATIN1</emphasis>、
         <literal>MULE_INTERNAL</literal>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>LATIN2</literal></entry>
<!--
         <entry><emphasis>LATIN2</emphasis>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>,
         <literal>WIN1250</literal>
-->
         <entry><emphasis>LATIN2</emphasis>、
         <literal>MULE_INTERNAL</literal>、
         <literal>UTF8</literal>、
         <literal>WIN1250</literal>
         </entry>
        </row>
        <row>
         <entry><literal>LATIN3</literal></entry>
<!--
         <entry><emphasis>LATIN3</emphasis>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>LATIN3</emphasis>、
         <literal>MULE_INTERNAL</literal>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>LATIN4</literal></entry>
<!--
         <entry><emphasis>LATIN4</emphasis>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>LATIN4</emphasis>、
         <literal>MULE_INTERNAL</literal>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>LATIN5</literal></entry>
<!--
         <entry><emphasis>LATIN5</emphasis>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>LATIN5</emphasis>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>LATIN6</literal></entry>
<!--
         <entry><emphasis>LATIN6</emphasis>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>LATIN6</emphasis>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>LATIN7</literal></entry>
<!--
         <entry><emphasis>LATIN7</emphasis>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>LATIN7</emphasis>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>LATIN8</literal></entry>
<!--
         <entry><emphasis>LATIN8</emphasis>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>LATIN8</emphasis>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>LATIN9</literal></entry>
<!--
         <entry><emphasis>LATIN9</emphasis>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>LATIN9</emphasis>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>LATIN10</literal></entry>
<!--
         <entry><emphasis>LATIN10</emphasis>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>LATIN10</emphasis>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>MULE_INTERNAL</literal></entry>
<!--
         <entry><emphasis>MULE_INTERNAL</emphasis>,
          <literal>BIG5</literal>,
          <literal>EUC_CN</literal>,
          <literal>EUC_JP</literal>,
          <literal>EUC_KR</literal>,
          <literal>EUC_TW</literal>,
          <literal>ISO_8859_5</literal>,
          <literal>KOI8R</literal>,
          <literal>LATIN1</literal> to <literal>LATIN4</literal>,
          <literal>SJIS</literal>,
          <literal>WIN866</literal>,
          <literal>WIN1250</literal>,
          <literal>WIN1251</literal>
-->
         <entry><emphasis>MULE_INTERNAL</emphasis>、
          <literal>BIG5</literal>、
          <literal>EUC_CN</literal>、
          <literal>EUC_JP</literal>、
          <literal>EUC_KR</literal>、
          <literal>EUC_TW</literal>、
          <literal>ISO_8859_5</literal>、
          <literal>KOI8R</literal>、
          <literal>LATIN1</literal>から<literal>LATIN4</literal>まで、
          <literal>SJIS</literal>、
          <literal>WIN866</literal>、
          <literal>WIN1250</literal>、
          <literal>WIN1251</literal>
         </entry>
        </row>
        <row>
         <entry><literal>SJIS</literal></entry>
<!--
         <entry><emphasis>not supported as a server encoding</emphasis>
-->
         <entry><emphasis>サーバの符号化方式としてはサポートしていません。</emphasis>
         </entry>
        </row>
        <row>
         <entry><literal>SQL_ASCII</literal></entry>
<!--
         <entry><emphasis>any (no conversion will be performed)</emphasis>
-->
         <entry><emphasis>どれでも （変換されません）</emphasis>
         </entry>
        </row>
        <row>
         <entry><literal>UHC</literal></entry>
<!--
         <entry><emphasis>not supported as a server encoding</emphasis>
-->
         <entry><emphasis>サーバの符号化方式としてはサポートしていません。</emphasis>
         </entry>
        </row>
        <row>
         <entry><literal>UTF8</literal></entry>
<!--
         <entry><emphasis>all supported encodings</emphasis>
-->
         <entry><emphasis>すべてサポートされています。</emphasis>
         </entry>
        </row>
        <row>
         <entry><literal>WIN866</literal></entry>
<!--
         <entry><emphasis>WIN866</emphasis>,
          <literal>ISO_8859_5</literal>,
          <literal>KOI8R</literal>,
          <literal>MULE_INTERNAL</literal>,
          <literal>UTF8</literal>,
          <literal>WIN1251</literal>
-->
         <entry><emphasis>WIN866</emphasis>、
          <literal>ISO_8859_5</literal>、
          <literal>KOI8R</literal>、
          <literal>MULE_INTERNAL</literal>、
          <literal>UTF8</literal>、
          <literal>WIN1251</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN874</literal></entry>
<!--
         <entry><emphasis>WIN874</emphasis>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>WIN874</emphasis>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1250</literal></entry>
<!--
         <entry><emphasis>WIN1250</emphasis>,
          <literal>LATIN2</literal>,
          <literal>MULE_INTERNAL</literal>,
          <literal>UTF8</literal>
-->
         <entry><emphasis>WIN1250</emphasis>、
          <literal>LATIN2</literal>、
          <literal>MULE_INTERNAL</literal>、
          <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1251</literal></entry>
<!--
         <entry><emphasis>WIN1251</emphasis>,
          <literal>ISO_8859_5</literal>,
          <literal>KOI8R</literal>,
          <literal>MULE_INTERNAL</literal>,
          <literal>UTF8</literal>,
          <literal>WIN866</literal>
-->
         <entry><emphasis>WIN1251</emphasis>、
          <literal>ISO_8859_5</literal>、
          <literal>KOI8R</literal>、
          <literal>MULE_INTERNAL</literal>、
          <literal>UTF8</literal>、
          <literal>WIN866</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1252</literal></entry>
<!--
         <entry><emphasis>WIN1252</emphasis>,
          <literal>UTF8</literal>
-->
         <entry><emphasis>WIN1252</emphasis>、
          <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1253</literal></entry>
<!--
         <entry><emphasis>WIN1253</emphasis>,
          <literal>UTF8</literal>
-->
         <entry><emphasis>WIN1253</emphasis>、
          <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1254</literal></entry>
<!--
         <entry><emphasis>WIN1254</emphasis>,
          <literal>UTF8</literal>
-->
         <entry><emphasis>WIN1254</emphasis>、
          <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1255</literal></entry>
<!--
         <entry><emphasis>WIN1255</emphasis>,
          <literal>UTF8</literal>
-->
         <entry><emphasis>WIN1255</emphasis>、
          <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1256</literal></entry>
<!--
         <entry><emphasis>WIN1256</emphasis>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>WIN1256</emphasis>、
         <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1257</literal></entry>
<!--
         <entry><emphasis>WIN1257</emphasis>,
          <literal>UTF8</literal>
-->
         <entry><emphasis>WIN1257</emphasis>、
          <literal>UTF8</literal>
         </entry>
        </row>
        <row>
         <entry><literal>WIN1258</literal></entry>
<!--
         <entry><emphasis>WIN1258</emphasis>,
         <literal>UTF8</literal>
-->
         <entry><emphasis>WIN1258</emphasis>、
         <literal>UTF8</literal>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>

    <para>
<!--
     To enable automatic character set conversion, you have to
     tell <productname>PostgreSQL</productname> the character set
     (encoding) you would like to use in the client. There are several
     ways to accomplish this:
-->
自動文字セット変換を有効にするためには、クライアントでどのような文字セット（符号化方式）を使用させたいかを<productname>PostgreSQL</productname>に伝えなければなりません。
これを行うにはいくつかの方法があります。

     <itemizedlist>
      <listitem>
       <para>
<!--
        Using the <command>\encoding</command> command in
        <application>psql</application>.
        <command>\encoding</command> allows you to change client
        encoding on the fly. For
        example, to change the encoding to <literal>SJIS</literal>, type:
-->
<application>psql</application>で<command>\encoding</command>コマンドを使います。
<command>\encoding</command>は実行中であってもクライアントの符号化方式を変更させることができます。
例えば符号化方式を<literal>SJIS</literal>に変えたい場合は次のように入力します。

<programlisting>
\encoding SJIS
</programlisting>
       </para>
      </listitem>

      <listitem>
       <para>
<!--
        <application>libpq</> (<xref linkend="libpq-control">) has functions to control the client encoding.
-->
        <application>libpq</> (<xref linkend="libpq-control">)はクライアントの符号化方式を制御する関数を保持しています。
       </para>
      </listitem>

      <listitem>
       <para>
<!--
        Using <command>SET client_encoding TO</command>.

        Setting the client encoding can be done with this SQL command:
-->
<command>SET client_encoding TO</command>を使います。
次のSQLコマンドでクライアントの符号化方式を設定できます。

<programlisting>
SET CLIENT_ENCODING TO '<replaceable>value</>';
</programlisting>

<!--
        Also you can use the standard SQL syntax <literal>SET NAMES</literal>
        for this purpose:
-->
標準SQLの構文<literal>SET NAMES</literal>を同じ目的で使うこともできます。

<programlisting>
SET NAMES '<replaceable>value</>';
</programlisting>

<!--
        To query the current client encoding:
-->
現在のクライアントの符号化方式を問い合わせるには次のようにします。

<programlisting>
SHOW client_encoding;
</programlisting>

<!--
        To return to the default encoding:
-->
デフォルトの符号化方式に戻すのには次のようにします。

<programlisting>
RESET client_encoding;
</programlisting>
       </para>
      </listitem>

      <listitem>
       <para>
<!--
        Using <envar>PGCLIENTENCODING</envar>. If the environment variable
        <envar>PGCLIENTENCODING</envar> is defined in the client's
        environment, that client encoding is automatically selected
        when a connection to the server is made.  (This can
        subsequently be overridden using any of the other methods
        mentioned above.)
-->
<envar>PGCLIENTENCODING</envar>を使います。
クライアントの環境で<envar>PGCLIENTENCODING</envar>環境変数が定義されていると、サーバと接続が確立した時点で自動的にクライアントの符号化方式が選択されます
（上で説明したその他のどんな方法でもその後書き換えできます）。

       </para>
      </listitem>

      <listitem>
      <para>
<!--
       Using the configuration variable <xref
       linkend="guc-client-encoding">. If the
       <varname>client_encoding</> variable is set, that client
       encoding is automatically selected when a connection to the
       server is made.  (This can subsequently be overridden using any
       of the other methods mentioned above.)
-->
<xref linkend="guc-client-encoding">変数を使います。
<varname>client_encoding</>変数が設定されていると、サーバとの接続が確立した時点で自動的にクライアントの符号化方式が選択されます
（上で説明したその他のどんな方法でもその後書き換えできます）。

       </para>
      </listitem>

     </itemizedlist>
    </para>

    <para>
<!--
     If the conversion of a particular character is not possible
     &mdash; suppose you chose <literal>EUC_JP</literal> for the
     server and <literal>LATIN1</literal> for the client, and some
     Japanese characters are returned that do not have a representation in
     <literal>LATIN1</literal> &mdash; an error is reported.
-->
<literal>EUC_JP</literal>をサーバに、そして<literal>LATIN1</literal>をクライアントに選んだ場合のように、
特定の文字の変換ができない時、日本語文字は<literal>LATIN1</literal>に入っていないという旨の日本語が返され、エラーが報告されます。

    </para>

    <para>
<!--
     If the client character set is defined as <literal>SQL_ASCII</>,
     encoding conversion is disabled, regardless of the server's character
     set.  Just as for the server, use of <literal>SQL_ASCII</> is unwise
     unless you are working with all-ASCII data.
-->
クライアント側のキャラクタセットが<literal>SQL_ASCII</>に定義されている場合は、符号化変換はサーバ側のキャラクタセットに関係無く無効化されます。
サーバ側と同じように、<literal>SQL_ASCII</>を使用することは、すべてASCIIのデータを扱っている場合を除き、賢い方法ではありません。
    </para>
   </sect2>

   <sect2>
<!--
    <title>Further Reading</title>
-->
    <title>推奨文書</title>

    <para>
<!--
     These are good sources to start learning about various kinds of encoding
     systems.
-->
ここに記したものは様々な符号化方式システムを学習するのに良い資料です。

     <variablelist>
      <varlistentry>
<!--
       <term><citetitle>CJKV Information Processing: Chinese, Japanese, Korean &amp; Vietnamese Computing</citetitle></term>
-->
       <term><citetitle>CJKV日中韓越情報処理: 中国語、日本語、韓国語 &amp; ベトナム語処理</citetitle></term>

       <listitem>
        <para>
<!--
         Contains detailed explanations of <literal>EUC_JP</literal>,
         <literal>EUC_CN</literal>, <literal>EUC_KR</literal>,
         <literal>EUC_TW</literal>.
-->
<literal>EUC_JP</literal>、<literal>EUC_CN</literal>、<literal>EUC_KR</literal>、<literal>EUC_TW</literal>の詳しい説明があります。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><ulink url="http://www.unicode.org/"></ulink></term>

       <listitem>
        <para>
<!--
         The web site of the Unicode Consortium.
-->
Unicode協会のWebサイトです。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>RFC 3629</term>

       <listitem>
        <para>
<!--
         <acronym>UTF</acronym>-8 (8-bit UCS/Unicode Transformation
         Format) is defined here.
-->
ここで<acronym>UTF</acronym>-8（8ビットUCS/Unicode変換書式）が定義されています。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

  </sect1>

</chapter>
