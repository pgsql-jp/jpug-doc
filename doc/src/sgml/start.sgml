<!-- doc/src/sgml/start.sgml -->

 <chapter id="tutorial-start">
<!--
  <title>Getting Started</title>
-->
  <title>さあ始めましょう</title>

  <sect1 id="tutorial-install">
<!--
   <title>Installation</title>
-->
   <title>インストール</title>

   <para>
<!--
    Before you can use <productname>PostgreSQL</productname> you need
    to install it, of course.  It is possible that
    <productname>PostgreSQL</productname> is already installed at your
    site, either because it was included in your operating system
    distribution or because the system administrator already installed
    it.  If that is the case, you should obtain information from the
    operating system documentation or your system administrator about
    how to access <productname>PostgreSQL</productname>.
-->
<productname>PostgreSQL</productname>を使用できるようにするためには、当然ながらインストールしなければなりません。
使用しているオペレーティングシステム配布物内に含まれていたり、システム管理者がインストールしていたりしますので、<productname>PostgreSQL</productname>が既にサイトにインストールされている可能性があります。
そのような場合、オペレーティングシステムの文書やシステム管理者から<productname>PostgreSQL</productname>へのアクセス方法に関する情報を得なければなりません。
   </para>

   <para>
<!--
    If you are not sure whether <productname>PostgreSQL</productname>
    is already available or whether you can use it for your
    experimentation then you can install it yourself.  Doing so is not
    hard and it can be a good exercise.
    <productname>PostgreSQL</productname> can be installed by any
    unprivileged user; no superuser (<systemitem>root</systemitem>)
    access is required.
-->
<productname>PostgreSQL</productname>が既に使用可能かどうかや実験的に使用できるかどうかがわからなければ、独自にインストールすることができます。
インストールは難しくありません。
良い経験になるでしょう。
<productname>PostgreSQL</productname>は、非特権ユーザによって、つまり、スーパーユーザ（<systemitem>root</systemitem>）権限を必要とすることなく、インストールできます。
   </para>

   <para>
<!--
    If you are installing <productname>PostgreSQL</productname>
    yourself, then refer to <xref linkend="installation">
    for instructions on installation, and return to
    this guide when the installation is complete.  Be sure to follow
    closely the section about setting up the appropriate environment
    variables.
-->
自身で<productname>PostgreSQL</productname>をインストールする場合は、インストール手順を<xref linkend="installation">で確認してください。
そしてインストールが完了してから、本書に戻ってきてください。
適切な環境変数の設定に関する節に正確に従っていることを確認してください。
   </para>

   <para>
<!--
    If your site administrator has not set things up in the default
    way, you might have some more work to do.  For example, if the
    database server machine is a remote machine, you will need to set
    the <envar>PGHOST</envar> environment variable to the name of the
    database server machine.  The environment variable
    <envar>PGPORT</envar> might also have to be set.  The bottom line is
    this: if you try to start an application program and it complains
    that it cannot connect to the database, you should consult your
    site administrator or, if that is you, the documentation to make
    sure that your environment is properly set up.  If you did not
    understand the preceding paragraph then read the next section.
-->
システム管理者がデフォルトの方法で設定していなかった場合、他にも多少の作業をすることになります。
例えば、データベースサーバマシンがリモートマシンの場合、<envar>PGHOST</envar>環境変数をデータベースサーバマシンの名前に設定する必要があります。
また、<envar>PGPORT</envar>環境変数の設定も行わなければならないかもしれません。
要するに、アプリケーションプログラムを起動しようとして、データベースに接続できないというエラーが発生する場合には、サイト管理者と相談し、自分が管理者であれば、文書を読んで、環境が適切に設定されていることを確認してください。
これまでの内容を理解できない場合は、次の節を読んでください。
   </para>
  </sect1>


  <sect1 id="tutorial-arch">
<!--
   <title>Architectural Fundamentals</title>
-->
   <title>構造的な基本事項</title>

   <para>
<!--
    Before we proceed, you should understand the basic
    <productname>PostgreSQL</productname> system architecture.
    Understanding how the parts of
    <productname>PostgreSQL</productname> interact will make this
    chapter somewhat clearer.
-->
先に進む前に、<productname>PostgreSQL</productname>システム構成の基礎を理解すべきです。
<productname>PostgreSQL</productname>の各部分がどのように相互作用しているかを理解することにより、本章の内容がわかりやすくなります。
   </para>

   <para>
<!--
    In database jargon, <productname>PostgreSQL</productname> uses a
    client/server model.  A <productname>PostgreSQL</productname>
    session consists of the following cooperating processes
    (programs):
-->
データベースの用語で言うと、<productname>PostgreSQL</productname>はクライアント/サーバモデルを使用しています。 
<productname>PostgreSQL</productname>のセッションは以下の協調動作するプロセス（プログラム）から構成されます。

    <itemizedlist>
     <listitem>
      <para>
<!--
       A server process, which manages the database files, accepts
       connections to the database from client applications, and
       performs database actions on behalf of the clients.  The
       database server program is called
       <filename>postgres</filename>.
-->
サーバプロセス。
これは、データベースファイルを管理し、クライアントアプリケーションからのデータベースの接続を受け付け、クライアントに代わってデータベースに対する処理を行います。
データベースサーバプログラムは<filename>postgres</filename>と呼ばれています。
       <indexterm><primary>postgres</primary></indexterm>
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       The user's client (frontend) application that wants to perform
       database operations.  Client applications can be very diverse
       in nature:  a client could be a text-oriented tool, a graphical
       application, a web server that accesses the database to
       display web pages, or a specialized database maintenance tool.
       Some client applications are supplied with the
       <productname>PostgreSQL</productname> distribution; most are
       developed by users.
-->
ユーザの、データベース操作を行うクライアント（フロントエンド）アプリケーション。
クライアントアプリケーションはその性質上非常に多様性があります。
テキスト指向のツール、グラフィカルなアプリケーション、データベースにアクセスしWebページを表示するWebサーバ、あるいはデータベースに特化した保守ツールなどがあります。
<productname>PostgreSQL</productname>の配布物では、いくつかのクライアントアプリケーションを用意しています。
そのほとんどはユーザによって開発されました。
      </para>
     </listitem>

    </itemizedlist>
   </para>

   <para>
<!--
    As is typical of client/server applications, the client and the
    server can be on different hosts.  In that case they communicate
    over a TCP/IP network connection.  You should keep this in mind,
    because the files that can be accessed on a client machine might
    not be accessible (or might only be accessible using a different
    file name) on the database server machine.
-->
典型的なクライアント/サーバアプリケーションでは、クライアントとサーバはホストが異なっても構いません。
その場合、クライアントとサーバはTCP/IPネットワーク接続経由で通信を行います。
このことには注意してください。
なぜなら、クライアントマシンからアクセスできるファイルは、データベースサーバマシンではアクセスできない（または、異なるファイル名でアクセスできるだけである）可能性があるからです。
   </para>

   <para>
<!--
    The <productname>PostgreSQL</productname> server can handle
    multiple concurrent connections from clients.  To achieve this it
    starts (<quote>forks</quote>) a new process for each connection.
    From that point on, the client and the new server process
    communicate without intervention by the original
    <filename>postgres</filename> process.  Thus, the
    master server process is always running, waiting for
    client connections, whereas client and associated server processes
    come and go.  (All of this is of course invisible to the user.  We
    only mention it here for completeness.)
-->
<productname>PostgreSQL</productname>サーバはクライアントから複数の同時接続を取り扱うことができます。
これを達成するため、サーバは接続ごとに新しいプロセスを開始（<quote>fork</quote>）します。
その時点から、クライアントと新しいサーバプロセスは元の<filename>postgres</filename>プロセスによる干渉がない状態で通信を行います。
こうして、マスターサーバは常に稼働し、クライアントとの接続を待ち、一方、クライアントと関連したサーバプロセスは通信を行います
（もちろんこれは全てユーザからはわかりません。ここでの説明は完全性のみを目的としています）。
   </para>
  </sect1>


  <sect1 id="tutorial-createdb">
<!--
   <title>Creating a Database</title>
-->
   <title>データベースの作成</title>

   <indexterm zone="tutorial-createdb">
<!--
    <primary>database</primary>
    <secondary>creating</secondary>
-->
    <primary>データベース</primary>
    <secondary>作成</secondary>
   </indexterm>

   <indexterm zone="tutorial-createdb">
    <primary>createdb</primary>
   </indexterm>

   <para>
<!--
    The first test to see whether you can access the database server
    is to try to create a database.  A running
    <productname>PostgreSQL</productname> server can manage many
    databases.  Typically, a separate database is used for each
    project or for each user.
-->
データベースサーバにアクセスできるかどうかがわかる最初の試験は、データベースの作成を試みることです。
稼働中の<productname>PostgreSQL</productname>サーバは多くのデータベースを管理することができます。
典型的には、プロジェクトやユーザごとにデータベースは分割されます。
   </para>

   <para>
<!--
    Possibly, your site administrator has already created a database
    for your use.  He should have told you what the name of your
    database is.  In that case you can omit this step and skip ahead
    to the next section.
-->
サイト管理者により使用できるデータベースが既に作成されている場合もあります。
その場合、管理者は使用できるデータベースの名前をユーザに通知しなければなりません。
この場合、この段階を飛ばして、次の節まで進んでください。
   </para>

   <para>
<!--
    To create a new database, in this example named
    <literal>mydb</literal>, you use the following command:
-->
新しいデータベースを作成するには、以下のコマンドを使用してください。
この例では<literal>mydb</literal>という名前です。
<screen>
<prompt>$</prompt> <userinput>createdb mydb</userinput>
</screen>
<!--
    If this produces no response then this step was successful and you can skip over the
    remainder of this section.
-->
この手順で何も応答がなければ、この段階は成功し、本節の残りは飛ばすことができます。
   </para>

   <para>
<!--
    If you see a message similar to:
-->
以下のようなメッセージが現れた場合、<productname>PostgreSQL</>が正しくインストールされていません。
<screen>
createdb: command not found
</screen>
<!--
    then <productname>PostgreSQL</> was not installed properly.  Either it was not
    installed at all or your shell's search path was not set to include it.
    Try calling the command with an absolute path instead:
-->
インストールがまったくされていないか使用しているシェルの検索パスが盛り込むように設定されていないのいずれかです。
代わりに絶対パスでそのコマンドを実行してみてください。
<screen>
<prompt>$</prompt> <userinput>/usr/local/pgsql/bin/createdb mydb</userinput>
</screen>
<!--
    The path at your site might be different.  Contact your site
    administrator or check the installation instructions to
    correct the situation.
-->
このパスはサイトによって異なるかもしれません。
この問題を解決するには、サイト管理者に連絡するか、インストール取扱説明書を調べてください。
   </para>

   <para>
<!--
    Another response could be this:
-->
他の応答として以下もあります。
<screen>
createdb: could not connect to database postgres: could not connect to server: No such file or directory
        Is the server running locally and accepting
        connections on Unix domain socket "/tmp/.s.PGSQL.5432"?
</screen>
<!--
    This means that the server was not started, or it was not started
    where <command>createdb</command> expected it.  Again, check the
    installation instructions or consult the administrator.
-->
これは、サーバが起動していないか、<command>createdb</command>が想定している状態でサーバが起動していないかを示しています。
こちらも、インストール手順を点検するか管理者に相談してください。
   </para>

   <para>
<!--
    Another response could be this:
-->
他の応答として以下もあります。
<screen>
createdb: could not connect to database postgres: FATAL:  role "joe" does not exist
</screen>
<!--
    where your own login name is mentioned.  This will happen if the
    administrator has not created a <productname>PostgreSQL</> user account
    for you.  (<productname>PostgreSQL</> user accounts are distinct from
    operating system user accounts.)  If you are the administrator, see
    <xref linkend="user-manag"> for help creating accounts.  You will need to
    become the operating system user under which <productname>PostgreSQL</>
    was installed (usually <literal>postgres</>) to create the first user
    account.  It could also be that you were assigned a
    <productname>PostgreSQL</> user name that is different from your
    operating system user name; in that case you need to use the <option>-U</>
    switch or set the <envar>PGUSER</> environment variable to specify your
    <productname>PostgreSQL</> user name.
-->
今回はログインした時のユーザ名が記載されています。
これは、管理者がそのユーザ用の<productname>PostgreSQL</>ユーザアカウントを作成していない時に起こります
（<productname>PostgreSQL</>ユーザアカウントは、オペレーティングシステムのユーザアカウントとは異なります）。
管理者であれば、アカウントの作成方法に関して<xref linkend="user-manag">を参照してください。
最初のユーザアカウントを作成するためには、<productname>PostgreSQL</>をインストールした時のオペレーティングシステムのユーザ（通常<literal>postgres</>）になる必要があります。
<productname>PostgreSQL</>ユーザアカウントがオペレーティングシステムのユーザ名と異なる名前で用意されているかもしれません。
その場合は、<productname>PostgreSQL</>のユーザ名を指定するために、<option>-U</>スイッチを使用するか、<envar>PGUSER</>環境変数を設定する必要があります。
   </para>

   <para>
<!--
    If you have a user account but it does not have the privileges required to
    create a database, you will see the following:
-->
ユーザアカウントを持っているが、データベースを作成するために必要な権限を持っていない場合は、以下のメッセージが現れます。
<screen>
createdb: database creation failed: ERROR:  permission denied to create database
</screen>
<!--
    Not every user has authorization to create new databases.  If
    <productname>PostgreSQL</productname> refuses to create databases
    for you then the site administrator needs to grant you permission
    to create databases.  Consult your site administrator if this
    occurs.  If you installed <productname>PostgreSQL</productname>
    yourself then you should log in for the purposes of this tutorial
    under the user account that you started the server as.
-->
全てのユーザがデータベースを新規に作成できる権限を持っているわけではありません。
<productname>PostgreSQL</productname>がデータベースの作成を拒否した場合、サイト管理者はデータベースを作成する権限をユーザに付与する必要があります。
これが発生した場合はサイト管理者に相談してください。
自身で<productname>PostgreSQL</productname>をインストールしたのであれば、このチュートリアルの目的のために、サーバを起動したユーザアカウントでログインしなければなりません。

    <footnote>
     <para>
<!--
      As an explanation for why this works:
      <productname>PostgreSQL</productname> user names are separate
      from operating system user accounts.  When you connect to a
      database, you can choose what
      <productname>PostgreSQL</productname> user name to connect as;
      if you don't, it will default to the same name as your current
      operating system account.  As it happens, there will always be a
      <productname>PostgreSQL</productname> user account that has the
      same name as the operating system user that started the server,
      and it also happens that that user always has permission to
      create databases.  Instead of logging in as that user you can
      also specify the <option>-U</option> option everywhere to select
      a <productname>PostgreSQL</productname> user name to connect as.
-->
何故これで上手くいくのかについての説明：<productname>PostgreSQL</productname>のユーザ名はオペレーティングシステムのユーザアカウントとは分離されています。
データベースに接続する場合、接続に利用する<productname>PostgreSQL</productname>のユーザ名を選択します。
選択しなければ、デフォルトで現在のオペレーティングシステムのアカウントと同じ名前となります。
これにより、サーバを起動するオペレーティングシステムのユーザと同じ名前の<productname>PostgreSQL</productname>ユーザアカウントは、常に存在します。 
そしてまた、このユーザは常にデータベースを作成する権限を持ちます。
そのユーザとしてログインする代わりに、<option>-U</option>オプションを毎回使用して、接続する<productname>PostgreSQL</productname>のユーザ名を選択することができます。
     </para>
    </footnote>
   </para>

   <para>
<!--
    You can also create databases with other names.
    <productname>PostgreSQL</productname> allows you to create any
    number of databases at a given site.  Database names must have an
    alphabetic first character and are limited to 63 bytes in
    length.  A convenient choice is to create a database with the same
    name as your current user name.  Many tools assume that database
    name as the default, so it can save you some typing.  To create
    that database, simply type:
-->
他の名前のデータベースを作成することもできます。
<productname>PostgreSQL</productname>は、与えられたサイトでいくつでもデータベースを作成することを許可しています。
データベース名は、先頭がアルファベット文字から始まる、63バイトまでの長さでなければなりません。
簡単な選択は、現在のユーザ名と同じ名前のデータベースを作成することです。
多くのツールでは、データベース名のデフォルトとしてそれを仮定していますので、これにより入力数を減らすことができます。
このデータベースを作成するには、単純に以下を実行します。
<screen>
<prompt>$</prompt> <userinput>createdb</userinput>
</screen>
   </para>

   <para>
<!--
    If you do not want to use your database anymore you can remove it.
    For example, if you are the owner (creator) of the database
    <literal>mydb</literal>, you can destroy it using the following
    command:
-->
データベースを使用しなくなったら、削除することができます。
例えば、<literal>mydb</literal>データベースの所有者（作成者）であれば、以下のコマンドでそれを廃棄することができます。
<screen>
<prompt>$</prompt> <userinput>dropdb mydb</userinput>
</screen>
<!--
    (For this command, the database name does not default to the user
    account name.  You always need to specify it.)  This action
    physically removes all files associated with the database and
    cannot be undone, so this should only be done with a great deal of
    forethought.
-->
（このコマンドでは、データベース名のデフォルトはユーザアカウント名ではありません。
常に指定しなければなりません。）
この動作は、そのデータベースに関する全てのファイルを物理的に削除しますので、取り消すことはできません。
事前に熟考した場合にのみこれを実施してください。
   </para>

   <para>
<!--
    More about <command>createdb</command> and <command>dropdb</command> can
    be found in <xref linkend="APP-CREATEDB"> and <xref linkend="APP-DROPDB">
    respectively.
-->
<command>createdb</command>や<command>dropdb</command>の詳細は、それぞれ<xref linkend="APP-CREATEDB">と<xref linkend="APP-DROPDB">にあります。
   </para>
  </sect1>


  <sect1 id="tutorial-accessdb">
<!--
   <title>Accessing a Database</title>
-->
   <title>データベースへのアクセス</title>

   <indexterm zone="tutorial-accessdb">
    <primary>psql</primary>
   </indexterm>

   <para>
<!--
    Once you have created a database, you can access it by:
-->
データベースを作成した後、以下によってアクセスできます。

    <itemizedlist spacing="compact" mark="bullet">
     <listitem>
      <para>
<!--
       Running the <productname>PostgreSQL</productname> interactive
       terminal program, called <application><firstterm>psql</></application>, which allows you
       to interactively enter, edit, and execute
       <acronym>SQL</acronym> commands.
-->
<application><firstterm>psql</></application>という<productname>PostgreSQL</productname>対話式端末プログラムを実行。
これにより、対話式に<acronym>SQL</acronym>コマンドの入力、編集、実行を行うことができます。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Using an existing graphical frontend tool like
       <application>pgAdmin</application> or an office suite with
       <acronym>ODBC</> or <acronym>JDBC</> support to create and manipulate a
       database.  These possibilities are not covered in this
       tutorial.
-->
データベースの作成や操作をサポートする<application>pgAdmin</application>や、<acronym>ODBC</acronym>もしくは<acronym>JDBC</>を備えたオフィススイートなどの既存のグラフィカルなフロントエンドツールを使用。
これらについてはこのチュートリアルでは取り上げません。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Writing a custom application, using one of the several
       available language bindings.  These possibilities are discussed
       further in <xref linkend="client-interfaces">.
-->
複数の使用可能言語の1つを使用した、独自のアプリケーションの作成。
これについては、<xref linkend="client-interfaces">で詳しく説明します。
      </para>
     </listitem>
    </itemizedlist>

<!--
    You probably want to start up <command>psql</command> to try
    the examples in this tutorial.  It can be activated for the
    <literal>mydb</literal> database by typing the command:
-->
このチュートリアルの例を試すには、<command>psql</command>から始めることを勧めます。
以下のコマンドを入力することによって、<literal>mydb</literal>データベースをアクティブにすることができます。
<screen>
<prompt>$</prompt> <userinput>psql mydb</userinput>
</screen>
<!--
    If you do not supply the database name then it will default to your
    user account name.  You already discovered this scheme in the
    previous section using <command>createdb</command>.
-->
データベース名を与えなかった場合、データベース名はデフォルトでユーザアカウント名となります。
この仕組みについては前節で<command>createdb</command>を使って既に説明しています。
   </para>

   <para>
<!--
    In <command>psql</command>, you will be greeted with the following
    message:
-->
<command>psql</command>では、始めに以下のメッセージが表示されます。
<screen>
psql (&version;)
Type "help" for help.

mydb=&gt;
</screen>
<!--
    <indexterm><primary>superuser</primary></indexterm>
    The last line could also be:
-->
    <indexterm><primary>スーパーユーザ</primary></indexterm>
最後の行は以下のようになっているかもしれません。
<screen>
mydb=#
</screen>
<!--
    That would mean you are a database superuser, which is most likely
    the case if you installed <productname>PostgreSQL</productname>
    yourself.  Being a superuser means that you are not subject to
    access controls.  For the purposes of this tutorial that is not
    important.
-->
これは、データベーススーパーユーザであることを示します。
自身で<productname>PostgreSQL</productname>をインストールした場合に最もよく現れます。
スーパーユーザであることは、アクセス制御の支配を受けないことを意味します。
チュートリアルの段階では、これは重要ではありません。
   </para>

   <para>
<!--
    If you encounter problems starting <command>psql</command>
    then go back to the previous section.  The diagnostics of
    <command>createdb</command> and <command>psql</command> are
    similar, and if the former worked the latter should work as well.
-->
<command>psql</command>の起動に問題が発生した場合は、前節に戻ってください。
<command>createdb</command>の診断と<command>psql</command>の診断方法は似ており、前者が動作すれば後者も同様に動作するはずです。
   </para>

   <para>
<!--
    The last line printed out by <command>psql</command> is the
    prompt, and it indicates that <command>psql</command> is listening
    to you and that you can type <acronym>SQL</acronym> queries into a
    work space maintained by <command>psql</command>.  Try out these
    commands:
-->
<command>psql</command>が最後に出力する行はプロンプトで、<command>psql</command>が入力を監視していること、<command>psql</command>が管理する作業領域に<acronym>SQL</acronym>問い合わせを入力できることを示しています。
以下のコマンドを試してください。
    <indexterm><primary>version</primary></indexterm>
<screen>
<prompt>mydb=&gt;</prompt> <userinput>SELECT version();</userinput>
                               version
 -----------------------------------------------------------------------
 PostgreSQL &version; on i586-pc-linux-gnu, compiled by GCC 2.96, 32-bit
(1 row)

<prompt>mydb=&gt;</prompt> <userinput>SELECT current_date;</userinput>
    date
------------
 2002-08-31
(1 row)

<prompt>mydb=&gt;</prompt> <userinput>SELECT 2 + 2;</userinput>
 ?column?
----------
        4
(1 row)
</screen>
   </para>

   <para>
<!--
    The <command>psql</command> program has a number of internal
    commands that are not SQL commands.  They begin with the backslash
    character, <quote><literal>\</literal></quote>.
    For example,
    you can get help on the syntax of various
    <productname>PostgreSQL</productname> <acronym>SQL</acronym>
    commands by typing:
-->
<command>psql</command>プログラムは、SQLコマンドではない、多くの内部コマンドを持っています。
それらはバックスラッシュ文字<quote><literal>\</literal></quote>から始まります。
例えば、各種<productname>PostgreSQL</productname> <acronym>SQL</acronym>コマンドの構文に関するヘルプを以下のようにして得ることができます。
<screen>
<prompt>mydb=&gt;</prompt> <userinput>\h</userinput>
</screen>
   </para>

   <para>
<!--
    To get out of <command>psql</command>, type:
-->
<command>psql</command>を終了するには、以下を入力します。
<screen>
<prompt>mydb=&gt;</prompt> <userinput>\q</userinput>
</screen>
<!--
    and <command>psql</command> will quit and return you to your
    command shell. (For more internal commands, type
    <literal>\?</literal> at the <command>psql</command> prompt.)  The
    full capabilities of <command>psql</command> are documented in
    <xref linkend="app-psql">.  In this tutorial we will not use these
    features explicitly, but you can use them yourself when it is helpful.
-->
<command>psql</command>は終了し、コマンドシェルに戻ります
（他の内部コマンドについては<command>psql</command>のプロンプトで<literal>\?</literal>を入力してください）。
<command>psql</command>の完全な能力については<xref linkend="app-psql">で説明されています。
このチュートリアルではこれらの機能は明示的に使用しませんが、便利な場合これらを使用しても構いません。
   </para>

  </sect1>
 </chapter>
